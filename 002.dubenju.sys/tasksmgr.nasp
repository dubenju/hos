[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_boxfill8
	EXTERN	_taskctl
	EXTERN	_sheet_refresh
	EXTERN	_sprintf
	EXTERN	_putfonts8_asc
	EXTERN	_memman_total
	EXTERN	_task_now
	EXTERN	_timer_alloc
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_make_window8
	EXTERN	_make_textbox8
	EXTERN	_taskmgr
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_keywin_on
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_timer_cancel
	EXTERN	_timer_free
	EXTERN	_memman_free_4k
	EXTERN	_sheet_free
	EXTERN	_fifo32_put_io
	EXTERN	_task_sleep
	EXTERN	_io_out8
	EXTERN	_io_in8
	EXTERN	_putfonts8_asc_sht
[FILE "tasksmgr.c"]
[SECTION .data]
LC1:
	DB	"CPU    :        %3d ",0x81,0x93,"     %4d TS",0x00
LC2:
	DB	"Memory :    %7d ",0x81,"^  %7d KB",0x00
LC0:
	DB	"%3d %-15s %1d %1d %1d",0x00
[SECTION .text]
	GLOBAL	_task_display
_task_display:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,60
	MOV	EAX,DWORD [8+EBP]
	PUSH	239
	PUSH	287
	PUSH	48
	PUSH	8
	PUSH	0
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	MOV	DWORD [-64+EBP],0
	CALL	_boxfill8
	MOV	EAX,DWORD [_taskctl]
	MOV	ESI,DWORD [12+EBP]
	ADD	ESP,28
	CMP	ESI,DWORD [214085+EAX]
	JGE	L3
	MOV	EDX,ESI
	IMUL	EDX,EDX,210
	MOV	DWORD [-72+EBP],48
	MOV	DWORD [-68+EBP],EDX
L8:
	MOV	EBX,DWORD [-68+EBP]
	ADD	EBX,EAX
	LEA	EDX,DWORD [4080+EBX]
	CMP	DWORD [9+EDX],0
	JNE	L14
L4:
	MOV	EAX,DWORD [_taskctl]
	INC	ESI
	ADD	DWORD [-68+EBP],210
	CMP	ESI,DWORD [214085+EAX]
	JL	L8
L3:
	CMP	DWORD [16+EBP],0
	JNE	L9
	PUSH	240
	PUSH	288
L13:
	PUSH	48
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L9:
	PUSH	281
	MOV	EDX,DWORD [8+EBP]
	PUSH	287
	MOV	EBX,10
	PUSH	250
	LEA	EDI,DWORD [-60+EBP]
	PUSH	8
	LEA	ESI,DWORD [-60+EBP]
	PUSH	7
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_boxfill8
	XOR	EAX,EAX
	CLD
	MOV	ECX,EBX
	REP
	STOSD
	MOV	EAX,DWORD [_taskctl]
	MOV	EDX,DWORD [20+EBP]
	CMP	EDX,100
	PUSH	DWORD [214089+EAX]
	JLE	L11
	MOV	EDX,100
L11:
	MOV	EAX,100
	MOV	EDI,ESI
	SUB	EAX,EDX
	PUSH	EAX
	PUSH	LC1
	PUSH	ESI
	CALL	_sprintf
	MOV	EDX,DWORD [8+EBP]
	ADD	ESP,44
	PUSH	ESI
	PUSH	1
	PUSH	4
	PUSH	250
	PUSH	12
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_putfonts8_asc
	XOR	EAX,EAX
	CLD
	MOV	ECX,EBX
	REP
	STOSD
	MOV	EAX,DWORD [24+EBP]
	SHR	EAX,10
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_total
	POP	EDX
	SUB	DWORD [24+EBP],EAX
	SHR	DWORD [24+EBP],10
	PUSH	DWORD [24+EBP]
	PUSH	LC2
	PUSH	ESI
	CALL	_sprintf
	MOV	EDX,DWORD [8+EBP]
	ADD	ESP,44
	PUSH	ESI
	PUSH	1
	PUSH	4
	PUSH	266
	PUSH	12
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_putfonts8_asc
	PUSH	382
	PUSH	588
	JMP	L13
L14:
	CLD
	XOR	EAX,EAX
	LEA	EDI,DWORD [-60+EBP]
	MOV	ECX,10
	REP
	STOSD
	PUSH	DWORD [9+EDX]
	PUSH	DWORD [17+EDX]
	PUSH	DWORD [13+EDX]
	LEA	EAX,DWORD [4275+EBX]
	LEA	EDI,DWORD [-60+EBP]
	PUSH	EAX
	PUSH	ESI
	PUSH	LC0
	PUSH	EDI
	CALL	_sprintf
	MOV	EAX,DWORD [8+EBP]
	PUSH	EDI
	INC	DWORD [-64+EBP]
	PUSH	1
	PUSH	7
	PUSH	DWORD [-72+EBP]
	PUSH	12
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	ADD	DWORD [-72+EBP],16
	CALL	_putfonts8_asc
	ADD	ESP,56
	CMP	DWORD [-64+EBP],11
	JLE	L4
	JMP	L3
[SECTION .data]
LC5:
	DB	" ID NAME           LV  TIME",0x00
LC3:
	DB	"tmg",0x00
LC4:
	DB	"taskmgr",0x00
[SECTION .text]
	GLOBAL	_taskmgr_task
_taskmgr_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,LC5
	PUSH	EBX
	SUB	ESP,108
	MOV	DWORD [-96+EBP],0
	CALL	_task_now
	PUSH	LC3
	MOV	DWORD [-100+EBP],EAX
	CALL	_timer_alloc
	MOV	EDX,DWORD [4068]
	MOV	DWORD [-104+EBP],EAX
	MOV	DWORD [-112+EBP],EDX
	MOV	EAX,DWORD [4076]
	PUSH	EDX
	MOV	DWORD [-108+EBP],EAX
	CALL	_sheet_alloc
	PUSH	171680
	PUSH	3932160
	MOV	DWORD [-116+EBP],EAX
	CALL	_memman_alloc_4k
	MOV	EDI,DWORD [-100+EBP]
	MOV	EBX,EAX
	MOV	BYTE [188+EDI],1
	PUSH	-1
	PUSH	290
	PUSH	296
	PUSH	EAX
	PUSH	DWORD [-116+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,36
	PUSH	0
	PUSH	LC4
	PUSH	290
	PUSH	296
	PUSH	EBX
	CALL	_make_window8
	PUSH	0
	PUSH	212
	PUSH	280
	PUSH	28
	PUSH	8
	PUSH	DWORD [-116+EBP]
	CALL	_make_textbox8
	ADD	ESP,44
	PUSH	7
	PUSH	32
	PUSH	280
	PUSH	250
	PUSH	8
	PUSH	DWORD [-116+EBP]
	CALL	_make_textbox8
	MOV	ECX,20
	CLD
	LEA	EAX,DWORD [-92+EBP]
	MOV	DWORD [-120+EBP],EAX
	MOV	EDI,EAX
	MOV	EAX,DWORD [-96+EBP]
	REP
	STOSD
	MOV	ECX,7
	LEA	EDI,DWORD [-92+EBP]
	REP
	MOVSD
	LEA	EAX,DWORD [-92+EBP]
	MOV	EDX,DWORD [-116+EBP]
	PUSH	EAX
	PUSH	1
	PUSH	7
	PUSH	29
	PUSH	13
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_putfonts8_asc
	ADD	ESP,52
	MOV	EDI,DWORD [-116+EBP]
	MOV	EAX,DWORD [_taskmgr]
	MOV	DWORD [36+EDI],EAX
	PUSH	8
	PUSH	336
	PUSH	EDI
	CALL	_sheet_slide
	MOV	EAX,DWORD [-112+EBP]
	PUSH	DWORD [16+EAX]
	PUSH	EDI
	CALL	_sheet_updown
	PUSH	EDI
	CALL	_keywin_on
	MOV	EAX,DWORD [-100+EBP]
	PUSH	1
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [-104+EBP]
	CALL	_timer_init
	ADD	ESP,36
	MOV	EAX,DWORD [_taskctl]
	MOV	ESI,DWORD [4501+EAX]
	PUSH	1
	PUSH	DWORD [-104+EBP]
	SUB	ESI,99
	CALL	_timer_settime
	POP	ECX
	POP	EBX
L16:
	CALL	_io_cli
	MOV	EBX,DWORD [-100+EBP]
	ADD	EBX,16
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L35
	PUSH	EBX
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EDI
	CMP	EBX,1
	JE	L36
	CMP	EBX,4
	JE	L34
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JA	L16
	CMP	EBX,306
	JE	L37
	CMP	EBX,312
	JE	L38
L28:
	PUSH	0
	PUSH	0
	PUSH	0
	PUSH	DWORD [-96+EBP]
	PUSH	DWORD [-116+EBP]
	CALL	_task_display
	ADD	ESP,20
	JMP	L16
L38:
	CMP	DWORD [-96+EBP],0
	JLE	L28
	DEC	DWORD [-96+EBP]
	JMP	L28
L37:
	MOV	EAX,DWORD [_taskctl]
	MOV	EAX,DWORD [214089+EAX]
	SUB	EAX,12
	CMP	DWORD [-96+EBP],EAX
	JGE	L28
	INC	DWORD [-96+EBP]
	JMP	L28
L34:
	PUSH	DWORD [-104+EBP]
	CALL	_timer_cancel
	POP	EBX
	PUSH	DWORD [-104+EBP]
	CALL	_timer_free
	MOV	EDX,DWORD [-116+EBP]
	PUSH	171680
	PUSH	DWORD [EDX]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [-116+EBP]
	CALL	_sheet_free
	PUSH	2280
	PUSH	DWORD [-108+EBP]
	CALL	_fifo32_put_io
	ADD	ESP,28
L31:
	PUSH	DWORD [-100+EBP]
	CALL	_task_sleep
	POP	ECX
	JMP	L31
L36:
	PUSH	100
	PUSH	DWORD [-104+EBP]
	CALL	_timer_settime
	MOV	EAX,DWORD [_taskctl]
	MOV	EBX,DWORD [4501+EAX]
	MOV	EAX,EBX
	PUSH	DWORD [8+EBP]
	SUB	EAX,ESI
	MOV	ESI,EBX
	PUSH	EAX
	PUSH	1
	PUSH	DWORD [-96+EBP]
	PUSH	DWORD [-116+EBP]
	CALL	_task_display
	ADD	ESP,28
	JMP	L16
L35:
	PUSH	DWORD [-100+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EAX
	JMP	L16
[SECTION .data]
_adr.0:
	DB	0
	DB	2
	DB	4
	DB	7
	DB	8
	DB	9
	DB	50
_max.1:
	DB	96
	DB	89
	DB	35
	DB	49
	DB	18
	DB	-103
	DB	-103
LC6:
	DB	"sck",0x00
LC7:
	DB	"test",0x00
[SECTION .text]
	GLOBAL	_sysclock_task
_sysclock_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,28
	CALL	_task_now
	PUSH	LC6
	MOV	DWORD [-36+EBP],EAX
	CALL	_timer_alloc
	PUSH	1
	MOV	DWORD [-40+EBP],EAX
	MOV	EAX,DWORD [-36+EBP]
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [-40+EBP]
	CALL	_timer_init
	PUSH	100
	PUSH	DWORD [-40+EBP]
	CALL	_timer_settime
	ADD	ESP,24
L40:
	CALL	_io_cli
	MOV	EBX,DWORD [-36+EBP]
	ADD	EBX,16
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L69
	PUSH	EBX
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EAX
	DEC	EBX
	JNE	L40
	XOR	EDI,EDI
L63:
	MOV	BYTE [-29+EBP],0
	XOR	ESI,ESI
L54:
	MOVZX	EAX,BYTE [_adr.0+ESI]
	PUSH	EAX
	PUSH	112
	CALL	_io_out8
	PUSH	113
	CALL	_io_in8
	ADD	ESP,12
	MOV	BYTE [_t+ESI],AL
	INC	ESI
	CMP	ESI,6
	JLE	L54
	XOR	ESI,ESI
L61:
	MOVZX	EAX,BYTE [_adr.0+ESI]
	PUSH	EAX
	PUSH	112
	CALL	_io_out8
	PUSH	113
	MOVZX	EBX,BYTE [_t+ESI]
	CALL	_io_in8
	ADD	ESP,12
	CMP	EBX,EAX
	JE	L70
L60:
	MOV	BYTE [-29+EBP],1
L57:
	INC	ESI
	CMP	ESI,6
	JLE	L61
	CMP	BYTE [-29+EBP],0
	JE	L47
	INC	EDI
	MOV	EAX,EDI
	CMP	AL,2
	JLE	L63
L47:
	MOV	ESI,DWORD [1508]
	LEA	EBX,DWORD [-28+EBP]
	PUSH	LC7
	ADD	ESI,1044
	PUSH	EBX
	MOV	DWORD [-28+EBP],0
	MOV	WORD [-24+EBP],0
	CALL	_sprintf
	PUSH	5
	PUSH	EBX
	PUSH	3
	PUSH	2
	MOV	EAX,DWORD [8+ESI]
	SUB	EAX,21
	PUSH	EAX
	MOV	EAX,DWORD [4+ESI]
	SUB	EAX,45
	PUSH	EAX
	PUSH	ESI
	CALL	_putfonts8_asc_sht
	ADD	ESP,36
	PUSH	100
	PUSH	DWORD [-40+EBP]
	CALL	_timer_settime
	POP	ESI
	POP	EDI
	JMP	L40
L70:
	MOV	DL,BYTE [_t+ESI]
	MOV	AL,DL
	AND	EAX,15
	CMP	AL,9
	JA	L60
	CMP	DL,BYTE [_max.1+ESI]
	JBE	L57
	JMP	L60
L69:
	PUSH	DWORD [-36+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EAX
	JMP	L40
	GLOBAL	_t
[SECTION .data]
	ALIGNB	4
_t:
	RESB	7
