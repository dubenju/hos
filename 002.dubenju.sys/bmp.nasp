[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_memman_alloc_4k
	EXTERN	_u_fat
	EXTERN	_hrb_api_fopen
	EXTERN	_hrb_api_fclose
	EXTERN	_memman_free_4k
	EXTERN	_hrb_api_fwrite
[FILE "bmp.c"]
[SECTION .data]
LC0:
	DB	"/screen.bmp",0x00
[SECTION .text]
	GLOBAL	_bmp_conv
_bmp_conv:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,4
	SUB	ESP,116
	MOV	ESI,DWORD [8+EBP]
	MOV	ECX,DWORD [4068]
	MOV	EAX,ESI
	MOV	DWORD [-124+EBP],ECX
	CDQ
	IDIV	EBX
	MOV	EAX,EBX
	SUB	EAX,EDX
	CDQ
	IDIV	EBX
	LEA	EDX,DWORD [EDX+ESI*1]
	MOV	EBX,EDX
	MOV	DWORD [-116+EBP],EDX
	IMUL	EBX,DWORD [12+EBP]
	IMUL	EBX,EBX,3
	PUSH	EBX
	PUSH	3932160
	CALL	_memman_alloc_4k
	POP	EDX
	MOV	EDI,EAX
	MOV	DWORD [-72+EBP],ESI
	LEA	EAX,DWORD [54+EBX]
	MOV	DWORD [-56+EBP],EBX
	MOV	DWORD [-24+EBP],EAX
	POP	ECX
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [-112+EBP],0
	MOV	WORD [-26+EBP],19778
	MOV	WORD [-20+EBP],0
	MOV	WORD [-18+EBP],0
	MOV	DWORD [-16+EBP],54
	MOV	DWORD [-76+EBP],40
	MOV	DWORD [-68+EBP],EAX
	CMP	DWORD [-112+EBP],EAX
	MOV	WORD [-64+EBP],1
	MOV	WORD [-62+EBP],24
	MOV	DWORD [-60+EBP],0
	MOV	DWORD [-52+EBP],0
	MOV	DWORD [-48+EBP],0
	MOV	DWORD [-44+EBP],0
	MOV	DWORD [-40+EBP],0
	JGE	L19
L16:
	XOR	ESI,ESI
	CMP	ESI,DWORD [-72+EBP]
	JGE	L21
L10:
	MOV	EAX,DWORD [-112+EBP]
	MOV	EDX,DWORD [-124+EBP]
	NOT	EAX
	ADD	EAX,DWORD [-68+EBP]
	MOV	ECX,DWORD [-112+EBP]
	IMUL	ECX,DWORD [8+EDX]
	IMUL	EAX,DWORD [-116+EBP]
	ADD	EAX,ESI
	ADD	ECX,ESI
	IMUL	EBX,EAX,3
	MOV	EAX,DWORD [16+EBP]
	INC	ESI
	MOV	DX,WORD [EAX+ECX*2]
	MOV	EAX,EDX
	SHR	AX,2
	AND	EAX,7
	LEA	EAX,DWORD [EAX+EDX*8]
	MOV	BYTE [EBX+EDI*1],AL
	MOV	EDX,DWORD [16+EBP]
	MOV	AX,WORD [EDX+ECX*2]
	SHR	AX,3
	MOV	DL,AL
	SHR	AX,6
	AND	EAX,3
	AND	EDX,-4
	ADD	EDX,EAX
	MOV	BYTE [1+EBX+EDI*1],DL
	MOV	EAX,DWORD [16+EBP]
	MOV	EDX,DWORD [16+EBP]
	MOV	AX,WORD [EAX+ECX*2]
	MOV	WORD [-126+EBP],AX
	MOV	AL,BYTE [1+EDX+ECX*2]
	MOV	DX,WORD [-126+EBP]
	AND	EAX,-8
	SHR	DX,13
	ADD	EAX,EDX
	MOV	BYTE [2+EBX+EDI*1],AL
	CMP	ESI,DWORD [-72+EBP]
	JL	L10
L21:
	MOV	ESI,DWORD [-72+EBP]
	CMP	ESI,DWORD [-116+EBP]
	JGE	L23
L15:
	MOV	EAX,DWORD [-112+EBP]
	NOT	EAX
	ADD	EAX,DWORD [-68+EBP]
	IMUL	EAX,DWORD [-116+EBP]
	ADD	EAX,ESI
	INC	ESI
	IMUL	EBX,EAX,3
	MOV	BYTE [EBX+EDI*1],0
	MOV	BYTE [1+EBX+EDI*1],0
	MOV	BYTE [2+EBX+EDI*1],0
	CMP	ESI,DWORD [-116+EBP]
	JL	L15
L23:
	INC	DWORD [-112+EBP]
	MOV	ECX,DWORD [-112+EBP]
	CMP	ECX,DWORD [-68+EBP]
	JL	L16
L19:
	PUSH	DWORD [_u_fat]
	LEA	EBX,DWORD [-108+EBP]
	PUSH	EBX
	PUSH	16
	PUSH	LC0
	CALL	_hrb_api_fopen
	ADD	ESP,16
	TEST	EAX,EAX
	JNE	L24
L17:
	PUSH	DWORD [_u_fat]
	PUSH	EBX
	CALL	_hrb_api_fclose
	MOV	EAX,DWORD [-116+EBP]
	IMUL	EAX,DWORD [12+EBP]
	MOV	DWORD [-116+EBP],EAX
	IMUL	EAX,EAX,3
	PUSH	EAX
	PUSH	EDI
	PUSH	3932160
	CALL	_memman_free_4k
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L24:
	PUSH	DWORD [_u_fat]
	PUSH	EBX
	LEA	EAX,DWORD [-26+EBP]
	PUSH	14
	PUSH	EAX
	CALL	_hrb_api_fwrite
	LEA	EAX,DWORD [-76+EBP]
	PUSH	DWORD [_u_fat]
	PUSH	EBX
	PUSH	40
	PUSH	EAX
	CALL	_hrb_api_fwrite
	MOV	EAX,DWORD [-116+EBP]
	IMUL	EAX,DWORD [12+EBP]
	IMUL	EAX,EAX,3
	ADD	ESP,32
	PUSH	DWORD [_u_fat]
	PUSH	EBX
	PUSH	EAX
	PUSH	EDI
	CALL	_hrb_api_fwrite
	ADD	ESP,16
	JMP	L17
