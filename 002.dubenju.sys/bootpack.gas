	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC0:
	.ascii "\12Create sheet\12\0"
LC2:
	.ascii "vmode<>8\12\0"
LC3:
	.ascii "stsno:%d.\12\0"
LC4:
	.ascii "ststo:%d.\12\0"
LC5:
	.ascii "psec:%d.\12\0"
LC6:
	.ascii "scft:%d.\12\0"
LC7:
	.ascii "Open Console\12\0"
LC8:
	.ascii "browser\0"
LC9:
	.ascii "fong size:%d.\12\0"
LC10:
	.ascii "Load Font from disk\12\0"
LC12:
	.ascii "Load Font End\12\0"
LC13:
	.ascii "Init Menu\12\0"
LC17:
	.ascii "right:%d.\12\0"
LC18:
	.ascii "left:%d.\12\0"
LC19:
	.ascii "\12Break(mouse) :\12\0"
LC16:
	.ascii "Shift+F2 Open Console.\12\0"
LC15:
	.ascii "\12Break(key) :(Shift+F1)\12\0"
LC14:
	.ascii "==Print Screen ==\12\0"
LC11:
	.ascii "Load Font from coding.\12\0"
LC1:
	.ascii "vmode=8\12\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-92(%ebp), %ebx
	subl	$1588, %esp
	movl	$-1, -1520(%ebp)
	movl	$0, -1524(%ebp)
	movl	$2147483647, -1528(%ebp)
	movl	$0, -1532(%ebp)
	movl	$0, -1556(%ebp)
	movl	$0, -1564(%ebp)
	movb	1521, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1568(%ebp)
	movl	$-1, -1572(%ebp)
	movl	$-1, -1576(%ebp)
	movl	$-1, -1580(%ebp)
	movl	$0, -1584(%ebp)
	movl	$-1, -1592(%ebp)
	movb	$0, _fat_flag
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-604(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	movl	%ebx, 1516
	call	_init_pit
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	addl	$36, %esp
	pushl	$184
	pushl	$33
	call	_io_out8
	pushl	$47
	pushl	$161
	call	_io_out8
	leal	-764(%ebp), %eax
	pushl	$0
	pushl	%eax
	leal	-636(%ebp), %eax
	pushl	$32
	pushl	%eax
	call	_fifo32_init
	addl	$32, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -1536(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$65536
	pushl	$3932160
	call	_memman_free
	movl	-1536(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	1528
	pushl	$3932160
	call	_shtctl_init
	pushl	$3932160
	movl	%eax, -1540(%ebp)
	call	_task_init
	pushl	$2
	pushl	$1
	movl	%eax, -1560(%ebp)
	pushl	%eax
	movl	%eax, -68(%ebp)
	call	_task_run
	addl	$32, %esp
	movl	-1560(%ebp), %eax
	movl	-1540(%ebp), %ecx
	movl	%ecx, 1508
	movb	$0, 188(%eax)
	pushl	%ecx
	call	_sheet_alloc
	movswl	1526,%edx
	movl	%eax, -1544(%ebp)
	movswl	1524,%eax
	imull	%edx, %eax
	addl	%eax, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1544(%ebp)
	call	_sheet_setbuf
	addl	$32, %esp
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	%ebx
	call	_init_screen8
	movl	-1544(%ebp), %edx
	movl	$0, 40(%edx)
	pushl	%edx
	call	_dbg_init
	pushl	$7
	pushl	$LC0
	call	_dbg_putstr0
	addl	$24, %esp
	cmpb	$8, 1522
	je	L152
	pushl	$7
	pushl	$LC2
L141:
	leal	-1500(%ebp), %edi
	call	_dbg_putstr0
	popl	%ecx
	leal	-1500(%ebp), %edx
	popl	%ebx
	movl	$41, %ecx
	xorl	%ebx, %ebx
	cld
	movb	%bl, %al
	rep
	stosb
	pushl	1990
	pushl	$LC3
	leal	-1500(%ebp), %edi
	pushl	%edx
	call	_sprintf
	leal	-1500(%ebp), %ecx
	pushl	$7
	pushl	%ecx
	call	_dbg_putstr0
	leal	-1500(%ebp), %edx
	cld
	movb	%bl, %al
	movl	$41, %ecx
	rep
	stosb
	pushl	1994
	pushl	$LC4
	leal	-1500(%ebp), %edi
	pushl	%edx
	call	_sprintf
	leal	-1500(%ebp), %ecx
	addl	$32, %esp
	pushl	$7
	pushl	%ecx
	call	_dbg_putstr0
	leal	-1500(%ebp), %edx
	cld
	movb	%bl, %al
	movl	$41, %ecx
	rep
	stosb
	movzwl	31755, %eax
	pushl	%eax
	leal	-1500(%ebp), %edi
	pushl	$LC5
	pushl	%edx
	call	_sprintf
	leal	-1500(%ebp), %ecx
	pushl	$7
	pushl	%ecx
	call	_dbg_putstr0
	leal	-1500(%ebp), %edx
	cld
	movb	%bl, %al
	movl	$41, %ecx
	rep
	stosb
	movzwl	31766, %eax
	pushl	%eax
	leal	-1292(%ebp), %ebx
	pushl	$LC6
	pushl	%edx
	call	_sprintf
	leal	-1500(%ebp), %ecx
	addl	$40, %esp
	pushl	$7
	pushl	%ecx
	call	_dbg_putstr0
	pushl	-1536(%ebp)
	pushl	-1540(%ebp)
	call	_open_console
	movl	$0, 40(%eax)
	pushl	$7
	movl	%eax, -1552(%ebp)
	pushl	$LC7
	call	_dbg_putstr0
	pushl	-1540(%ebp)
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	pushl	$16
	movl	%eax, -1548(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$48, %esp
	pushl	$99
	pushl	%ebx
	call	_init_mouse_cursor8
	pushl	-1540(%ebp)
	call	_sheet_alloc
	pushl	$480000
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$99
	pushl	$400
	movl	%eax, %esi
	pushl	$600
	pushl	%eax
	pushl	%ebx
	call	_sheet_setbuf
	addl	$40, %esp
	pushl	$0
	pushl	$LC8
	pushl	$400
	pushl	$600
	pushl	%esi
	call	_make_window8
	call	_task_alloc
	movl	%eax, 36(%ebx)
	pushl	$512
	pushl	$3932160
	call	_memman_alloc_4k
	movl	36(%ebx), %esi
	pushl	$65536
	movl	%eax, %edi
	pushl	$3932160
	call	_memman_alloc_4k
	addl	$36, %esp
	addl	$65528, %eax
	movl	%eax, 100(%esi)
	movl	$2, %esi
	movl	36(%ebx), %eax
	movl	$2003792482, 190(%eax)
	movl	$7497075, 194(%eax)
	movl	36(%ebx), %edx
	movl	$_browser_task, 76(%eax)
	movl	$8, 116(%eax)
	movl	$16, 120(%eax)
	movl	$8, 124(%eax)
	movl	$8, 128(%eax)
	movl	$8, 132(%eax)
	movl	$8, 136(%eax)
	movl	100(%edx), %eax
	movl	%ebx, 4(%eax)
	movl	100(%edx), %eax
	movl	-1536(%ebp), %edx
	movl	%edx, 8(%eax)
	pushl	$2
	pushl	$3
	pushl	36(%ebx)
	call	_task_run
	pushl	36(%ebx)
	pushl	%edi
	pushl	$128
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_init
	movswl	1524,%eax
	movl	$_brow_callback, 40(%ebx)
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%esi
	movl	%eax, -1512(%ebp)
	movswl	1526,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%esi
	pushl	-1544(%ebp)
	movl	%eax, -1516(%ebp)
	call	_sheet_slide
	addl	$40, %esp
	pushl	$16
	pushl	$148
	pushl	-1552(%ebp)
	call	_sheet_slide
	pushl	-1516(%ebp)
	pushl	-1512(%ebp)
	pushl	-1548(%ebp)
	call	_sheet_slide
	pushl	$8
	pushl	$144
	pushl	%ebx
	call	_sheet_slide
	addl	$36, %esp
	pushl	$0
	pushl	-1544(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	%ebx
	leal	-636(%ebp), %ebx
	call	_sheet_updown
	pushl	$2
	pushl	-1552(%ebp)
	call	_sheet_updown
	pushl	$3
	pushl	-1548(%ebp)
	call	_sheet_updown
	addl	$32, %esp
	pushl	-1552(%ebp)
	call	_keywin_on
	call	_io_cli
	pushl	$237
	pushl	%ebx
	call	_fifo32_put
	pushl	-1568(%ebp)
	pushl	%ebx
	call	_fifo32_put
	call	_io_sti
	xorl	%eax, %eax
	addl	$20, %esp
	testl	%eax, %eax
	je	L4
	movb	11, %dl
	andl	$24, %edx
	jne	L4
	movl	28, %eax
	movl	$41, %ecx
	cld
	movl	%eax, -1504(%ebp)
	leal	-1500(%ebp), %edi
	movb	%dl, %al
	leal	-1500(%ebp), %edx
	rep
	stosb
	pushl	-1504(%ebp)
	pushl	$LC9
	pushl	%edx
	call	_sprintf
	leal	-1500(%ebp), %ecx
	pushl	$7
	pushl	%ecx
	call	_dbg_putstr0
	leal	-1504(%ebp), %eax
	pushl	_u_fat
	pushl	%eax
	movzwl	26, %eax
	pushl	%eax
	call	_file_loadfile2
	addl	$32, %esp
	movl	%eax, %ebx
	pushl	$7
	pushl	$LC10
L142:
	call	_dbg_putstr0
	popl	%esi
	popl	%edi
	movl	%ebx, 1512
	pushl	$7
	pushl	$LC12
	call	_dbg_putstr0
	leal	-1508(%ebp), %eax
	pushl	%eax
	leal	-1452(%ebp), %eax
	pushl	%eax
	call	_init_menu
	pushl	$7
	pushl	$LC13
	call	_dbg_putstr0
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, %esi
	call	_memman_alloc_4k
	addl	$32, %esp
	movl	%eax, %ebx
	pushl	$65536
	pushl	$3932160
	call	_memman_alloc_4k
	addl	$65536, %eax
	movl	%eax, 100(%esi)
	movl	$_sysclock_task, 76(%esi)
	movl	$8, 116(%esi)
	movl	$16, 120(%esi)
	movl	$8, 124(%esi)
	movl	$8, 128(%esi)
	movl	$8, 132(%esi)
	movl	$8, 136(%esi)
	movl	$1668512115, 190(%esi)
	movl	$1801678700, 194(%esi)
	movb	$0, 198(%esi)
	pushl	$2
	pushl	$1
	pushl	%esi
	call	_task_run
	leal	16(%esi), %eax
	movb	$0, 188(%esi)
	pushl	%esi
	pushl	%ebx
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	addl	$36, %esp
L16:
	leal	-636(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%ecx
	testl	%eax, %eax
	jle	L19
	cmpl	$0, -1572(%ebp)
	js	L153
L19:
	leal	-92(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	je	L154
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1504(%ebp)
	call	_io_sti
	popl	%esi
	cmpl	$0, -1552(%ebp)
	je	L46
	movl	-1552(%ebp), %edx
	cmpl	$0, 28(%edx)
	jne	L46
	movl	-1540(%ebp), %ecx
	movl	$0, -1552(%ebp)
	movl	16(%ecx), %eax
	cmpl	$1, %eax
	je	L46
	movl	-1540(%ebp), %edx
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1552(%ebp)
	call	_keywin_on
	popl	%ebx
L46:
	movl	-1504(%ebp), %edx
	leal	-256(%edx), %eax
	cmpl	$255, %eax
	jbe	L50
	leal	-4352(%edx), %eax
	cmpl	$255, %eax
	jbe	L50
	leal	-512(%edx), %eax
	cmpl	$255, %eax
	jbe	L155
	leal	-768(%edx), %eax
	cmpl	$255, %eax
	jbe	L156
	leal	-1024(%edx), %eax
	cmpl	$999, %eax
	jbe	L157
	leal	-2024(%edx), %eax
	cmpl	$255, %eax
	jbe	L158
	cmpl	$2280, %edx
	jne	L16
	call	_close_taskmgr
	jmp	L16
L158:
	imull	$44, %edx, %eax
	addl	-1540(%ebp), %eax
	pushl	$42240
	pushl	-88012(%eax)
	pushl	$3932160
	leal	-88012(%eax), %ebx
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	addl	$16, %esp
	jmp	L16
L157:
	imull	$210, %edx, %edx
	addl	_taskctl, %edx
	leal	-210955(%edx), %eax
	pushl	%eax
	call	_close_constask
L143:
	popl	%eax
	jmp	L16
L156:
	imull	$44, %edx, %eax
	movl	-1540(%ebp), %ecx
	leal	-32748(%eax,%ecx), %eax
	pushl	%eax
	call	_close_console
	jmp	L143
L155:
	movzbl	-1504(%ebp), %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	je	L16
	movl	-772(%ebp), %ecx
	movl	-776(%ebp), %eax
	addl	%ecx, -1516(%ebp)
	addl	%eax, -1512(%ebp)
	js	L159
L87:
	cmpl	$0, -1516(%ebp)
	js	L160
L88:
	movswl	1524,%eax
	decl	%eax
	cmpl	%eax, -1512(%ebp)
	jle	L89
	movl	%eax, -1512(%ebp)
L89:
	movswl	1526,%eax
	decl	%eax
	cmpl	%eax, -1516(%ebp)
	jle	L90
	movl	%eax, -1516(%ebp)
L90:
	movl	-1512(%ebp), %edx
	movl	-1516(%ebp), %ecx
	movl	%edx, -1520(%ebp)
	movl	%ecx, -1524(%ebp)
	testl	$2, -768(%ebp)
	je	L93
	cld
	xorl	%eax, %eax
	leal	-1500(%ebp), %edi
	movl	$41, %ecx
	leal	-1500(%ebp), %ebx
	rep
	stosb
	pushl	-768(%ebp)
	pushl	$LC17
	pushl	%ebx
	call	_sprintf
	pushl	$7
	pushl	%ebx
	call	_dbg_putstr0
	addl	$20, %esp
	cmpl	$511, -1504(%ebp)
	jle	L92
	cmpl	$0, -1552(%ebp)
	je	L92
	call	_io_cli
	movl	-1552(%ebp), %edx
	pushl	-1504(%ebp)
	movl	36(%edx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	popl	%esi
	popl	%edi
L92:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_set_mouse_cursorl8
	popl	%ecx
	popl	%ebx
L93:
	testl	$1, -768(%ebp)
	jne	L161
	movl	$-1, -1576(%ebp)
	cmpl	$2147483647, -1528(%ebp)
	jne	L151
	cmpl	$-1, -1592(%ebp)
	je	L16
	imull	$20, -1592(%ebp), %edx
	movl	-1516(%ebp), %esi
	movl	-1512(%ebp), %edi
	movl	-1448(%ebp,%edx), %eax
	subl	16(%eax), %esi
	subl	12(%eax), %edi
	pushl	%esi
	leal	-1452(%edx,%ebp), %eax
	pushl	%edi
	pushl	%eax
	call	_select_menu
L144:
	addl	$12, %esp
	jmp	L16
L151:
	pushl	-1532(%ebp)
	pushl	-1528(%ebp)
	pushl	-1556(%ebp)
	call	_sheet_slide
	movl	$2147483647, -1528(%ebp)
	jmp	L144
L161:
	cld
	xorl	%eax, %eax
	leal	-1500(%ebp), %edi
	movl	$41, %ecx
	leal	-1500(%ebp), %ebx
	rep
	stosb
	pushl	-768(%ebp)
	pushl	$LC18
	pushl	%ebx
	call	_sprintf
	pushl	$7
	pushl	%ebx
	call	_dbg_putstr0
	leal	-1292(%ebp), %eax
	pushl	$99
	pushl	%eax
	call	_init_mouse_cursor8
	addl	$28, %esp
	cmpl	$511, -1504(%ebp)
	jle	L95
	cmpl	$0, -1552(%ebp)
	je	L95
	call	_io_cli
	movl	-1552(%ebp), %ecx
	pushl	-1504(%ebp)
	movl	36(%ecx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	popl	%eax
	popl	%edx
L95:
	cmpl	$0, -1576(%ebp)
	js	L162
	movl	-1512(%ebp), %edi
	movl	-1584(%ebp), %eax
	subl	-1576(%ebp), %edi
	movl	-1516(%ebp), %esi
	subl	-1580(%ebp), %esi
	movl	-1516(%ebp), %edx
	leal	2(%edi,%eax), %edi
	movl	%edx, -1580(%ebp)
	movl	%edi, -1528(%ebp)
	addl	%esi, -1532(%ebp)
	andl	$-4, -1528(%ebp)
	jmp	L16
L162:
	cmpl	$-1, -1592(%ebp)
	jne	L163
	movl	-1540(%ebp), %edx
	movl	$0, -1588(%ebp)
	movl	16(%edx), %ebx
	leal	-1(%ebx), %ecx
	testl	%ecx, %ecx
	jle	L106
L117:
	movl	-1540(%ebp), %eax
	movl	-1516(%ebp), %esi
	movl	-1512(%ebp), %edi
	movl	20(%eax,%ecx,4), %eax
	movl	%eax, -1556(%ebp)
	subl	16(%eax), %esi
	subl	12(%eax), %edi
	js	L107
	movl	4(%eax), %eax
	cmpl	%eax, %edi
	jge	L107
	testl	%esi, %esi
	js	L107
	movl	-1556(%ebp), %edx
	cmpl	8(%edx), %esi
	jge	L107
	testb	$1, 29(%edx)
	jne	L107
	imull	%esi, %eax
	addl	%edi, %eax
	movl	(%edx), %edx
	movl	%eax, -1600(%ebp)
	movl	-1600(%ebp), %eax
	movzwl	(%edx,%eax,2), %edx
	movl	-1556(%ebp), %eax
	cmpl	20(%eax), %edx
	jne	L164
L107:
	decl	%ecx
	testl	%ecx, %ecx
	jg	L117
L106:
	cmpl	$0, -1588(%ebp)
	jne	L16
	cmpl	$-1, -1592(%ebp)
	jne	L16
	movl	-1540(%ebp), %edx
	movl	-1512(%ebp), %eax
	subl	$2, %eax
	movl	20(%edx), %edx
	cmpl	$58, %eax
	movl	%edx, -1556(%ebp)
	ja	L16
	movl	%edx, %ecx
	movl	8(%edx), %edx
	leal	-24(%edx), %eax
	cmpl	-1516(%ebp), %eax
	jg	L16
	leal	-3(%edx), %eax
	cmpl	%eax, -1516(%ebp)
	jg	L16
	pushl	-1508(%ebp)
	leal	-1452(%ebp), %eax
	pushl	%eax
	pushl	%ecx
	call	_open_menu
	movl	%eax, -1592(%ebp)
	jmp	L144
L164:
	leal	-1(%ebx), %eax
	pushl	%eax
	pushl	-1556(%ebp)
	call	_sheet_updown
	popl	%eax
	popl	%edx
	movl	-1552(%ebp), %edx
	cmpl	%edx, -1556(%ebp)
	je	L111
	pushl	%edx
	call	_keywin_off
	movl	-1556(%ebp), %ecx
	pushl	%ecx
	movl	%ecx, -1552(%ebp)
	call	_keywin_on
	popl	%ebx
	popl	%eax
L111:
	movl	-1556(%ebp), %eax
	movl	28(%eax), %ecx
	testl	$256, %ecx
	jne	L112
	cmpl	$2, %edi
	jle	L112
	movl	4(%eax), %eax
	subl	$3, %eax
	cmpl	%eax, %edi
	jge	L112
	cmpl	$2, %esi
	jle	L112
	cmpl	$20, %esi
	jg	L112
	movl	-1512(%ebp), %eax
	movl	-1516(%ebp), %edx
	movl	%eax, -1576(%ebp)
	movl	%edx, -1580(%ebp)
	movl	-1556(%ebp), %eax
	movl	-1556(%ebp), %edx
	movl	12(%eax), %eax
	movl	16(%edx), %edx
	movl	%eax, -1584(%ebp)
	movl	%edx, -1532(%ebp)
L112:
	testl	$256, %ecx
	jne	L113
	movl	-1556(%ebp), %eax
	movl	4(%eax), %edx
	subl	%edi, %edx
	leal	-17(%edx), %eax
	cmpl	%esi, %eax
	jge	L113
	leal	-2(%edx), %eax
	cmpl	%eax, %esi
	jge	L113
	cmpl	$5, %esi
	jle	L113
	cmpl	$15, %esi
	jg	L113
	andl	$16, %ecx
	je	L114
	movl	-1556(%ebp), %edx
	movl	36(%edx), %ebx
	pushl	$LC19
	pushl	164(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
L113:
	movl	-1556(%ebp), %ecx
	testb	$1, 29(%ecx)
	jne	L116
	movl	4(%ecx), %edx
	subl	%edi, %edx
	leal	-32(%edx), %eax
	cmpl	%esi, %eax
	jge	L116
	leal	-17(%edx), %eax
	cmpl	%eax, %esi
	jge	L116
	cmpl	$5, %esi
	jle	L116
	cmpl	$15, %esi
	jg	L116
	pushl	$-100
	pushl	%ecx
	call	_sheet_updown
	popl	%edx
	popl	%ecx
L116:
	movl	-1556(%ebp), %eax
	movl	%eax, -1588(%ebp)
	jmp	L106
L114:
	movl	-1556(%ebp), %ecx
	movl	36(%ecx), %ebx
	pushl	$-1
	pushl	%ecx
	call	_sheet_updown
	pushl	-1552(%ebp)
	call	_keywin_off
	movl	-1540(%ebp), %edx
	movl	16(%edx), %eax
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1552(%ebp)
	call	_keywin_on
	call	_io_cli
	leal	16(%ebx), %eax
	pushl	$4
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	addl	$24, %esp
	jmp	L113
L163:
	imull	$20, -1592(%ebp), %eax
	pushl	-1536(%ebp)
	leal	-1452(%eax,%ebp), %eax
	pushl	%eax
	call	_exec_menu
	popl	%esi
	popl	%edi
	cmpl	$-1, %eax
	je	L165
	movl	%eax, -1592(%ebp)
	jmp	L16
L165:
	cmpl	$-1, -1592(%ebp)
L150:
	jle	L16
	imull	$20, -1592(%ebp), %eax
	leal	-1452(%eax,%ebp), %eax
	pushl	%eax
	movl	-1540(%ebp), %eax
	pushl	20(%eax)
	call	_close_menu
	popl	%ecx
	popl	%ebx
	movl	%eax, -1592(%ebp)
	incl	%eax
	jmp	L150
L160:
	movl	$0, -1516(%ebp)
	jmp	L88
L159:
	movl	$0, -1512(%ebp)
	jmp	L87
L50:
	cmpl	$4407, %edx
	je	L166
L51:
	cmpl	$-1, -1592(%ebp)
	je	L52
	cmpl	$-1, -1592(%ebp)
	jle	L52
L57:
	imull	$20, -1592(%ebp), %eax
	leal	-1452(%eax,%ebp), %eax
	pushl	%eax
	movl	-1540(%ebp), %eax
	pushl	20(%eax)
	call	_close_menu
	popl	%edx
	popl	%ecx
	movl	%eax, -1592(%ebp)
	incl	%eax
	jg	L57
L52:
	movl	-1504(%ebp), %eax
	cmpl	$383, %eax
	jg	L58
	cmpl	$0, -1564(%ebp)
	jne	L59
	movb	_keytable0.0-256(%eax), %al
L149:
	movb	%al, -60(%ebp)
L61:
	movb	-60(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L62
	testl	$4, -1568(%ebp)
	jne	L140
	cmpl	$0, -1564(%ebp)
	je	L64
L62:
	cmpb	$0, -60(%ebp)
	je	L66
	cmpl	$0, -1552(%ebp)
	je	L66
	call	_io_cli
	movl	-1552(%ebp), %edx
	movsbl	-60(%ebp),%eax
	addl	$256, %eax
	pushl	%eax
	movl	36(%edx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	popl	%edi
	popl	%eax
L66:
	cmpl	$271, -1504(%ebp)
	je	L167
L67:
	movl	-1504(%ebp), %eax
	cmpl	$298, %eax
	je	L168
L69:
	cmpl	$310, %eax
	je	L169
L70:
	cmpl	$426, %eax
	je	L170
L71:
	cmpl	$438, %eax
	je	L171
L72:
	cmpl	$314, %eax
	je	L172
L73:
	cmpl	$325, -1504(%ebp)
	je	L173
L74:
	cmpl	$326, -1504(%ebp)
	je	L174
L75:
	cmpl	$315, -1504(%ebp)
	je	L175
L76:
	cmpl	$316, -1504(%ebp)
	je	L176
L78:
	cmpl	$343, -1504(%ebp)
	je	L177
L80:
	movl	-1504(%ebp), %eax
	cmpl	$506, %eax
	je	L178
L82:
	cmpl	$510, %eax
	jne	L16
	call	_wait_KBC_sendready
	pushl	-1572(%ebp)
	pushl	$96
	call	_io_out8
	popl	%ebx
	popl	%esi
	jmp	L16
L178:
	movl	$-1, -1572(%ebp)
	jmp	L82
L177:
	movl	-1540(%ebp), %edx
	movl	16(%edx), %eax
	cmpl	$2, %eax
	jle	L80
	decl	%eax
	pushl	%eax
	pushl	24(%edx)
	call	_sheet_updown
	popl	%edi
	popl	%eax
	jmp	L80
L176:
	cmpl	$0, -1564(%ebp)
	je	L78
	cmpl	$0, -1552(%ebp)
	je	L79
	pushl	-1552(%ebp)
	call	_keywin_off
	popl	%ecx
L79:
	pushl	-1536(%ebp)
	pushl	-1540(%ebp)
	call	_open_console
	pushl	$4
	pushl	$32
	pushl	%eax
	movl	%eax, -1552(%ebp)
	call	_sheet_slide
	movl	-1540(%ebp), %ecx
	pushl	16(%ecx)
	pushl	-1552(%ebp)
	call	_sheet_updown
	pushl	-1552(%ebp)
	call	_keywin_on
	addl	$32, %esp
	pushl	$7
	pushl	$LC16
	call	_dbg_putstr0
	popl	%eax
	popl	%edx
	jmp	L78
L175:
	cmpl	$0, -1564(%ebp)
	je	L76
	cmpl	$0, -1552(%ebp)
	je	L76
	movl	-1552(%ebp), %edx
	movl	36(%edx), %ebx
	testl	%ebx, %ebx
	je	L76
	cmpl	$0, 52(%ebx)
	je	L76
	pushl	$LC15
	pushl	164(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
	jmp	L76
L174:
	leal	-636(%ebp), %ebx
	xorl	$1, -1568(%ebp)
	call	_io_cli
	pushl	$237
	pushl	%ebx
	call	_fifo32_put
	pushl	-1568(%ebp)
	pushl	%ebx
	call	_fifo32_put
	call	_io_sti
	addl	$16, %esp
	jmp	L75
L173:
	leal	-636(%ebp), %ebx
	xorl	$2, -1568(%ebp)
	call	_io_cli
	pushl	$237
	pushl	%ebx
	call	_fifo32_put
	pushl	-1568(%ebp)
	pushl	%ebx
	call	_fifo32_put
	call	_io_sti
	addl	$16, %esp
	jmp	L74
L172:
	leal	-636(%ebp), %ebx
	xorl	$4, -1568(%ebp)
	call	_io_cli
	pushl	$237
	pushl	%ebx
	call	_fifo32_put
	pushl	-1568(%ebp)
	pushl	%ebx
	call	_fifo32_put
	call	_io_sti
	addl	$16, %esp
	jmp	L73
L171:
	andl	$-3, -1564(%ebp)
	jmp	L72
L170:
	andl	$-2, -1564(%ebp)
	jmp	L71
L169:
	orl	$2, -1564(%ebp)
	jmp	L70
L168:
	orl	$1, -1564(%ebp)
	jmp	L69
L167:
	cmpl	$0, -1552(%ebp)
	je	L67
	pushl	-1552(%ebp)
	call	_keywin_off
	movl	-1552(%ebp), %eax
	popl	%esi
	movl	24(%eax), %ecx
	decl	%ecx
	jne	L68
	movl	-1540(%ebp), %edx
	movl	16(%edx), %ecx
	decl	%ecx
L68:
	movl	-1540(%ebp), %eax
	movl	20(%eax,%ecx,4), %ecx
	pushl	%ecx
	movl	%ecx, -1552(%ebp)
	call	_keywin_on
	popl	%ebx
	jmp	L67
L64:
	leal	32(%edx), %eax
	movb	%al, -60(%ebp)
	jmp	L62
L140:
	cmpl	$0, -1564(%ebp)
	je	L62
	jmp	L64
L59:
	movb	_keytable1.1-256(%eax), %al
	jmp	L149
L58:
	movb	$0, -60(%ebp)
	jmp	L61
L166:
	movl	-1540(%ebp), %ecx
	pushl	(%ecx)
	pushl	$480
	pushl	$640
	call	_bmp_conv
	pushl	$7
	pushl	$LC14
	call	_dbg_putstr0
	addl	$20, %esp
	jmp	L51
L154:
	cmpl	$0, -1520(%ebp)
	jns	L179
	cmpl	$2147483647, -1528(%ebp)
	jne	L180
	pushl	-1560(%ebp)
	call	_task_sleep
	call	_io_sti
	jmp	L143
L180:
	call	_io_sti
	jmp	L151
L179:
	call	_io_sti
	pushl	-1524(%ebp)
	pushl	-1520(%ebp)
	pushl	-1548(%ebp)
	call	_sheet_slide
	addl	$12, %esp
	movl	-1552(%ebp), %eax
	movl	12(%eax), %edx
	cmpl	-1520(%ebp), %edx
	jg	L22
	leal	3(%edx), %eax
	cmpl	%eax, -1520(%ebp)
	jg	L22
	movl	-1552(%ebp), %ecx
	movl	16(%ecx), %edx
	cmpl	-1524(%ebp), %edx
	jg	L23
	leal	3(%edx), %eax
	cmpl	%eax, -1524(%ebp)
	jle	L146
L23:
	leal	3(%edx), %eax
	cmpl	-1524(%ebp), %eax
	jg	L25
	movl	-1552(%ebp), %ecx
	movl	%edx, %eax
	addl	8(%ecx), %eax
	subl	$3, %eax
	cmpl	%eax, -1524(%ebp)
	jle	L147
L25:
	movl	-1552(%ebp), %eax
	addl	8(%eax), %edx
	leal	-3(%edx), %eax
	cmpl	-1524(%ebp), %eax
	jg	L28
	cmpl	%edx, -1524(%ebp)
	jg	L28
L148:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_set_mouse_cursorrb8
L145:
	popl	%edi
	popl	%eax
L28:
	pushl	-1532(%ebp)
	pushl	-1528(%ebp)
	call	_reset_back
	pushl	-1532(%ebp)
	pushl	-1528(%ebp)
	pushl	-1552(%ebp)
	call	_reset_key_win
	addl	$20, %esp
	movl	$-1, -1520(%ebp)
	jmp	L16
L147:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_set_mouse_cursorl8
	jmp	L145
L146:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_set_mouse_cursorlt8
	jmp	L145
L22:
	leal	3(%edx), %eax
	cmpl	-1520(%ebp), %eax
	jg	L29
	movl	-1552(%ebp), %ecx
	movl	%edx, %eax
	addl	4(%ecx), %eax
	subl	$3, %eax
	cmpl	%eax, -1520(%ebp)
	jg	L29
	movl	16(%ecx), %edx
	cmpl	-1524(%ebp), %edx
	jg	L32
	leal	3(%edx), %eax
	cmpl	%eax, -1524(%ebp)
	jle	L31
L32:
	movl	-1552(%ebp), %eax
	addl	8(%eax), %edx
	leal	-3(%edx), %eax
	cmpl	-1524(%ebp), %eax
	jg	L35
	cmpl	%edx, -1524(%ebp)
	jg	L35
L31:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_set_mouse_cursorh8
	jmp	L145
L35:
	pushl	$99
	leal	-1292(%ebp), %eax
	pushl	%eax
	call	_init_mouse_cursor81
	jmp	L145
L29:
	movl	-1552(%ebp), %ecx
	addl	4(%ecx), %edx
	leal	-3(%edx), %eax
	cmpl	-1520(%ebp), %eax
	jg	L35
	cmpl	%edx, -1520(%ebp)
	jg	L35
	movl	16(%ecx), %edx
	cmpl	-1524(%ebp), %edx
	jg	L36
	leal	3(%edx), %eax
	cmpl	%eax, -1524(%ebp)
	jle	L148
L36:
	leal	3(%edx), %eax
	cmpl	-1524(%ebp), %eax
	jg	L38
	movl	-1552(%ebp), %ecx
	movl	%edx, %eax
	addl	8(%ecx), %eax
	subl	$3, %eax
	cmpl	%eax, -1524(%ebp)
	jle	L147
L38:
	movl	-1552(%ebp), %eax
	addl	8(%eax), %edx
	leal	-3(%edx), %eax
	cmpl	-1524(%ebp), %eax
	jg	L28
	cmpl	%edx, -1524(%ebp)
	jg	L28
	jmp	L146
L153:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1572(%ebp)
	call	_wait_KBC_sendready
	pushl	-1572(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L19
L4:
	pushl	$145472
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, %ebx
	popl	%eax
	popl	%edx
	xorl	%edx, %edx
	movl	$0, -1504(%ebp)
L10:
	movb	_hankaku(%edx), %al
	movb	%al, (%edx,%ebx)
	movl	-1504(%ebp), %eax
	incl	%eax
	movl	%eax, -1504(%ebp)
	movl	%eax, %edx
	cmpl	$4095, %eax
	jle	L10
	movl	$4096, -1504(%ebp)
	movl	$4096, %eax
L15:
	movb	$-1, (%eax,%ebx)
	movl	-1504(%ebp), %eax
	incl	%eax
	movl	%eax, -1504(%ebp)
	cmpl	$145471, %eax
	jle	L15
	pushl	$7
	pushl	$LC11
	jmp	L142
L152:
	pushl	$7
	pushl	$LC1
	jmp	L141
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	$0
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L183
	movl	-4(%ebp), %ebx
	leave
	ret
L183:
	call	_io_cli
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	movl	-4(%ebp), %ebx
	popl	%eax
	popl	%edx
	leave
	jmp	_io_sti
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	$1
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L186
	movl	-4(%ebp), %ebx
	leave
	ret
L186:
	call	_io_cli
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	movl	-4(%ebp), %ebx
	popl	%eax
	popl	%edx
	leave
	jmp	_io_sti
	.balign 2
.globl _open_constask
	.def	_open_constask;	.scl	2;	.type	32;	.endef
_open_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$65536
	pushl	$3932160
	movl	%eax, %esi
	call	_memman_alloc_4k
	movl	$1936617315, 190(%ebx)
	movl	$6646895, 194(%ebx)
	movl	%eax, 172(%ebx)
	movl	8(%ebp), %edx
	addl	$65524, %eax
	movl	%eax, 100(%ebx)
	movl	$_console_task, 76(%ebx)
	movl	$8, 116(%ebx)
	movl	$16, 120(%ebx)
	movl	$8, 124(%ebx)
	movl	$8, 128(%ebx)
	movl	$8, 132(%ebx)
	movl	$8, 136(%ebx)
	movl	%edx, 4(%eax)
	movl	100(%ebx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	$2
	pushl	$3
	pushl	%ebx
	call	_task_run
	leal	16(%ebx), %eax
	pushl	%ebx
	pushl	%esi
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.data
LC20:
	.ascii "console\0"
LC21:
	.ascii "open console\12\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$480000
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$400
	movl	%eax, %esi
	pushl	$600
	pushl	%eax
	pushl	%ebx
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$0
	pushl	$LC20
	pushl	$400
	pushl	$600
	pushl	%esi
	call	_make_window8
	pushl	$0
	pushl	$363
	pushl	$584
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_make_textbox8
	addl	$44, %esp
	pushl	12(%ebp)
	pushl	%ebx
	call	_open_constask
	orl	$32, 28(%ebx)
	movl	%eax, 36(%ebx)
	pushl	$1
	pushl	$LC21
	call	_dbg_putstr0
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.data
LC22:
	.ascii "close console\12\0"
	.text
	.balign 2
.globl _close_constask
	.def	_close_constask;	.scl	2;	.type	32;	.endef
_close_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_task_sleep
	pushl	$65536
	pushl	172(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	$512
	pushl	16(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	movl	$0, 4(%ebx)
	pushl	$1
	pushl	$LC22
	call	_dbg_putstr0
	movl	-4(%ebp), %ebx
	leave
	ret
	.balign 2
.globl _close_console
	.def	_close_console;	.scl	2;	.type	32;	.endef
_close_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	36(%ebx), %esi
	pushl	$480000
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	movl	%esi, 8(%ebp)
	addl	$16, %esp
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	jmp	_close_constask
	.data
LC23:
	.ascii "[%s]\0"
	.text
	.balign 2
.globl _debug_msg
	.def	_debug_msg;	.scl	2;	.type	32;	.endef
_debug_msg:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-124(%ebp), %ebx
	subl	$112, %esp
	movl	1508, %esi
	pushl	12(%ebp)
	pushl	$LC23
	leal	1044(%esi), %edi
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	imull	$20, 8(%ebp), %eax
	pushl	$1
	addl	$6, %eax
	pushl	$0
	pushl	%eax
	pushl	$56
	pushl	4(%edi)
	pushl	1044(%esi)
	call	_putfonts8_asc
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC24:
	.ascii "open taskmgr\12\0"
	.text
	.balign 2
.globl _open_taskmgr
	.def	_open_taskmgr;	.scl	2;	.type	32;	.endef
_open_taskmgr:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	1508, %eax
	cmpl	$0, _taskmgr
	je	L193
	xorl	%esi, %esi
	leal	1044(%eax), %ebx
L199:
	movl	_taskmgr, %eax
	cmpl	%eax, 36(%ebx)
	je	L201
L196:
	incl	%esi
	addl	$44, %ebx
	cmpl	$255, %esi
	jle	L199
L192:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L201:
	pushl	%ebx
	call	_keywin_on
	popl	%eax
	jmp	L196
L193:
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, _taskmgr
	call	_memman_alloc_4k
	pushl	$65536
	pushl	$3932160
	movl	%eax, %esi
	movl	_taskmgr, %ebx
	call	_memman_alloc_4k
	addl	$65528, %eax
	movl	%eax, 100(%ebx)
	movl	_taskmgr, %eax
	movl	$1802723700, 190(%eax)
	movl	$7497581, 194(%eax)
	movl	_taskmgr, %edx
	movl	$_taskmgr_task, 76(%eax)
	movl	100(%edx), %ecx
	movl	$8, 116(%eax)
	movl	$16, 120(%eax)
	movl	$8, 124(%eax)
	movl	$8, 128(%eax)
	movl	$8, 132(%eax)
	movl	$8, 136(%eax)
	movl	8(%ebp), %eax
	movl	$0, 206(%edx)
	movl	%eax, 4(%ecx)
	pushl	$2
	pushl	$2
	pushl	%edx
	call	_task_run
	movl	_taskmgr, %eax
	pushl	_taskmgr
	pushl	%esi
	addl	$16, %eax
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	addl	$44, %esp
	pushl	$1
	pushl	$LC24
	call	_dbg_putstr0
	jmp	L192
	.data
LC25:
	.ascii "close taskmgr\12\0"
	.text
	.balign 2
.globl _close_taskmgr
	.def	_close_taskmgr;	.scl	2;	.type	32;	.endef
_close_taskmgr:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	_taskmgr
	call	_task_sleep
	movl	_taskmgr, %eax
	pushl	$512
	pushl	16(%eax)
	pushl	$3932160
	call	_memman_free_4k
	pushl	_taskmgr
	call	_task_free
	pushl	$1
	pushl	$LC25
	movl	$0, _taskmgr
	call	_dbg_putstr0
	leave
	ret
	.data
LC26:
	.ascii "OS Menu\0"
	.text
	.balign 2
.globl _open_menu
	.def	_open_menu;	.scl	2;	.type	32;	.endef
_open_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	1508, %eax
	movl	8(%ebp), %ebx
	movl	%eax, -16(%ebp)
	movl	12(%ebp), %edi
	movl	16(%ebp), %eax
	movl	$0, -20(%ebp)
	addl	$52, %eax
L209:
	cmpl	$0, (%eax)
	je	L205
	incl	-20(%ebp)
	addl	$60, %eax
	cmpl	$255, -20(%ebp)
	jle	L209
L205:
	movl	16(%ebp), %edx
	incl	-20(%ebp)
	cmpl	$0, (%edx)
	je	L216
L210:
	imull	$26, -20(%ebp), %eax
	movl	16(%ebp), %edx
	leal	2(%eax), %esi
	cmpl	$0, (%edx)
	jne	L211
	leal	20(%eax), %esi
L211:
	pushl	-16(%ebp)
	call	_sheet_alloc
	orl	$256, 28(%eax)
	movl	%eax, 4(%edi)
	movl	%esi, %eax
	imull	$144, %eax, %eax
	addl	%eax, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, 8(%edi)
	pushl	$-1
	pushl	%esi
	pushl	$144
	pushl	%eax
	pushl	4(%edi)
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	-20(%ebp)
	pushl	16(%ebp)
	pushl	$LC26
	pushl	%esi
	pushl	$144
	pushl	8(%edi)
	call	_make_menu8
	movl	16(%ebp), %edx
	addl	$24, %esp
	movl	(%edx), %eax
	testl	%eax, %eax
	jne	L212
	movl	-16(%ebp), %edx
	movl	$0, -24(%ebp)
	movl	12(%edx), %eax
	subl	%esi, %eax
	subl	$28, %eax
L213:
	pushl	%eax
	pushl	-24(%ebp)
	pushl	4(%edi)
	call	_sheet_slide
	movl	-16(%ebp), %eax
	pushl	16(%eax)
	pushl	4(%edi)
	call	_sheet_updown
	movl	-20(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%eax, 16(%edi)
	movl	$0, 12(%edi)
	movl	%edx, (%edi)
	movl	(%edx), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L212:
	movl	%eax, %edx
	leal	-20(%edi), %ebx
	imull	$140, %edx, %edx
	movl	%edx, -24(%ebp)
	imull	$26, 12(%ebx), %edx
	decl	%eax
	leal	2(%edx), %ecx
	je	L217
L214:
	movl	4(%ebx), %eax
	movl	16(%eax), %eax
	addl	%ecx, %eax
	subl	%esi, %eax
	jmp	L213
L217:
	leal	20(%edx), %ecx
	jmp	L214
L216:
	pushl	8(%ebx)
	pushl	4(%ebx)
	pushl	(%ebx)
	call	_push_menu
	movl	8(%ebx), %eax
	leal	-2(%eax), %edx
	subl	$24, %eax
	pushl	%edx
	pushl	$61
	pushl	%eax
	pushl	$2
	pushl	%ebx
	call	_sheet_refresh
	addl	$32, %esp
	jmp	L210
	.balign 2
.globl _close_menu
	.def	_close_menu;	.scl	2;	.type	32;	.endef
_close_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %ebx
	pushl	$-1
	movl	8(%ebp), %esi
	pushl	4(%ebx)
	call	_sheet_updown
	movl	4(%ebx), %eax
	movl	8(%eax), %edx
	imull	4(%eax), %edx
	addl	%edx, %edx
	pushl	%edx
	pushl	8(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	4(%ebx)
	call	_sheet_free
	addl	$24, %esp
	movl	(%ebx), %eax
	cmpl	$0, (%eax)
	je	L220
L219:
	movl	(%ebx), %eax
	movl	(%eax), %eax
	leal	-8(%ebp), %esp
	popl	%ebx
	decl	%eax
	popl	%esi
	popl	%ebp
	ret
L220:
	pushl	8(%esi)
	pushl	4(%esi)
	pushl	(%esi)
	call	_pull_menu
	movl	8(%esi), %eax
	leal	-2(%eax), %edx
	subl	$24, %eax
	pushl	%edx
	pushl	$61
	pushl	%eax
	pushl	$2
	pushl	%esi
	call	_sheet_refresh
	addl	$32, %esp
	jmp	L219
	.balign 2
.globl _select_menu
	.def	_select_menu;	.scl	2;	.type	32;	.endef
_select_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$1, %edi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %esi
	movl	16(%ebp), %ebx
	movl	12(%esi), %eax
	testl	%eax, %eax
	jne	L226
L222:
	movl	(%esi), %eax
	movl	%eax, -16(%ebp)
	cmpl	$0, (%eax)
	jne	L223
	movl	$19, %edi
L223:
	cmpl	$1, 12(%ebp)
	jle	L224
	movl	4(%esi), %ecx
	movl	4(%ecx), %eax
	subl	$2, %eax
	cmpl	%eax, 12(%ebp)
	jge	L224
	cmpl	%ebx, %edi
	jge	L224
	movl	8(%ecx), %eax
	subl	$2, %eax
	cmpl	%eax, %ebx
	jl	L227
L224:
	movl	$0, 12(%esi)
L221:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L227:
	subl	%edi, %ebx
	movl	$26, %edx
	movl	%ebx, %eax
	movl	%edx, %edi
	cltd
	idivl	%edi
	leal	1(%eax), %eax
	movl	%eax, 12(%esi)
	pushl	$1
	pushl	%eax
	movl	-16(%ebp), %eax
	pushl	(%eax)
	pushl	%ecx
	call	_change_mtitle8
	addl	$16, %esp
	jmp	L221
L226:
	pushl	$0
	pushl	%eax
	movl	(%esi), %eax
	pushl	(%eax)
	pushl	4(%esi)
	call	_change_mtitle8
	addl	$16, %esp
	jmp	L222
	.data
LC27:
	.ascii "<submenu>\0"
LC28:
	.ascii "<console>\0"
LC29:
	.ascii "<taskmgr>\0"
LC30:
	.ascii "open taskmgr\0"
	.text
	.balign 2
.globl _exec_menu
	.def	_exec_menu;	.scl	2;	.type	32;	.endef
_exec_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	8(%ebp), %ecx
	movl	1508, %eax
	movl	%eax, -16(%ebp)
	movl	16(%ecx), %edx
	movl	12(%ecx), %eax
	subl	%eax, %edx
	orl	$-1, %ecx
	testl	%eax, %eax
	je	L228
	movl	8(%ebp), %esi
	testl	%edx, %edx
	movl	(%esi), %esi
	movl	%esi, -20(%ebp)
	jle	L247
	movl	%edx, %ebx
L234:
	movl	-20(%ebp), %eax
	decl	%ebx
	movl	52(%eax), %eax
	movl	%eax, -20(%ebp)
	jne	L234
L247:
	movl	-20(%ebp), %eax
	movl	$LC27, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	je	L250
	movl	-20(%ebp), %eax
	movl	$LC28, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	je	L251
	movl	-20(%ebp), %eax
	movl	$LC29, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	jne	L239
	pushl	$LC30
	pushl	$1
	call	_debug_msg
	pushl	12(%ebp)
	call	_open_taskmgr
	addl	$12, %esp
L236:
	orl	$-1, %ecx
L228:
	leal	-12(%ebp), %esp
	movl	%ecx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L239:
	pushl	12(%ebp)
	pushl	$0
	xorl	%ebx, %ebx
	call	_open_constask
	leal	16(%eax), %edi
	popl	%eax
	movl	-20(%ebp), %eax
	popl	%edx
	cmpb	$0, 20(%eax)
	jne	L245
L249:
	call	_io_cli
	pushl	$266
	pushl	%edi
	call	_fifo32_put
	call	_io_sti
	popl	%eax
	popl	%edx
	jmp	L236
L245:
	call	_io_cli
	movl	-20(%ebp), %edx
	movsbl	20(%edx,%ebx),%eax
	addl	$256, %eax
	incl	%ebx
	pushl	%eax
	pushl	%edi
	call	_fifo32_put
	call	_io_sti
	popl	%ecx
	movl	-20(%ebp), %ecx
	popl	%esi
	cmpb	$0, 20(%ecx,%ebx)
	jne	L245
	jmp	L249
L251:
	pushl	12(%ebp)
	pushl	-16(%ebp)
	call	_open_console
	pushl	$8
	pushl	$8
	movl	%eax, %ebx
	pushl	%eax
	call	_sheet_slide
	movl	-16(%ebp), %eax
	pushl	16(%eax)
	pushl	%ebx
	call	_sheet_updown
	pushl	%ebx
	call	_keywin_on
	addl	$32, %esp
	jmp	L236
L250:
	movl	-20(%ebp), %eax
	pushl	56(%eax)
	movl	8(%ebp), %eax
	addl	$20, %eax
	pushl	%eax
	pushl	$0
	call	_open_menu
	movl	%eax, %ecx
	jmp	L228
	.balign 2
.globl _set_menu
	.def	_set_menu;	.scl	2;	.type	32;	.endef
_set_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$16, %esp
	movl	24(%ebp), %edi
	movl	8(%ebp), %ebx
	movl	$-1, -20(%ebp)
	movl	$0, -24(%ebp)
	movl	$0, -28(%ebp)
	movl	$0, -16(%ebp)
L269:
	testl	%edi, %edi
	je	L257
	pushl	%edi
	leal	4(%ebx), %eax
	pushl	%eax
	call	_strcmp
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	jne	L259
	movl	%ebx, -24(%ebp)
L259:
	cmpb	$0, 4(%ebx)
	je	L271
	incl	-16(%ebp)
	addl	$60, %ebx
	addl	$60, %esi
	cmpl	$255, -16(%ebp)
	jle	L269
L254:
	movl	-20(%ebp), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L271:
	testl	%edi, %edi
	je	L265
	cmpl	$0, -24(%ebp)
	je	L254
L265:
	cmpl	$0, 28(%ebp)
	je	L263
	cmpl	$0, -28(%ebp)
	je	L254
L263:
	testl	%edi, %edi
	je	L266
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	addl	%esi, %eax
	movl	%eax, 56(%edx)
L267:
	movl	12(%ebp), %eax
	movl	%eax, (%ebx)
	leal	4(%ebx), %eax
	pushl	16(%ebp)
	pushl	%eax
	call	_strcpy
	leal	20(%ebx), %eax
	pushl	20(%ebp)
	pushl	%eax
	call	_strcpy
	addl	$16, %esp
	movl	-16(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L254
L266:
	cmpl	$0, 28(%ebp)
	je	L267
	movl	8(%ebp), %eax
	movl	-28(%ebp), %edx
	addl	%esi, %eax
	movl	%eax, 52(%edx)
	jmp	L267
L257:
	cmpl	$0, 28(%ebp)
	je	L259
	pushl	28(%ebp)
	leal	4(%ebx), %eax
	pushl	%eax
	call	_strcmp
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	jne	L259
	movl	%ebx, -28(%ebp)
	jmp	L259
	.data
LC31:
	.ascii "taskmgr\0"
LC32:
	.ascii "explorer.hrb\0"
LC33:
	.ascii "explorer\0"
LC34:
	.ascii "programs+\0"
LC35:
	.ascii "walk\0"
	.text
	.balign 2
.globl _init_menu
	.def	_init_menu;	.scl	2;	.type	32;	.endef
_init_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	pushl	$16384
	movl	8(%ebp), %esi
	pushl	$3932160
	movl	12(%ebp), %ebx
	call	_memman_alloc_4k
	movl	$255, %ecx
	movl	%eax, (%ebx)
	popl	%eax
	popl	%edx
	xorl	%edx, %edx
L277:
	movl	(%ebx), %eax
	movb	$0, 4(%eax,%edx)
	movl	$0, (%eax,%edx)
	movl	(%ebx), %eax
	movb	$0, 20(%eax,%edx)
	movl	(%ebx), %eax
	movl	$0, 52(%eax,%edx)
	movl	(%ebx), %eax
	movl	$0, 56(%eax,%edx)
	addl	$60, %edx
	decl	%ecx
	jns	L277
	xorl	%eax, %eax
	movl	$7, %ecx
L282:
	movl	$0, (%esi,%eax)
	movl	$0, 4(%esi,%eax)
	movl	$0, 8(%esi,%eax)
	movl	$0, 12(%esi,%eax)
	movl	$0, 16(%esi,%eax)
	addl	$20, %eax
	decl	%ecx
	jns	L282
	pushl	$0
	pushl	$0
	pushl	$LC29
	pushl	$LC31
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	pushl	$LC31
	pushl	$0
	pushl	$LC28
	pushl	$LC20
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	addl	$48, %esp
	pushl	$LC20
	pushl	$0
	pushl	$LC32
	pushl	$LC33
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	pushl	$LC33
	pushl	$0
	pushl	$LC27
	pushl	$LC34
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	addl	$48, %esp
	pushl	$0
	pushl	$LC34
	pushl	$LC35
	pushl	$LC35
	pushl	$1
	pushl	(%ebx)
	call	_set_menu
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _reset_back
	.def	_reset_back;	.scl	2;	.type	32;	.endef
_reset_back:
	pushl	%ebp
	movl	%esp, %ebp
	popl	%ebp
	ret
	.balign 2
.globl _reset_key_win
	.def	_reset_key_win;	.scl	2;	.type	32;	.endef
_reset_key_win:
	pushl	%ebp
	movl	%esp, %ebp
	popl	%ebp
	ret
.globl _u_fat
	.data
	.balign 4
_u_fat:
	.space 4
.globl _fat_flag
	.data
_fat_flag:
	.space 1
.globl _current_path
	.data
	.balign 16
_current_path:
	.space 256
.globl _epath
	.data
	.balign 16
_epath:
	.space 1024
.globl _fdc
	.data
	.balign 4
_fdc:
	.space 4
.globl _inout
	.data
	.balign 4
_inout:
	.space 4
.globl _taskmgr
	.data
	.balign 4
_taskmgr:
	.space 4
	.def	_strcmp;	.scl	2;	.type	32;	.endef
	.def	_change_mtitle8;	.scl	2;	.type	32;	.endef
	.def	_pull_menu;	.scl	2;	.type	32;	.endef
	.def	_make_menu8;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_push_menu;	.scl	2;	.type	32;	.endef
	.def	_task_free;	.scl	2;	.type	32;	.endef
	.def	_taskmgr_task;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_close_taskmgr;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_close_constask;	.scl	2;	.type	32;	.endef
	.def	_close_console;	.scl	2;	.type	32;	.endef
	.def	_select_menu;	.scl	2;	.type	32;	.endef
	.def	_open_menu;	.scl	2;	.type	32;	.endef
	.def	_exec_menu;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_asm_end_app;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
	.def	_close_menu;	.scl	2;	.type	32;	.endef
	.def	_bmp_conv;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_reset_key_win;	.scl	2;	.type	32;	.endef
	.def	_reset_back;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor81;	.scl	2;	.type	32;	.endef
	.def	_set_mouse_cursorh8;	.scl	2;	.type	32;	.endef
	.def	_set_mouse_cursorrb8;	.scl	2;	.type	32;	.endef
	.def	_set_mouse_cursorl8;	.scl	2;	.type	32;	.endef
	.def	_set_mouse_cursorlt8;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_sysclock_task;	.scl	2;	.type	32;	.endef
	.def	_init_menu;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile2;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_brow_callback;	.scl	2;	.type	32;	.endef
	.def	_strcpy;	.scl	2;	.type	32;	.endef
	.def	_browser_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_dbg_putstr0;	.scl	2;	.type	32;	.endef
	.def	_dbg_init;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
