	.file	"graphic.c"
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$684, %esp
	movb	1522, %al
	cmpb	$8, %al
	je	L90
	cmpb	$16, %al
	je	L91
	cmpb	$24, %al
	je	L92
L1:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L92:
	xorl	%ebx, %ebx
	movl	$0, -672(%ebp)
L61:
	xorl	%edi, %edi
	movl	$0, -676(%ebp)
L60:
	xorl	%esi, %esi
	movl	$31, %ecx
L59:
	movl	%esi, %eax
	movl	-676(%ebp), %edx
	andw	$2016, %dx
	addl	$2048, %esi
	andw	$-2048, %ax
	orl	%edx, %eax
	movl	-672(%ebp), %edx
	andl	$31, %edx
	orl	%edx, %eax
	movw	%ax, _table_16_65536(%ebx,%ebx)
	incl	%ebx
	decl	%ecx
	jns	L59
	incl	%edi
	addl	$16, -676(%ebp)
	cmpl	$63, %edi
	jle	L60
	incl	-672(%ebp)
	cmpl	$31, -672(%ebp)
	jle	L61
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
L66:
	movzbl	_table_rgb.0+1(%ecx), %eax
	movzbl	_table_rgb.0(%ecx), %edx
	sall	$4, %eax
	andw	$2016, %ax
	sall	$11, %edx
	orl	%eax, %edx
	movb	_table_rgb.0+2(%ecx), %al
	andl	$31, %eax
	addl	$3, %ecx
	movzbw	%al, %ax
	orl	%eax, %edx
	movw	%dx, _table_16_65536(%ebx,%ebx)
	incl	%ebx
	cmpl	$15, %ebx
	jle	L66
	jmp	L1
L91:
	xorl	%ebx, %ebx
	movl	$0, -672(%ebp)
L39:
	xorl	%edi, %edi
	movl	$0, -680(%ebp)
L38:
	xorl	%esi, %esi
	movl	$31, %ecx
L37:
	movl	%esi, %eax
	movl	-680(%ebp), %edx
	andw	$2016, %dx
	addl	$2048, %esi
	andw	$-2048, %ax
	orl	%edx, %eax
	movl	-672(%ebp), %edx
	andl	$31, %edx
	orl	%edx, %eax
	movw	%ax, _table_16_65536(%ebx,%ebx)
	incl	%ebx
	decl	%ecx
	jns	L37
	incl	%edi
	addl	$16, -680(%ebp)
	cmpl	$63, %edi
	jle	L38
	incl	-672(%ebp)
	cmpl	$31, -672(%ebp)
	jle	L39
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
L44:
	movzbl	_table_rgb.0+1(%ecx), %eax
	movzbl	_table_rgb.0+2(%ecx), %edx
	sall	$4, %eax
	andw	$2016, %ax
	sall	$11, %edx
	orl	%eax, %edx
	movb	_table_rgb.0(%ecx), %al
	andl	$31, %eax
	addl	$3, %ecx
	movzbw	%al, %ax
	orl	%eax, %edx
	movw	%dx, _table_16_65536(%ebx,%ebx)
	incl	%ebx
	cmpl	$15, %ebx
	jle	L44
	movw	$0, _table_16_65536
	movw	$-2048, _table_16_65536+2
	movw	$2016, _table_16_65536+4
	movw	$-32, _table_16_65536+6
	movw	$31, _table_16_65536+8
	movw	$-2017, _table_16_65536+10
	movw	$2047, _table_16_65536+12
	movw	$-1, _table_16_65536+14
	movw	$31215, _table_16_65536+16
	movw	$14336, _table_16_65536+18
	movw	$224, _table_16_65536+20
	movw	$14560, _table_16_65536+22
	movw	$7, _table_16_65536+24
	movw	$14343, _table_16_65536+26
	movw	$231, _table_16_65536+28
	movw	$14567, _table_16_65536+30
	jmp	L1
L90:
	xorl	%eax, %eax
L7:
	movw	%ax, _table_16_65536(%eax,%eax)
	incl	%eax
	cmpl	$15, %eax
	jle	L7
	pushl	$_table_rgb.0
	pushl	$15
	pushl	$0
	call	_set_palette
	addl	$12, %esp
	movl	$0, -672(%ebp)
	movl	$0, -688(%ebp)
	movl	$0, -692(%ebp)
L22:
	xorl	%edi, %edi
	xorl	%esi, %esi
	movl	$0, -684(%ebp)
L21:
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
L20:
	movl	-692(%ebp), %edx
	addl	%esi, %edx
	addl	%ecx, %edx
	imull	$3, %edx, %eax
	movl	%edx, -696(%ebp)
	movb	%bl, -668(%ebp,%eax)
	addl	$51, %ebx
	movb	-684(%ebp), %dl
	movb	%dl, -667(%ebp,%eax)
	movb	-688(%ebp), %dl
	movb	%dl, -666(%ebp,%eax)
	movl	-692(%ebp), %edx
	leal	(%edx,%esi), %eax
	movl	-696(%ebp), %edx
	leal	16(%ecx,%eax), %eax
	incl	%ecx
	movw	%ax, _table_16_65536+32(%edx,%edx)
	cmpl	$5, %ecx
	jle	L20
	incl	%edi
	addl	$6, %esi
	addl	$51, -684(%ebp)
	cmpl	$5, %edi
	jle	L21
	incl	-672(%ebp)
	addl	$51, -688(%ebp)
	addl	$36, -692(%ebp)
	cmpl	$5, -672(%ebp)
	jle	L22
	leal	-668(%ebp), %eax
	pushl	%eax
	pushl	$231
	pushl	$16
	call	_set_palette
	addl	$12, %esp
	jmp	L1
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	$255
	pushl	$966
	call	_io_out8
	pushl	%ebx
	pushl	$968
	call	_io_out8
	addl	$16, %esp
	cmpl	%edi, %ebx
	jle	L98
L100:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L98:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L98
	jmp	L100
	.balign 2
.globl _drawpixel8
	.def	_drawpixel8;	.scl	2;	.type	32;	.endef
_drawpixel8:
	pushl	%ebp
	movl	%esp, %ebp
	movl	24(%ebp), %edx
	movl	16(%ebp), %eax
	imull	12(%ebp), %edx
	movw	_table_16_65536(%eax,%eax), %cx
	addl	20(%ebp), %edx
	movl	8(%ebp), %eax
	movw	%cx, (%eax,%edx,2)
	popl	%ebp
	ret
	.balign 2
.globl _DDAline
	.def	_DDAline;	.scl	2;	.type	32;	.endef
_DDAline:
	pushl	%ebp
	movl	%esp, %ebp
	movl	28(%ebp), %edx
	movl	20(%ebp), %eax
	cmpl	%edx, %eax
	jg	L109
L107:
	incl	%eax
	cmpl	%edx, %eax
	jle	L107
L109:
	popl	%ebp
	ret
	.balign 2
.globl _boxfill8
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
_boxfill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edx
	movl	32(%ebp), %edi
	movb	16(%ebp), %al
	movl	24(%ebp), %esi
	movb	%al, -13(%ebp)
	cmpl	%edi, %esi
	jg	L122
L120:
	movl	20(%ebp), %ebx
	cmpl	28(%ebp), %ebx
	jle	L119
L124:
	incl	%esi
	cmpl	%edi, %esi
	jle	L120
L122:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L119:
	pushl	%esi
	pushl	%ebx
	incl	%ebx
	movzbl	-13(%ebp), %eax
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_drawpixel8
	addl	$20, %esp
	cmpl	28(%ebp), %ebx
	jle	L119
	jmp	L124
	.balign 2
.globl _boxfill8c
	.def	_boxfill8c;	.scl	2;	.type	32;	.endef
_boxfill8c:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	pushl	%esi
	movb	16(%ebp), %al
	movl	24(%ebp), %ecx
	movl	28(%ebp), %edi
	movb	%al, -13(%ebp)
	cmpl	32(%ebp), %ecx
	jg	L137
	movl	12(%ebp), %ebx
	imull	%ecx, %ebx
L135:
	movl	20(%ebp), %edx
	cmpl	%edi, %edx
	jg	L139
	movl	8(%ebp), %esi
	addl	%ebx, %esi
	addl	%edx, %esi
	movl	%esi, -20(%ebp)
L134:
	movl	-20(%ebp), %esi
	movb	-13(%ebp), %al
	incl	%edx
	movb	%al, (%esi)
	incl	%esi
	movl	%esi, -20(%ebp)
	cmpl	%edi, %edx
	jle	L134
L139:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L135
L137:
	popl	%ecx
	popl	%ebx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_logo.1:
	.ascii "..............................****....***.*."
	.ascii ".............................**00**..**0**.0"
	.ascii "............................**00.**0.**0.*0."
	.ascii "............................**0..**0.**0..0."
	.ascii "...........................**00..**0..**...."
	.ascii "...........................**0..**00..***..."
	.ascii "...........................**0..**0.*..**0.."
	.ascii "...........................**0.**00**0.**0.."
	.ascii "............................****00.*0***00.."
	.ascii ".............................0000...0.000..."
	.ascii "............................................"
	.ascii "............................................"
	.ascii "............................................"
	.text
	.balign 2
.globl _init_screen8
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
_init_screen8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$24, %esp
	movl	16(%ebp), %eax
	movl	12(%ebp), %ebx
	subl	$29, %eax
	decl	%ebx
	pushl	%eax
	pushl	%ebx
	pushl	$0
	pushl	$0
	pushl	$14
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	subl	$28, %eax
	pushl	%eax
	pushl	%ebx
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$27, %eax
	pushl	%eax
	pushl	%ebx
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	decl	%eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	%ebx
	subl	$26, %eax
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$24, %eax
	movl	%eax, -16(%ebp)
	pushl	%eax
	pushl	$59
	pushl	%eax
	pushl	$3
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %edx
	subl	$4, %edx
	pushl	%edx
	movl	%edx, -20(%ebp)
	pushl	$2
	pushl	-16(%ebp)
	pushl	$2
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	-20(%ebp)
	pushl	$59
	pushl	-20(%ebp)
	pushl	$3
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %esi
	movl	16(%ebp), %eax
	subl	$23, %esi
	subl	$5, %eax
	movl	%esi, -24(%ebp)
	pushl	%eax
	pushl	$59
	pushl	%esi
	pushl	$59
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %esi
	addl	$56, %esp
	subl	$3, %esi
	pushl	%esi
	pushl	$59
	pushl	%esi
	pushl	$2
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	%esi
	pushl	$60
	pushl	-16(%ebp)
	pushl	$60
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %ebx
	addl	$56, %esp
	movl	12(%ebp), %edi
	pushl	-16(%ebp)
	subl	$4, %edi
	subl	$47, %ebx
	pushl	%edi
	pushl	-16(%ebp)
	pushl	%ebx
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	-20(%ebp)
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%esi
	pushl	%edi
	xorl	%edi, %edi
	pushl	%esi
	pushl	%ebx
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %eax
	pushl	%esi
	subl	$3, %eax
	pushl	%eax
	pushl	-16(%ebp)
	pushl	%eax
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %ecx
	subl	$18, %ecx
	addl	$56, %esp
	imull	12(%ebp), %ecx
	movl	$0, -36(%ebp)
L155:
	xorl	%ebx, %ebx
L154:
	movl	-36(%ebp), %eax
	movb	_logo.1(%ebx,%eax), %dl
	cmpb	$42, %dl
	je	L160
	cmpb	$48, %dl
	je	L161
	movb	$-1, %dl
L150:
	cmpb	$-1, %dl
	je	L147
	movzbl	%dl, %edx
	leal	(%ebx,%ecx), %esi
	movl	8(%ebp), %eax
	movw	_table_16_65536(%edx,%edx), %dx
	movw	%dx, 20(%eax,%esi,2)
L147:
	incl	%ebx
	cmpl	$43, %ebx
	jle	L154
	incl	%edi
	addl	12(%ebp), %ecx
	addl	$44, -36(%ebp)
	cmpl	$12, %edi
	jle	L155
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L161:
	movb	$7, %dl
	jmp	L150
L160:
	movb	$4, %dl
	jmp	L150
	.balign 2
.globl _putfont8
	.def	_putfont8;	.scl	2;	.type	32;	.endef
_putfont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$24, %esp
	movb	24(%ebp), %al
	movb	28(%ebp), %dl
	movb	%al, -13(%ebp)
	movb	%dl, -14(%ebp)
	movl	$0, -20(%ebp)
L183:
	movl	32(%ebp), %eax
	movl	-20(%ebp), %edx
	movb	(%edx,%eax), %al
	movb	%al, -25(%ebp)
	movb	$-128, -33(%ebp)
	movl	$0, -32(%ebp)
L182:
	movsbl	-14(%ebp),%ecx
	movl	-20(%ebp), %eax
	movl	-32(%ebp), %edx
	imull	%ecx, %eax
	addl	20(%ebp), %eax
	movl	%ecx, %ebx
	imull	%ecx, %edx
	imull	12(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %edx
	addl	16(%ebp), %eax
	leal	(%edx,%eax,2), %eax
	movl	%eax, -24(%ebp)
	movsbl	-25(%ebp),%edx
	movzbl	-33(%ebp), %eax
	testl	%eax, %edx
	je	L171
	xorl	%esi, %esi
	cmpl	%ecx, %esi
	jge	L171
	xorl	%edi, %edi
L181:
	xorl	%ecx, %ecx
	cmpl	%ebx, %ecx
	jge	L190
	movl	-24(%ebp), %eax
	leal	(%eax,%edi,2), %edx
L180:
	movzbl	-13(%ebp), %eax
	incl	%ecx
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edx)
	addl	$2, %edx
	cmpl	%ebx, %ecx
	jl	L180
L190:
	incl	%esi
	addl	12(%ebp), %edi
	cmpl	%ebx, %esi
	jl	L181
L171:
	incl	-32(%ebp)
	shrb	-33(%ebp)
	cmpl	$7, -32(%ebp)
	jle	L182
	incl	-20(%ebp)
	cmpl	$15, -20(%ebp)
	jle	L183
	addl	$24, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putfonts8_asc
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
_putfonts8_asc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movb	28(%ebp), %dl
	movb	24(%ebp), %al
	movb	%dl, -14(%ebp)
	movb	%al, -13(%ebp)
	call	_task_now
	movl	%eax, -20(%ebp)
	movl	1512, %eax
	movl	-20(%ebp), %edx
	movl	%eax, -24(%ebp)
	cmpb	$0, 188(%edx)
	jne	L192
	movl	32(%ebp), %eax
	cmpb	$0, (%eax)
	jne	L197
L192:
	movl	-20(%ebp), %eax
	cmpb	$1, 188(%eax)
	je	L228
L198:
	movl	-20(%ebp), %edx
	cmpb	$2, 188(%edx)
	je	L229
L191:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L229:
	movl	32(%ebp), %eax
	cmpb	$0, (%eax)
	je	L191
L224:
	movl	-20(%ebp), %edx
	movb	189(%edx), %al
	testb	%al, %al
	jne	L220
	movl	32(%ebp), %eax
	movb	(%eax), %dl
	leal	127(%edx), %eax
	cmpb	$125, %al
	ja	L221
	movl	-20(%ebp), %eax
	movb	%dl, 189(%eax)
L223:
	movsbl	-14(%ebp),%eax
	movl	16(%ebp), %edx
	incl	32(%ebp)
	leal	(%edx,%eax,8), %edx
	movl	32(%ebp), %eax
	movl	%edx, 16(%ebp)
	cmpb	$0, (%eax)
	jne	L224
	jmp	L191
L221:
	movzbl	%dl, %eax
	sall	$4, %eax
	addl	-24(%ebp), %eax
	pushl	%eax
	movsbl	-14(%ebp),%eax
	pushl	%eax
	movzbl	-13(%ebp), %eax
	pushl	%eax
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$28, %esp
	jmp	L223
L220:
	movzbl	%al, %ebx
	imull	$94, %ebx, %ebx
	movl	32(%ebp), %edx
	movzbl	(%edx), %eax
	movl	-20(%ebp), %edx
	leal	-15295(%eax,%ebx), %ebx
	movb	$0, 189(%edx)
	sall	$5, %ebx
	addl	-24(%ebp), %ebx
	movsbl	-14(%ebp),%edi
	leal	4096(%ebx), %eax
	addl	$4112, %ebx
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	%edi
	subl	$8, %eax
	movzbl	-13(%ebp), %esi
	pushl	%esi
	pushl	20(%ebp)
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	pushl	%ebx
	pushl	%edi
	pushl	%esi
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$56, %esp
	jmp	L223
L228:
	movl	32(%ebp), %edx
	cmpb	$0, (%edx)
	je	L198
L214:
	movl	-20(%ebp), %eax
	movb	189(%eax), %dl
	testb	%dl, %dl
	jne	L203
	movl	32(%ebp), %eax
	movb	(%eax), %dl
	leal	127(%edx), %eax
	cmpb	$30, %al
	jbe	L205
	leal	32(%edx), %eax
	cmpb	$28, %al
	ja	L204
L205:
	movl	-20(%ebp), %eax
	movb	%dl, 189(%eax)
L207:
	movsbl	-14(%ebp),%eax
	movl	16(%ebp), %edx
	incl	32(%ebp)
	leal	(%edx,%eax,8), %edx
	movl	32(%ebp), %eax
	movl	%edx, 16(%ebp)
	cmpb	$0, (%eax)
	jne	L214
	jmp	L198
L204:
	movzbl	%dl, %eax
	sall	$4, %eax
	addl	-24(%ebp), %eax
	pushl	%eax
	movsbl	-14(%ebp),%eax
	pushl	%eax
	movzbl	-13(%ebp), %eax
	pushl	%eax
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$28, %esp
	jmp	L207
L203:
	leal	127(%edx), %eax
	cmpb	$30, %al
	ja	L208
	movzbl	%dl, %eax
	leal	-258(%eax,%eax), %ecx
L209:
	movl	32(%ebp), %eax
	movb	(%eax), %dl
	leal	-64(%edx), %eax
	cmpb	$62, %al
	ja	L210
	movzbl	%dl, %eax
	subl	$64, %eax
L211:
	imull	$94, %ecx, %ebx
	movl	-20(%ebp), %edx
	addl	%eax, %ebx
	sall	$5, %ebx
	movb	$0, 189(%edx)
	addl	-24(%ebp), %ebx
	movsbl	-14(%ebp),%edi
	leal	4096(%ebx), %eax
	addl	$4112, %ebx
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	%edi
	subl	$8, %eax
	movzbl	-13(%ebp), %esi
	pushl	%esi
	pushl	20(%ebp)
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	pushl	%ebx
	pushl	%edi
	pushl	%esi
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$56, %esp
	jmp	L207
L210:
	leal	-128(%edx), %eax
	cmpb	$30, %al
	ja	L212
	movzbl	%dl, %eax
	subl	$65, %eax
	jmp	L211
L212:
	movzbl	%dl, %eax
	subl	$159, %eax
	incl	%ecx
	jmp	L211
L208:
	movzbl	%dl, %eax
	leal	-386(%eax,%eax), %ecx
	jmp	L209
L197:
	movl	32(%ebp), %edx
	movsbl	-14(%ebp),%ebx
	movzbl	(%edx), %eax
	sall	$4, %eax
	addl	$_hankaku, %eax
	pushl	%eax
	pushl	%ebx
	movzbl	-13(%ebp), %eax
	pushl	%eax
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	incl	32(%ebp)
	movl	16(%ebp), %eax
	movl	32(%ebp), %edx
	addl	$28, %esp
	leal	(%eax,%ebx,8), %eax
	movl	%eax, 16(%ebp)
	cmpb	$0, (%edx)
	jne	L197
	jmp	L192
	.data
_cursor.2:
	.ascii "*..............."
	.ascii "**.............."
	.ascii "*O*............."
	.ascii "*OO*............"
	.ascii "*OOO*..........."
	.ascii "*OOOO*.........."
	.ascii "*OOOOO*........."
	.ascii "*OOOOOO*........"
	.ascii "*OOOOOOO*......."
	.ascii "*OOOOO****......"
	.ascii "*OO*OO*........."
	.ascii "*O**OO*........."
	.ascii "**..*OO*........"
	.ascii "*...*OO*........"
	.ascii ".....*OO*......."
	.ascii ".....***........"
	.text
	.balign 2
.globl _init_mouse_cursor81
	.def	_init_mouse_cursor81;	.scl	2;	.type	32;	.endef
_init_mouse_cursor81:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%eax
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L243:
	xorl	%ecx, %ecx
L242:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.2(%edx)
	je	L248
L239:
	cmpb	$79, _cursor.2(%edx)
	je	L249
L240:
	cmpb	$46, _cursor.2(%edx)
	je	L250
L237:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L242
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L243
	popl	%edi
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L250:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L237
L249:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L240
L248:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L239
	.data
_cursor.3:
	.ascii ".**............."
	.ascii "*OO*............"
	.ascii "*OO*............"
	.ascii "*OO***.**.**.**."
	.ascii "*OO*OO*OO*OO*OO*"
	.ascii "*OO*OO*OO*OO*OO*"
	.ascii "*OO*OO*OO*OO*OO*"
	.ascii "*OO*OO*OO*OO*OO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii ".**************."
	.text
	.balign 2
.globl _init_mouse_cursor8
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
_init_mouse_cursor8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%eax
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L264:
	xorl	%ecx, %ecx
L263:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.3(%edx)
	je	L269
L260:
	cmpb	$79, _cursor.3(%edx)
	je	L270
L261:
	cmpb	$46, _cursor.3(%edx)
	je	L271
L258:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L263
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L264
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L271:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L258
L270:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L261
L269:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L260
	.data
_cursor.4:
	.ascii "...*........*..."
	.ascii "..**........**.."
	.ascii ".*O**********O*."
	.ascii "*OOOOOOOOOOOOOO*"
	.ascii ".*O**********O*."
	.ascii "..**........**.."
	.ascii "...*........*..."
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.ascii "................"
	.text
	.balign 2
.globl _set_mouse_cursorl8
	.def	_set_mouse_cursorl8;	.scl	2;	.type	32;	.endef
_set_mouse_cursorl8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%eax
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L285:
	xorl	%ecx, %ecx
L284:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.4(%edx)
	je	L290
L281:
	cmpb	$79, _cursor.4(%edx)
	je	L291
L282:
	cmpb	$46, _cursor.4(%edx)
	je	L292
L279:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L284
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L285
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L292:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L279
L291:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L282
L290:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L281
	.data
_cursor.5:
	.ascii "...*............"
	.ascii "..*O*..........."
	.ascii ".*OOO*.........."
	.ascii "***O***........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "..*O*..........."
	.ascii "***O***........."
	.ascii ".*OOO*.........."
	.ascii "..*O*..........."
	.ascii "...*............"
	.text
	.balign 2
.globl _set_mouse_cursorh8
	.def	_set_mouse_cursorh8;	.scl	2;	.type	32;	.endef
_set_mouse_cursorh8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%edx
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L306:
	xorl	%ecx, %ecx
L305:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.5(%edx)
	je	L311
L302:
	cmpb	$79, _cursor.5(%edx)
	je	L312
L303:
	cmpb	$46, _cursor.5(%edx)
	je	L313
L300:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L305
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L306
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L313:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L300
L312:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L303
L311:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L302
	.data
_cursor.6:
	.ascii "*****..........."
	.ascii "*OO*............"
	.ascii "*OO*............"
	.ascii "***O*..........."
	.ascii "*..*O*.........."
	.ascii "....*O*........."
	.ascii ".....*O*........"
	.ascii "......*O*......."
	.ascii ".......*O*......"
	.ascii "........*O*....."
	.ascii ".........*O*...."
	.ascii "..........*O*..*"
	.ascii "...........*O***"
	.ascii "............*OO*"
	.ascii "............*OO*"
	.ascii "...........*****"
	.text
	.balign 2
.globl _set_mouse_cursorlt8
	.def	_set_mouse_cursorlt8;	.scl	2;	.type	32;	.endef
_set_mouse_cursorlt8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	pushl	%ebx
	xorl	%ebx, %ebx
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L327:
	xorl	%ecx, %ecx
L326:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.6(%edx)
	je	L332
L323:
	cmpb	$79, _cursor.6(%edx)
	je	L333
L324:
	cmpb	$46, _cursor.6(%edx)
	je	L334
L321:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L326
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L327
	popl	%ecx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L334:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L321
L333:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L324
L332:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L323
	.data
_cursor.7:
	.ascii "...........*****"
	.ascii "............*OO*"
	.ascii "............*OO*"
	.ascii "...........*O***"
	.ascii "..........*O*..*"
	.ascii ".........*O*...."
	.ascii "........*O*....."
	.ascii ".......*O*......"
	.ascii "......*O*......."
	.ascii ".....*O*........"
	.ascii "....*O*........."
	.ascii "*..*O*.........."
	.ascii "***O*..........."
	.ascii "*OO*............"
	.ascii "*OO*............"
	.ascii "*****..........."
	.text
	.balign 2
.globl _set_mouse_cursorrb8
	.def	_set_mouse_cursorrb8;	.scl	2;	.type	32;	.endef
_set_mouse_cursorrb8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	xorl	%esi, %esi
	pushl	%edi
	xorl	%ebx, %ebx
	movb	12(%ebp), %al
	movl	8(%ebp), %edi
	movb	%al, -13(%ebp)
L348:
	xorl	%ecx, %ecx
L347:
	leal	(%ecx,%ebx), %edx
	cmpb	$42, _cursor.7(%edx)
	je	L353
L344:
	cmpb	$79, _cursor.7(%edx)
	je	L354
L345:
	cmpb	$46, _cursor.7(%edx)
	je	L355
L342:
	incl	%ecx
	cmpl	$15, %ecx
	jle	L347
	incl	%esi
	addl	$16, %ebx
	cmpl	$15, %esi
	jle	L348
	popl	%esi
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L355:
	movzbl	-13(%ebp), %eax
	movw	_table_16_65536(%eax,%eax), %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L342
L354:
	movw	_table_16_65536+14, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L345
L353:
	movw	_table_16_65536, %ax
	movw	%ax, (%edi,%edx,2)
	jmp	L344
	.balign 2
.globl _putblock8_8
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
_putblock8_8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$12, %esp
	cmpl	20(%ebp), %esi
	jge	L368
	xorl	%edi, %edi
L366:
	xorl	%ebx, %ebx
	cmpl	16(%ebp), %ebx
	jge	L370
	movl	32(%ebp), %eax
	leal	(%eax,%edi,2), %eax
	movl	%eax, -24(%ebp)
L365:
	movl	28(%ebp), %edx
	movl	24(%ebp), %eax
	addl	%esi, %edx
	addl	%ebx, %eax
	imull	12(%ebp), %edx
	addl	%eax, %edx
	incl	%ebx
	movl	%edx, -20(%ebp)
	movl	-24(%ebp), %edx
	movl	-20(%ebp), %ecx
	movswl	(%edx),%eax
	movl	8(%ebp), %edx
	movw	_table_16_65536(%eax,%eax), %ax
	addl	$2, -24(%ebp)
	movw	%ax, (%edx,%ecx,2)
	cmpl	16(%ebp), %ebx
	jl	L365
L370:
	incl	%esi
	addl	36(%ebp), %edi
	cmpl	20(%ebp), %esi
	jl	L366
L368:
	addl	$12, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC0:
	.ascii "/rapuwp.jpg\0"
	.text
	.balign 2
.globl _read_picture
	.def	_read_picture;	.scl	2;	.type	32;	.endef
_read_picture:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$56, %esp
	movl	8(%ebp), %esi
	pushl	%esi
	pushl	$224
	pushl	$1058304
	pushl	$LC0
	call	_file_search2
	addl	$16, %esp
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L373
	testb	$24, 11(%eax)
	je	L372
L373:
	orl	$-1, %eax
L371:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L372:
	movl	28(%eax), %eax
	xorl	%edi, %edi
	pushl	%eax
	movl	%eax, -32(%ebp)
	pushl	$3932160
	call	_memman_alloc_4k
	leal	-32(%ebp), %eax
	pushl	%esi
	pushl	%eax
	movzwl	26(%ebx), %eax
	pushl	%eax
	call	_file_loadfile2
	pushl	$65536
	pushl	$3932160
	movl	%eax, -36(%ebp)
	call	_memman_alloc_4k
	pushl	-36(%ebp)
	pushl	-32(%ebp)
	movl	%eax, -44(%ebp)
	leal	-28(%ebp), %eax
	pushl	%eax
	pushl	-44(%ebp)
	call	_info_JPEG
	movl	-16(%ebp), %eax
	imull	-20(%ebp), %eax
	sall	$2, %eax
	addl	$44, %esp
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	pushl	%eax
	movl	%eax, -40(%ebp)
	pushl	$4
	pushl	-36(%ebp)
	pushl	-32(%ebp)
	pushl	-44(%ebp)
	call	_decode0_JPEG
	addl	$32, %esp
	movl	16(%ebp), %eax
	movl	$2, %ecx
	subl	-20(%ebp), %eax
	cltd
	movl	%eax, -48(%ebp)
	idivl	%ecx
	movl	%eax, -52(%ebp)
	movl	-16(%ebp), %eax
	subl	%eax, 20(%ebp)
	movl	20(%ebp), %eax
	cltd
	idivl	%ecx
	cmpl	-16(%ebp), %edi
	movl	%eax, -60(%ebp)
	jge	L385
L383:
	xorl	%esi, %esi
	movl	-20(%ebp), %eax
	cmpl	%eax, %esi
	jl	L382
L387:
	incl	%edi
	cmpl	-16(%ebp), %edi
	jl	L383
L385:
	pushl	-32(%ebp)
	pushl	-36(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	movl	-16(%ebp), %eax
	imull	-20(%ebp), %eax
	sall	$2, %eax
	pushl	%eax
	pushl	-40(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	pushl	$65536
	pushl	-44(%ebp)
	pushl	$3932160
	call	_memman_free_4k
	xorl	%eax, %eax
	jmp	L371
L382:
	imull	%edi, %eax
	movl	-60(%ebp), %ebx
	addl	%esi, %eax
	addl	%edi, %ebx
	movl	%eax, -68(%ebp)
	imull	16(%ebp), %ebx
	movl	-52(%ebp), %eax
	movl	-68(%ebp), %edx
	addl	%esi, %eax
	movl	-40(%ebp), %ecx
	addl	%eax, %ebx
	movsbl	1522,%eax
	pushl	%eax
	pushl	%edi
	pushl	%esi
	incl	%esi
	movzbl	(%ecx,%edx,4), %eax
	pushl	%eax
	movzbl	1(%ecx,%edx,4), %eax
	pushl	%eax
	movzbl	2(%ecx,%edx,4), %eax
	pushl	%eax
	call	_rgb2pal
	addl	$24, %esp
	movl	12(%ebp), %edx
	movw	%ax, (%edx,%ebx,2)
	movl	-20(%ebp), %eax
	cmpl	%eax, %esi
	jl	L382
	jmp	L387
	.data
	.balign 4
_table.8:
	.long	3
	.long	1
	.long	0
	.long	2
	.text
	.balign 2
.globl _rgb2pal
	.def	_rgb2pal;	.scl	2;	.type	32;	.endef
_rgb2pal:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$20, %esp
	movl	8(%ebp), %ecx
	movl	12(%ebp), %edi
	movl	16(%ebp), %ebx
	movl	20(%ebp), %edx
	movl	24(%ebp), %eax
	cmpl	$8, 28(%ebp)
	je	L391
	sall	$8, %ecx
	leal	0(,%edi,8), %eax
	andw	$2016, %ax
	movl	%ecx, %edx
	andw	$-2048, %dx
	sarl	$3, %ebx
	orl	%eax, %edx
	orl	%ebx, %edx
	movzwl	%dx, %eax
L388:
	addl	$20, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L391:
	imull	$21, %ecx, %ecx
	andl	$1, %edx
	andl	$1, %eax
	movl	$256, %esi
	leal	(%edx,%eax,2), %eax
	imull	$21, %edi, %edi
	movl	_table.8(,%eax,4), %eax
	movl	%eax, -32(%ebp)
	movl	%ecx, %eax
	cltd
	idivl	%esi
	movl	%eax, %ecx
	movl	%edi, %eax
	cltd
	idivl	%esi
	imull	$21, %ebx, %ebx
	movl	%eax, %edi
	addl	-32(%ebp), %ecx
	movl	%ebx, %eax
	cltd
	idivl	%esi
	movl	%eax, %ebx
	movl	$4, %esi
	movl	%ecx, %eax
	addl	-32(%ebp), %edi
	addl	-32(%ebp), %ebx
	cltd
	idivl	%esi
	movl	%eax, %ecx
	movl	%edi, %eax
	cltd
	idivl	%esi
	movl	%eax, %edi
	movl	%ebx, %eax
	cltd
	idivl	%esi
	movl	%eax, %ebx
	imull	$6, %edi, %eax
	imull	$36, %ebx, %edx
	leal	(%eax,%ecx), %eax
	leal	16(%edx,%eax), %eax
	movzwl	%ax, %eax
	jmp	L388
.globl _table_16_65536
	.data
	.balign 16
_table_16_65536:
	.space 131072
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_rgb2pal;	.scl	2;	.type	32;	.endef
	.def	_decode0_JPEG;	.scl	2;	.type	32;	.endef
	.def	_info_JPEG;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile2;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_file_search2;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_set_palette;	.scl	2;	.type	32;	.endef
