	.file	"tek.c"
	.text
	.balign 2
	.def	_tek_getnum_s7s;	.scl	3;	.type	32;	.endef
_tek_getnum_s7s:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	(%ebx), %edx
L2:
	sall	$7, %ecx
	movzbl	(%edx), %eax
	orl	%eax, %ecx
	incl	%edx
	testl	$1, %ecx
	je	L2
	shrl	%ecx
	movl	%edx, (%ebx)
	popl	%ebx
	movl	%ecx, %eax
	popl	%ebp
	ret
	.data
_header.0:
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	79
	.byte	83
	.byte	65
	.byte	83
	.byte	75
	.byte	67
	.byte	77
	.byte	80
	.text
	.balign 2
.globl _tek_getsize
	.def	_tek_getsize;	.scl	2;	.type	32;	.endef
_tek_getsize:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$_header.0, %edi
	pushl	%ebx
	orl	$-1, %ebx
	pushl	%edx
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	movl	%eax, %esi
	cld
	movl	$15, %eax
	incl	%esi
	movl	%eax, %ecx
	repe
	cmpsb
	jne	L7
	movl	-16(%ebp), %edx
	movb	(%edx), %al
	cmpb	$-125, %al
	je	L8
	cmpb	$-123, %al
	je	L8
	cmpb	$-119, %al
	je	L8
L7:
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L8:
	movl	-16(%ebp), %eax
	addl	$16, %eax
	movl	%eax, 8(%ebp)
	leal	8(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	movl	%eax, %ebx
	popl	%eax
	jmp	L7
	.balign 2
.globl _tek_decomp
	.def	_tek_decomp;	.scl	2;	.type	32;	.endef
_tek_decomp:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	orl	$-1, %ebx
	movl	8(%ebp), %eax
	movl	12(%ebp), %ecx
	movl	16(%ebp), %esi
	movb	(%eax), %dl
	cmpb	$-125, %dl
	je	L17
	cmpb	$-123, %dl
	je	L18
	cmpb	$-119, %dl
	je	L19
L11:
	xorl	%eax, %eax
	testl	%ebx, %ebx
	sete	%al
	leal	-8(%ebp), %esp
	decl	%eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L19:
	pushl	%ecx
	pushl	%eax
	pushl	%esi
	call	_tek_decode5
L16:
	movl	%eax, %ebx
	addl	$12, %esp
	jmp	L11
L18:
	pushl	%ecx
	pushl	%eax
	pushl	%esi
	call	_tek_decode2
	jmp	L16
L17:
	pushl	%ecx
	pushl	%eax
	pushl	%esi
	call	_tek_decode1
	jmp	L16
	.balign 2
	.def	_tek_lzrestore_stk1;	.scl	3;	.type	32;	.endef
_tek_lzrestore_stk1:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	20(%ebp), %esi
	movl	16(%ebp), %eax
	addl	%esi, %eax
	movl	%esi, -24(%ebp)
	movl	%eax, -20(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
L21:
	movl	-16(%ebp), %eax
	movzbl	(%eax), %edi
	movl	%edi, %ebx
	incl	%eax
	andl	$15, %ebx
	movl	%eax, -16(%ebp)
	je	L53
L24:
	sarl	$4, %edi
	je	L54
L26:
	movl	-16(%ebp), %eax
	movb	(%eax), %dl
	incl	%eax
	movb	%dl, (%esi)
	incl	%esi
	decl	%ebx
	movl	%eax, -16(%ebp)
	jne	L26
	cmpl	-20(%ebp), %esi
	jae	L22
L31:
	movl	-16(%ebp), %eax
	movzbl	(%eax), %ecx
	movl	%ecx, %ebx
	incl	%eax
	andl	$15, %ebx
	movl	%eax, -16(%ebp)
	testl	$1, %ecx
	jne	L34
L35:
	sall	$7, %ebx
	movl	-16(%ebp), %eax
	movzbl	(%eax), %edx
	orl	%edx, %ebx
	incl	%eax
	movl	%eax, -16(%ebp)
	testl	$1, %ebx
	je	L35
L34:
	sarl	%ebx
	sarl	$4, %ecx
	notl	%ebx
	jne	L39
L40:
	sall	$7, %ecx
	movl	-16(%ebp), %eax
	movzbl	(%eax), %edx
	orl	%edx, %ecx
	incl	%eax
	movl	%eax, -16(%ebp)
	testl	$1, %ecx
	je	L40
	sarl	%ecx
L39:
	leal	(%ebx,%esi), %eax
	incl	%ecx
	cmpl	-24(%ebp), %eax
	jb	L45
	leal	(%ecx,%esi), %eax
	cmpl	-20(%ebp), %eax
	jbe	L47
	movl	-20(%ebp), %ecx
	subl	%esi, %ecx
L47:
	movb	(%ebx,%esi), %al
	movb	%al, (%esi)
	incl	%esi
	decl	%ecx
	jne	L47
	decl	%edi
	jne	L31
	cmpl	-20(%ebp), %esi
	jb	L21
L22:
	xorl	%eax, %eax
L20:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L45:
	movl	$1, %eax
	jmp	L20
L54:
	leal	-16(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	popl	%ecx
	movl	%eax, %edi
	jmp	L26
L53:
	leal	-16(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	movl	%eax, %ebx
	popl	%eax
	jmp	L24
	.balign 2
	.def	_tek_decode1;	.scl	3;	.type	32;	.endef
_tek_decode1:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %eax
	leal	12(%ebp), %esi
	movl	%eax, %edi
	pushl	%esi
	addl	$16, %eax
	addl	8(%ebp), %edi
	movl	%eax, 12(%ebp)
	call	_tek_getnum_s7s
	movl	%eax, %ebx
	popl	%eax
	testl	%ebx, %ebx
	jle	L56
	pushl	%esi
	call	_tek_getnum_s7s
	movl	%eax, %ecx
	movl	%eax, %edx
	sarl	%ecx
	movl	$1, %eax
	andl	$15, %ecx
	addl	$8, %ecx
	sall	%cl, %eax
	cmpl	%eax, %ebx
	popl	%ecx
	jg	L58
	movl	%edx, %eax
	andl	$33, %eax
	decl	%eax
	je	L57
L58:
	movl	$1, %edx
L55:
	leal	-12(%ebp), %esp
	movl	%edx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L57:
	andl	$64, %edx
	jne	L61
L59:
	pushl	%esi
	call	_tek_getnum_s7s
	popl	%edx
	testl	%eax, %eax
	movl	$1, %edx
	jne	L55
	pushl	16(%ebp)
	pushl	%ebx
	subl	12(%ebp), %edi
	pushl	12(%ebp)
	pushl	%edi
	call	_tek_lzrestore_stk1
	movl	%eax, %edx
	jmp	L55
L61:
	pushl	%esi
	call	_tek_getnum_s7s
	popl	%ecx
	jmp	L59
L56:
	xorl	%edx, %edx
	jmp	L55
	.balign 2
	.def	_tek_getnum_s7;	.scl	3;	.type	32;	.endef
_tek_getnum_s7:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	movl	8(%ebp), %edi
	pushl	%ebx
	movl	$1, %ebx
	movl	(%edi), %edx
L63:
	sall	$7, %ecx
	movzbl	(%edx), %eax
	orl	%eax, %ecx
	incl	%edx
	testl	$1, %ecx
	jne	L64
	sall	$7, %ebx
	addl	%ebx, %esi
	jmp	L63
L64:
	shrl	%ecx
	movl	%edx, (%edi)
	popl	%ebx
	leal	(%esi,%ecx), %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
	.def	_tek_lzrestore_stk2;	.scl	3;	.type	32;	.endef
_tek_lzrestore_stk2:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$36, %esp
	movl	16(%ebp), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	20(%ebp), %ecx
	movl	%eax, -40(%ebp)
	movl	%ecx, -44(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	$0, -36(%ebp)
L72:
	movl	-36(%ebp), %ecx
	movl	-36(%ebp), %eax
	notl	%eax
	movl	%eax, -28(%ebp,%ecx,4)
	incl	%ecx
	movl	%ecx, -36(%ebp)
	cmpl	$3, %ecx
	jle	L72
	movb	$0, -46(%ebp)
	movb	$0, -45(%ebp)
	testl	%edx, %edx
	jne	L117
L73:
	xorl	%edx, %edx
L67:
	leal	-12(%ebp), %esp
	movl	%edx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L117:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	movl	$1, %edx
	popl	%ecx
	testl	%eax, %eax
	jne	L67
L75:
	movl	$0, -36(%ebp)
L78:
	incl	-36(%ebp)
	cmpl	$16, -36(%ebp)
	jg	L118
	cmpb	$0, -46(%ebp)
	jne	L82
	movl	-32(%ebp), %eax
	movb	$8, -46(%ebp)
	movb	(%eax), %dl
	incl	%eax
	movb	%dl, -45(%ebp)
	movl	%eax, -32(%ebp)
L82:
	movb	-45(%ebp), %al
	decb	-46(%ebp)
	andl	$1, %eax
	shrb	-45(%ebp)
	andl	$1, %eax
	je	L78
L84:
	movl	-32(%ebp), %eax
	movl	20(%ebp), %ecx
	movb	(%eax), %dl
	incl	%eax
	movb	%dl, (%ecx)
	incl	%ecx
	decl	-36(%ebp)
	movl	%eax, -32(%ebp)
	movl	%ecx, 20(%ebp)
	jne	L84
	movl	-40(%ebp), %eax
	cmpl	%eax, %ecx
	jae	L73
L89:
	incl	-36(%ebp)
	cmpl	$16, -36(%ebp)
	jg	L119
	cmpb	$0, -46(%ebp)
	jne	L93
	movl	-32(%ebp), %eax
	movb	$8, -46(%ebp)
	movb	(%eax), %dl
	incl	%eax
	movb	%dl, -45(%ebp)
	movl	%eax, -32(%ebp)
L93:
	movb	-45(%ebp), %al
	decb	-46(%ebp)
	andl	$1, %eax
	shrb	-45(%ebp)
	andl	$1, %eax
	je	L89
L95:
	movl	-32(%ebp), %eax
	movzbl	(%eax), %ebx
	movl	%ebx, %edi
	incl	%eax
	sarl	$4, %edi
	andl	$15, %ebx
	movl	%eax, -32(%ebp)
	testl	$1, %ebx
	je	L120
L98:
	sarl	%ebx
	cmpl	$3, %ebx
	leal	-6(%ebx), %esi
	notl	%esi
	jg	L99
	movl	-28(%ebp,%ebx,4), %esi
L99:
	cmpl	$4, %ebx
	je	L121
L100:
	cmpl	$5, %ebx
	je	L122
L101:
	testl	%edi, %edi
	je	L123
L102:
	incl	%edi
	testl	%ebx, %ebx
	jle	L103
	cmpl	$1, %ebx
	jle	L104
	cmpl	$2, %ebx
	jle	L105
	movl	-20(%ebp), %eax
	movl	%eax, -16(%ebp)
L105:
	movl	-24(%ebp), %eax
	movl	%eax, -20(%ebp)
L104:
	movl	-28(%ebp), %eax
	movl	%esi, -28(%ebp)
	movl	%eax, -24(%ebp)
L103:
	movl	20(%ebp), %eax
	addl	%esi, %eax
	cmpl	-44(%ebp), %eax
	jb	L107
	movl	20(%ebp), %eax
	addl	%edi, %eax
	cmpl	-40(%ebp), %eax
	jbe	L109
	movl	-40(%ebp), %edi
	subl	20(%ebp), %edi
L109:
	movl	20(%ebp), %ecx
	movb	(%esi,%ecx), %al
	movb	%al, (%ecx)
	incl	%ecx
	decl	%edi
	movl	%ecx, 20(%ebp)
	jne	L109
	decl	-36(%ebp)
	jne	L95
	movl	-40(%ebp), %eax
	cmpl	%eax, %ecx
	jb	L75
	jmp	L73
L107:
	movl	$1, %edx
	jmp	L67
L123:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7
	leal	16(%eax), %edi
	popl	%eax
	jmp	L102
L122:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7
	addl	-28(%ebp), %eax
	leal	1(%eax), %esi
	popl	%eax
	jmp	L101
L121:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7
	movl	%eax, %esi
	popl	%eax
	notl	%esi
	addl	-28(%ebp), %esi
	jmp	L100
L120:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7
	incl	%eax
	sall	$4, %eax
	orl	%eax, %ebx
	popl	%eax
	jmp	L98
L119:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	addl	%eax, -36(%ebp)
	popl	%eax
	jmp	L95
L118:
	leal	-32(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	popl	%edx
	addl	%eax, -36(%ebp)
	jmp	L84
	.balign 2
	.def	_tek_decode2;	.scl	3;	.type	32;	.endef
_tek_decode2:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	12(%ebp), %edi
	pushl	%eax
	movl	12(%ebp), %eax
	pushl	%edi
	movl	%eax, %esi
	addl	$16, %eax
	addl	8(%ebp), %esi
	movl	%eax, 12(%ebp)
	movl	$0, -16(%ebp)
	call	_tek_getnum_s7s
	movl	%eax, %ebx
	popl	%eax
	testl	%ebx, %ebx
	jle	L125
	pushl	%edi
	call	_tek_getnum_s7s
	movl	%eax, %ecx
	movl	%eax, %edx
	sarl	%ecx
	movl	$1, %eax
	andl	$15, %ecx
	addl	$8, %ecx
	sall	%cl, %eax
	cmpl	%eax, %ebx
	popl	%ecx
	jg	L127
	movl	%edx, %eax
	andl	$33, %eax
	decl	%eax
	je	L126
L127:
	movl	$1, %eax
L124:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L126:
	andl	$64, %edx
	jne	L129
L128:
	pushl	16(%ebp)
	pushl	%ebx
	subl	12(%ebp), %esi
	pushl	12(%ebp)
	pushl	%esi
	call	_tek_lzrestore_stk2
	addl	$16, %esp
	movl	%eax, -16(%ebp)
L125:
	movl	-16(%ebp), %eax
	jmp	L124
L129:
	pushl	%edi
	call	_tek_getnum_s7s
	popl	%edi
	jmp	L128
	.data
_prop0_table.1:
	.byte	93
	.byte	0
_prop1_table.2:
	.byte	0
	.text
	.balign 2
	.def	_tek_lzrestore_tek5;	.scl	3;	.type	32;	.endef
_tek_lzrestore_tek5:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	movl	12(%ebp), %ebx
	movzbl	(%ebx), %ecx
	movl	%ecx, %eax
	andl	$15, %eax
	movl	$-1, -24(%ebp)
	cmpl	$1, %eax
	je	L132
	movl	$-2, -24(%ebp)
	cmpl	$5, %eax
	je	L132
	movl	$0, -24(%ebp)
	cmpl	$9, %eax
	je	L132
	movl	$1, %eax
L130:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L132:
	incl	%ebx
	sarl	$4, %ecx
	jne	L137
	movzbl	(%ebx), %ecx
	incl	%ebx
L138:
	movl	%ecx, %eax
	movl	$45, %esi
	cltd
	idivl	%esi
	movl	%eax, -16(%ebp)
	movl	$9, %esi
	movl	%edx, %eax
	cltd
	idivl	%esi
	cmpl	$0, -24(%ebp)
	movl	%edx, -28(%ebp)
	movl	%eax, -20(%ebp)
	jne	L143
	movzbl	(%ebx), %eax
	movl	%eax, -24(%ebp)
	incl	%ebx
L143:
	cmpl	$-1, -24(%ebp)
	je	L146
L144:
	movl	-28(%ebp), %ecx
	movl	$3072, %eax
	addl	-16(%ebp), %ecx
	sall	%cl, %eax
	leal	9984(%eax), %edi
	pushl	%edi
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, %esi
	popl	%eax
	popl	%edx
	orl	$-1, %eax
	testl	%esi, %esi
	je	L130
	pushl	-24(%ebp)
	pushl	-16(%ebp)
	pushl	-20(%ebp)
	pushl	-28(%ebp)
	pushl	20(%ebp)
	pushl	16(%ebp)
	pushl	%ebx
	pushl	%esi
	call	_tek_decmain5
	addl	$32, %esp
	pushl	%edi
	movl	%eax, -24(%ebp)
	pushl	%esi
	pushl	$3932160
	call	_memman_free_4k
	movl	-24(%ebp), %eax
	jmp	L130
L146:
	movl	-16(%ebp), %edi
	movl	-20(%ebp), %edx
	movl	%edx, -16(%ebp)
	movl	%edi, -20(%ebp)
	jmp	L144
L137:
	cmpl	$-1, -24(%ebp)
	je	L147
	movl	$1, %eax
	cmpl	$1, %ecx
	jg	L130
	movzbl	_prop1_table.2-1(%ecx), %ecx
	jmp	L138
L147:
	movl	$1, %eax
	cmpl	$2, %ecx
	jg	L130
	movzbl	_prop0_table.1-1(%ecx), %ecx
	jmp	L138
	.balign 2
	.def	_tek_setbm5;	.scl	3;	.type	32;	.endef
_tek_setbm5:
	pushl	%ebp
	orl	$-1, %eax
	movl	%esp, %ebp
	movl	$1, %edx
	pushl	%edi
	movl	%eax, %edi
	pushl	%esi
	movl	16(%ebp), %ecx
	movl	8(%ebp), %esi
	pushl	%ebx
	movl	12(%ebp), %ebx
	movb	%cl, 1(%esi)
	movb	%bl, (%esi)
	addl	%ebx, %ecx
	sall	%cl, %edi
	movb	%bl, %cl
	sall	%cl, %edx
	sall	%cl, %eax
	andl	$65535, %eax
	orl	%edi, %edx
	notl	%edi
	movl	%eax, 12(%esi)
	andl	%eax, %edi
	andl	%eax, %edx
	movl	%edi, 4(%esi)
	notl	%eax
	movl	%edx, 8(%esi)
	movl	%eax, 16(%esi)
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
	.def	_tek_rdget0;	.scl	3;	.type	32;	.endef
_tek_rdget0:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %edi
	movl	16(%ebp), %esi
L150:
	movl	4(%edi), %eax
	cmpl	$16777215, %eax
	ja	L160
L156:
	movl	%eax, %ebx
	movl	8(%edi), %ecx
	sall	$8, %ebx
	movl	(%edi), %eax
	sall	$8, %ecx
	movl	%ebx, 4(%edi)
	movzbl	(%eax), %edx
	orl	%edx, %ecx
	incl	%eax
	movl	%eax, (%edi)
	movl	%ecx, 8(%edi)
	movl	%ebx, %eax
	cmpl	$16777215, %ebx
	jbe	L156
L160:
	movl	4(%edi), %edx
	movl	8(%edi), %eax
	shrl	%edx
	addl	%esi, %esi
	movl	%edx, 4(%edi)
	cmpl	%edx, %eax
	jb	L152
	subl	%edx, %eax
	orl	$1, %esi
	movl	%eax, 8(%edi)
L152:
	decl	12(%ebp)
	jne	L150
	notl	%esi
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
	.def	_tek_rdget1;	.scl	3;	.type	32;	.endef
_tek_rdget1:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$20, %esp
	movl	16(%ebp), %eax
	movl	24(%ebp), %edi
	sarl	$4, %eax
	movl	%eax, -24(%ebp)
	movl	20(%ebp), %eax
	sall	$2, %eax
	andl	$15, 16(%ebp)
	subl	%eax, 12(%ebp)
L162:
	movl	12(%ebp), %eax
	movl	20(%ebp), %edx
	leal	(%eax,%edx,4), %edx
	movl	%edx, -20(%ebp)
	movl	(%edx), %eax
	movl	%eax, -16(%ebp)
	movl	20(%edi), %eax
	testl	%eax, %eax
	je	L165
	decl	%eax
	movl	%eax, 20(%edi)
	testl	%eax, %eax
	je	L187
L166:
	movl	4(%edi), %eax
	cmpl	%eax, -16(%ebp)
	jb	L186
	movl	8(%edi), %eax
	cmpl	%eax, -16(%ebp)
	jbe	L174
L186:
	movl	%eax, -16(%ebp)
L173:
	movl	-20(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, (%edx)
L165:
	movl	8(%ebp), %edx
	movl	4(%edx), %eax
	cmpl	$16777215, %eax
	ja	L185
L179:
	movl	%eax, %ebx
	movl	8(%ebp), %eax
	sall	$8, %ebx
	movl	8(%eax), %ecx
	movl	%ebx, 4(%eax)
	sall	$8, %ecx
	movl	(%eax), %eax
	movzbl	(%eax), %edx
	orl	%edx, %ecx
	incl	%eax
	movl	8(%ebp), %edx
	cmpl	$16777215, %ebx
	movl	%eax, (%edx)
	movl	%ecx, 8(%edx)
	movl	%ebx, %eax
	jbe	L179
L185:
	movl	8(%ebp), %eax
	sall	20(%ebp)
	movl	4(%eax), %esi
	movl	%esi, %ecx
	andl	12(%eax), %ecx
	movl	-16(%ebp), %eax
	mull	%ecx
	shrdl	$16, %edx, %eax
	shrl	$16, %edx
	movl	%eax, -32(%ebp)
	movl	%edx, -28(%ebp)
	movl	%eax, %ebx
	movl	8(%ebp), %edx
	movl	8(%edx), %ecx
	cmpl	%eax, %ecx
	jae	L180
	movl	-32(%ebp), %eax
	orl	$1, 20(%ebp)
	movl	%eax, 4(%edx)
	movl	-20(%ebp), %edx
	movl	$65536, %eax
	subl	-16(%ebp), %eax
	movzbl	1(%edi), %ecx
	shrl	%cl, %eax
	andl	12(%edi), %eax
	addl	%eax, (%edx)
L181:
	movl	-24(%ebp), %eax
	decl	16(%ebp)
	testl	%eax, 16(%ebp)
	jne	L164
	addl	$32, %edi
L164:
	cmpl	$0, 16(%ebp)
	jne	L162
	movl	20(%ebp), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L180:
	subl	%eax, %esi
	subl	%ebx, %ecx
	movl	8(%ebp), %eax
	movl	%esi, 4(%eax)
	movl	%ecx, 8(%eax)
	movzbl	1(%edi), %ecx
	shrl	%cl, -16(%ebp)
	movl	12(%edi), %edx
	movl	-20(%ebp), %eax
	andl	%edx, -16(%ebp)
	movl	-16(%ebp), %edx
	subl	%edx, (%eax)
	jmp	L181
L174:
	movl	-16(%ebp), %eax
	andl	16(%edi), %eax
	testl	%eax, %eax
	je	L165
	movl	12(%edi), %eax
	andl	%eax, -16(%ebp)
	jmp	L173
L187:
	movl	8(%ebp), %eax
	addl	$124, %eax
	pushl	%eax
	pushl	$0
	pushl	$113
	movl	8(%ebp), %eax
	addl	$9368, %eax
	pushl	%eax
	pushl	8(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	testl	%eax, %eax
	je	L169
	movl	8(%ebp), %edx
	movl	%edi, %eax
	addl	$60, %edx
	subl	8(%ebp), %eax
	pushl	%edx
	pushl	$0
	subl	$28, %eax
	sarl	$5, %eax
	pushl	$113
	movzbl	2(%edi), %edx
	leal	(%edx,%eax,2), %eax
	movl	8(%ebp), %edx
	leal	8984(%edx,%eax,4), %eax
	pushl	%eax
	pushl	%edx
	call	_tek_rdget1
	addl	$20, %esp
	testb	%al, %al
	movb	%al, 2(%edi)
	je	L188
L170:
	movl	24(%edi), %eax
	movl	%eax, 20(%edi)
	jmp	L166
L188:
	movl	8(%ebp), %esi
	addl	$92, %esi
	pushl	%esi
	pushl	$1
	pushl	$116
	movl	8(%ebp), %eax
	addl	$9240, %eax
	pushl	%eax
	pushl	8(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	movl	%eax, %ebx
	andl	$15, %ebx
	cmpl	$15, %ebx
	je	L169
	pushl	%esi
	pushl	$1
	pushl	$116
	movl	8(%ebp), %eax
	addl	$9304, %eax
	pushl	%eax
	pushl	8(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	decl	%eax
	andl	$15, %eax
	incl	%eax
	pushl	%eax
	pushl	%ebx
	pushl	%edi
	call	_tek_setbm5
	addl	$12, %esp
	jmp	L170
L169:
	movl	8(%ebp), %eax
	movl	8(%ebp), %edx
	addl	$16, %eax
	movl	16(%edx), %ebp
	movl	8(%eax), %esp
	jmp	*4(%eax)
	.balign 2
	.def	_tek_revbit;	.scl	3;	.type	32;	.endef
_tek_revbit:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	xorl	%ebx, %ebx
	movl	8(%ebp), %ecx
	movl	12(%ebp), %edx
L190:
	movl	%ecx, %eax
	shrl	%ecx
	andl	$1, %eax
	decl	%edx
	leal	(%eax,%ebx,2), %ebx
	jne	L190
	movl	%ebx, %eax
	popl	%ebx
	popl	%ebp
	ret
	.balign 2
	.def	_tek_getlen5;	.scl	3;	.type	32;	.endef
_tek_getlen5:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %esi
	movl	8(%ebp), %ebx
	pushl	1064(%ebx)
	leal	(%ebx,%esi,8), %edi
	pushl	$0
	pushl	$113
	leal	4892(%edi), %eax
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	20(%ebp), %eax
	je	L195
	imull	$7, 16(%ebp), %eax
	addl	%esi, %eax
	pushl	1068(%ebx)
	sall	$5, %eax
	pushl	$1
	pushl	$115
	leal	1212(%ebx,%eax), %eax
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	movl	%eax, %edx
	andl	$7, %edx
L202:
	addl	$20, %esp
L196:
	leal	-12(%ebp), %esp
	movl	%edx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L195:
	pushl	1064(%ebx)
	pushl	$0
	leal	4896(%edi), %eax
	pushl	$113
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	20(%ebp), %eax
	je	L197
	imull	$7, 16(%ebp), %eax
	addl	%esi, %eax
	pushl	1072(%ebx)
	sall	$5, %eax
	pushl	$1
	pushl	$115
	leal	1276(%ebx,%eax), %eax
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	movl	%eax, %edx
	jmp	L202
L197:
	pushl	1076(%ebx)
	sall	$10, %esi
	pushl	$1
	pushl	$120
	leal	4908(%esi,%ebx), %eax
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	addl	$20, %esp
	leal	-504(%eax), %edx
	testl	%edx, %edx
	jle	L199
	cmpl	$5, %edx
	jg	L200
	cmpl	$0, 20(%ebp)
	je	L203
L200:
	pushl	$-2
	pushl	%edx
	pushl	%ebx
	call	_tek_rdget0
	addl	$12, %esp
	leal	-1(%eax), %edx
L201:
	pushl	$-2
	pushl	%edx
	pushl	%ebx
	call	_tek_rdget0
	addl	$12, %esp
	leal	-1(%eax), %edx
L199:
	addl	$264, %edx
	jmp	L196
L203:
	pushl	1080(%ebx)
	movl	%edx, %eax
	pushl	$1
	orl	$112, %eax
	movb	%dl, %cl
	pushl	%eax
	movl	$4, %eax
	sall	%cl, %eax
	leal	8724(%eax,%ebx), %eax
	pushl	%eax
	pushl	%ebx
	call	_tek_rdget1
	addl	$20, %esp
	leal	-1(%eax), %edx
	jmp	L201
	.data
_state_table.3:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	4
	.long	5
_pt1.4:
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	18
	.byte	18
	.byte	18
	.byte	8
_pt2.5:
	.byte	8
	.byte	8
	.byte	10
	.byte	11
	.byte	12
	.byte	12
	.byte	14
	.byte	15
	.byte	16
	.byte	16
	.byte	18
	.byte	18
	.byte	20
	.byte	21
	.text
	.balign 2
	.def	_tek_decmain5;	.scl	3;	.type	32;	.endef
_tek_decmain5:
	pushl	%ebp
	movl	$1, %eax
	movl	%esp, %ebp
	movl	%eax, %edx
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$116, %esp
	movl	28(%ebp), %ecx
	movl	12(%ebp), %ebx
	sall	%cl, %edx
	movl	%edx, %ecx
	movl	8(%ebp), %edx
	decl	%ecx
	movl	%edx, -100(%ebp)
	movl	%ecx, -72(%ebp)
	movb	32(%ebp), %cl
	sall	%cl, %eax
	decl	%eax
	movl	-100(%ebp), %ecx
	movl	%eax, -76(%ebp)
	xorl	%eax, %eax
	cmpl	$-1, 36(%ebp)
	sete	%al
	movl	%eax, -80(%ebp)
	addl	$1116, %edx
	movl	$8, -84(%ebp)
	movl	24(%ebp), %eax
	movl	%edx, -104(%ebp)
	subl	%eax, -84(%ebp)
	leal	4(%ebx), %eax
	movl	%eax, (%ecx)
	movl	$120, -92(%ebp)
	movl	$-1, 4(%ecx)
	movzbl	(%ebx), %edx
	movzbl	1(%ebx), %eax
	sall	$16, %eax
	sall	$24, %edx
	orl	%eax, %edx
	movzbl	2(%ebx), %eax
	sall	$8, %eax
	orl	%eax, %edx
	movzbl	3(%ebx), %eax
	orl	%eax, %edx
	movl	%edx, 8(%ecx)
	movl	$0, -48(%ebp)
L209:
	movl	-48(%ebp), %edx
	movl	-48(%ebp), %eax
	notl	%eax
	movl	%eax, -28(%ebp,%edx,4)
	incl	%edx
	movl	%edx, -48(%ebp)
	cmpl	$3, %edx
	jle	L209
	movl	-100(%ebp), %eax
	movl	-100(%ebp), %ecx
	addl	$16, %eax
	leal	-12(%ebp), %edx
	movl	%edx, 16(%ecx)
	movl	$L211, 4(%eax)
	movl	%esp, 8(%eax)
	xorl	%eax, %eax
L212:
	testl	%eax, %eax
	jne	L213
	movl	24(%ebp), %ecx
	movl	$768, %eax
	addl	32(%ebp), %ecx
	sall	%cl, %eax
	addl	$2063, %eax
	movl	%eax, -48(%ebp)
	js	L330
L218:
	movl	-48(%ebp), %ecx
	movl	-104(%ebp), %eax
	movl	$32768, (%eax,%ecx,4)
	decl	%ecx
	movl	%ecx, -48(%ebp)
	jns	L218
L330:
	movl	$0, -48(%ebp)
	movl	-100(%ebp), %edx
L225:
	xorl	%eax, %eax
	cmpl	$3, -48(%ebp)
	setg	%al
	movl	%eax, 48(%edx)
	movl	$16384, %eax
	cmpl	$23, -48(%ebp)
	jle	L224
	movl	$8192, %eax
L224:
	movb	$0, 30(%edx)
	movb	$5, 29(%edx)
	movb	$5, 28(%edx)
	incl	-48(%ebp)
	movl	%eax, 52(%edx)
	addl	$32, %edx
	cmpl	$31, -48(%ebp)
	jle	L225
	movl	24(%ebp), %ecx
	movl	$1024, %eax
	addl	32(%ebp), %ecx
	movl	-104(%ebp), %edx
	sall	%cl, %eax
	cmpl	$0, -80(%ebp)
	leal	8248(%eax,%edx), %eax
	movl	%eax, -96(%ebp)
	je	L226
	movl	-100(%ebp), %ecx
	movl	%ecx, %eax
	movl	$-2048, 12(%ecx)
	addl	$48, %eax
	movl	$31, -48(%ebp)
L231:
	movl	$0, (%eax)
	addl	$32, %eax
	decl	-48(%ebp)
	jns	L231
	movl	$0, -48(%ebp)
L236:
	movl	-48(%ebp), %edx
	movl	-100(%ebp), %eax
	movl	-100(%ebp), %ecx
	addl	$28, %eax
	movl	%eax, 1052(%ecx,%edx,4)
	incl	%edx
	movl	%edx, -48(%ebp)
	cmpl	$13, %edx
	jle	L236
L237:
	movl	-100(%ebp), %eax
	movl	%eax, -128(%ebp)
	movl	$31, -48(%ebp)
L268:
	movl	-128(%ebp), %edx
	movzbl	29(%edx), %eax
	pushl	%eax
	movzbl	28(%edx), %eax
	pushl	%eax
	movl	%edx, %eax
	addl	$28, %eax
	pushl	%eax
	call	_tek_setbm5
	addl	$12, %esp
	addl	$32, -128(%ebp)
	decl	-48(%ebp)
	jns	L268
	movl	-100(%ebp), %ecx
	pushl	1052(%ecx)
	pushl	$0
	pushl	$113
	pushl	-104(%ebp)
	pushl	%ecx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L213
	movl	20(%ebp), %eax
	incl	20(%ebp)
	movl	%eax, -108(%ebp)
	movl	-100(%ebp), %eax
	addl	$796, %eax
	pushl	%eax
	movl	-104(%ebp), %eax
	pushl	$1
	addl	$8256, %eax
	pushl	-92(%ebp)
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	movl	-108(%ebp), %edx
	addl	$20, %esp
	movb	%al, (%edx)
	movl	16(%ebp), %ecx
	movl	$1, -68(%ebp)
	movl	$0, -60(%ebp)
	movl	$0, -64(%ebp)
	cmpl	%ecx, -68(%ebp)
	jge	L343
L326:
	movl	-68(%ebp), %eax
	movl	-100(%ebp), %edx
	andl	-72(%ebp), %eax
	movl	-104(%ebp), %ecx
	movl	%eax, -88(%ebp)
	xorl	%eax, %eax
	cmpl	$0, -64(%ebp)
	setg	%al
	pushl	1052(%edx,%eax,4)
	imull	$28, -88(%ebp), %eax
	addl	-64(%ebp), %eax
	pushl	$0
	pushl	$113
	leal	(%ecx,%eax,8), %eax
	pushl	%eax
	movl	%eax, -112(%ebp)
	pushl	%edx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L273
	movl	20(%ebp), %eax
	movb	-84(%ebp), %cl
	movzbl	-1(%eax), %edx
	movl	-68(%ebp), %eax
	andl	-76(%ebp), %eax
	sarl	%cl, %edx
	movb	24(%ebp), %cl
	sall	%cl, %eax
	orl	%eax, %edx
	movl	-64(%ebp), %ecx
	movl	%edx, %eax
	sall	$8, %eax
	movl	_state_table.3(,%ecx,4), %ecx
	movl	%eax, -48(%ebp)
	movl	%ecx, -64(%ebp)
	cmpl	$0, -60(%ebp)
	je	L349
	movl	-100(%ebp), %eax
	movl	20(%ebp), %edx
	addl	$796, %eax
	movl	%eax, -116(%ebp)
	movl	-28(%ebp), %eax
	movl	$1, -52(%ebp)
	movl	$8, -56(%ebp)
	movzbl	(%eax,%edx), %eax
	movl	%eax, -60(%ebp)
L280:
	movl	-48(%ebp), %eax
	movl	-100(%ebp), %ecx
	addl	-52(%ebp), %eax
	movl	-60(%ebp), %edx
	sarl	$7, %edx
	addl	%eax, %eax
	movl	%edx, -120(%ebp)
	pushl	1060(%ecx)
	orl	%edx, %eax
	movl	-96(%ebp), %ecx
	pushl	$0
	pushl	$113
	leal	(%ecx,%eax,4), %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	movl	-52(%ebp), %edx
	decl	-56(%ebp)
	addl	$20, %esp
	leal	(%eax,%edx,2), %eax
	movl	%eax, -52(%ebp)
	movl	-92(%ebp), %eax
	sarl	$4, %eax
	testl	%eax, -56(%ebp)
	jne	L283
	addl	$32, -116(%ebp)
L283:
	movl	-52(%ebp), %ecx
	xorl	%ecx, -120(%ebp)
	testl	$1, -120(%ebp)
	je	L284
	cmpl	$0, -56(%ebp)
	jne	L344
L284:
	sall	-60(%ebp)
	cmpl	$0, -56(%ebp)
	jne	L280
L281:
	movl	20(%ebp), %edx
	movb	-52(%ebp), %al
	movb	%al, (%edx)
	movl	$0, -60(%ebp)
L279:
	incl	-68(%ebp)
	incl	20(%ebp)
L270:
	movl	16(%ebp), %ecx
	cmpl	%ecx, -68(%ebp)
	jl	L326
L343:
	xorl	%eax, %eax
L204:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L344:
	movl	-92(%ebp), %eax
	movl	-104(%ebp), %ecx
	andl	$112, %eax
	orl	%eax, -56(%ebp)
	movl	-48(%ebp), %eax
	addl	-52(%ebp), %eax
	pushl	-116(%ebp)
	pushl	-52(%ebp)
	pushl	-56(%ebp)
	leal	8252(%ecx,%eax,4), %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	movl	%eax, -52(%ebp)
	jmp	L281
L349:
	sall	$10, %edx
	movl	-100(%ebp), %eax
	addl	$796, %eax
	movl	-104(%ebp), %ecx
	pushl	%eax
	pushl	$1
	leal	8256(%edx,%ecx), %eax
	pushl	-92(%ebp)
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	movl	20(%ebp), %edx
	addl	$20, %esp
	movb	%al, (%edx)
	jmp	L279
L273:
	movl	-100(%ebp), %ecx
	movl	-64(%ebp), %eax
	sall	$4, %eax
	pushl	1104(%ecx)
	addl	-104(%ebp), %eax
	pushl	$0
	pushl	$113
	movl	%eax, -124(%ebp)
	addl	$3584, %eax
	pushl	%eax
	pushl	%ecx
	orl	$1, -60(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L287
	pushl	-80(%ebp)
	movl	-20(%ebp), %eax
	pushl	-88(%ebp)
	movl	%eax, -16(%ebp)
	pushl	$0
	movl	-24(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	-28(%ebp), %eax
	pushl	-100(%ebp)
	movl	%eax, -24(%ebp)
	call	_tek_getlen5
	movl	%eax, -48(%ebp)
	movl	%eax, -52(%ebp)
	addl	$16, %esp
	xorl	%eax, %eax
	cmpl	$6, -64(%ebp)
	setg	%al
	cmpl	$3, -48(%ebp)
	leal	7(%eax,%eax,2), %eax
	movl	%eax, -64(%ebp)
	jle	L290
	movl	$3, -52(%ebp)
L290:
	xorl	%eax, %eax
	movl	-100(%ebp), %edx
	cmpl	$3, -52(%ebp)
	sete	%al
	sall	$8, -52(%ebp)
	pushl	1084(%edx,%eax,4)
	movl	-104(%ebp), %ecx
	movl	-52(%ebp), %edx
	pushl	$1
	pushl	$118
	leal	5840(%edx,%ecx), %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	movl	%eax, %ecx
	addl	$20, %esp
	andl	$63, %ecx
	movl	%ecx, -52(%ebp)
	movl	%ecx, -28(%ebp)
	cmpl	$3, %ecx
	jle	L295
	movl	%ecx, %edx
	movl	%eax, %ebx
	sarl	%edx
	andl	$1, %ebx
	movl	%ebx, %eax
	leal	-1(%edx), %ecx
	orl	$2, %eax
	sall	%cl, %eax
	movl	%ecx, -56(%ebp)
	movl	%eax, -28(%ebp)
	cmpl	$13, -52(%ebp)
	jle	L350
	cmpl	$0, -80(%ebp)
	jne	L302
	subl	$7, %edx
	movl	%edx, -56(%ebp)
	je	L303
	pushl	$-1
	pushl	%edx
	pushl	-100(%ebp)
	call	_tek_rdget0
	sall	$6, %eax
	addl	$12, %esp
	orl	%eax, -28(%ebp)
L303:
	movl	-100(%ebp), %eax
	pushl	$6
	pushl	1100(%eax)
	pushl	$1
	movl	-104(%ebp), %eax
	pushl	$118
	addl	$6864, %eax
	pushl	%eax
L348:
	pushl	-100(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	pushl	%eax
	call	_tek_revbit
	popl	%ecx
	orl	%eax, -28(%ebp)
	popl	%ebx
L295:
	notl	-28(%ebp)
L310:
	movl	-68(%ebp), %edx
	addl	$2, -48(%ebp)
	addl	-28(%ebp), %edx
	js	L213
	movl	-68(%ebp), %eax
	addl	-48(%ebp), %eax
	cmpl	16(%ebp), %eax
	jle	L321
	movl	16(%ebp), %ecx
	subl	-68(%ebp), %ecx
	movl	%ecx, -48(%ebp)
L321:
	movl	-48(%ebp), %eax
	addl	%eax, -68(%ebp)
L322:
	movl	20(%ebp), %edx
	movl	-28(%ebp), %eax
	movb	(%eax,%edx), %al
	movb	%al, (%edx)
	incl	%edx
	decl	-48(%ebp)
	movl	%edx, 20(%ebp)
	jne	L322
	jmp	L270
L213:
	movl	$1, %eax
	jmp	L204
L302:
	pushl	$-1
	leal	-5(%edx), %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget0
	sall	$4, %eax
	movl	-100(%ebp), %edx
	pushl	$4
	orl	%eax, -28(%ebp)
	movl	-104(%ebp), %eax
	addl	$6864, %eax
	pushl	1100(%edx)
	pushl	$1
	pushl	$116
	pushl	%eax
	pushl	%edx
	call	_tek_rdget1
	addl	$20, %esp
	pushl	%eax
	call	_tek_revbit
	orl	%eax, -28(%ebp)
	addl	$20, %esp
	jmp	L295
L350:
	xorl	%eax, %eax
	movl	-100(%ebp), %edx
	cmpl	$4, %ecx
	pushl	%ecx
	setge	%al
	imull	$248, %ebx, %ebx
	pushl	1092(%edx,%eax,4)
	movl	%ecx, %eax
	pushl	$1
	orl	$112, %eax
	movl	-104(%ebp), %edx
	pushl	%eax
	movb	-56(%ebp), %cl
	movl	$4, %eax
	addl	%ebx, %edx
	sall	%cl, %eax
	leal	7112(%eax,%edx), %edx
	pushl	%edx
	jmp	L348
L287:
	movl	-100(%ebp), %ecx
	movl	-124(%ebp), %eax
	addl	$3588, %eax
	pushl	1104(%ecx)
	pushl	$0
	pushl	$113
	pushl	%eax
	pushl	%ecx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L306
	movl	-100(%ebp), %eax
	movl	$-1, -48(%ebp)
	pushl	1104(%eax)
	pushl	$0
	movl	-112(%ebp), %eax
	pushl	$113
	addl	$4, %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	testl	%eax, %eax
	jne	L311
	xorl	%eax, %eax
	cmpl	$6, -64(%ebp)
	setg	%al
	leal	9(%eax,%eax), %eax
L346:
	movl	%eax, -64(%ebp)
	jmp	L310
L311:
	pushl	-80(%ebp)
	pushl	-88(%ebp)
	pushl	$1
	pushl	-100(%ebp)
	call	_tek_getlen5
	movl	%eax, -48(%ebp)
	addl	$16, %esp
	xorl	%eax, %eax
	cmpl	$6, -64(%ebp)
	setg	%al
	leal	8(%eax,%eax,2), %eax
	jmp	L346
L306:
	movl	-100(%ebp), %edx
	movl	-124(%ebp), %eax
	addl	$3592, %eax
	pushl	1104(%edx)
	pushl	$0
	pushl	$113
	pushl	%eax
	pushl	%edx
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L312
	movl	-24(%ebp), %ecx
	movl	%ecx, -48(%ebp)
L313:
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	L311
L312:
	movl	-100(%ebp), %eax
	pushl	1104(%eax)
	pushl	$0
	movl	-124(%ebp), %eax
	pushl	$113
	addl	$3596, %eax
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	cmpl	-80(%ebp), %eax
	je	L314
	movl	-20(%ebp), %edx
	movl	%edx, -48(%ebp)
L315:
	movl	-24(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L313
L314:
	cmpl	$0, -80(%ebp)
	je	L351
L316:
	movl	-16(%ebp), %ecx
	movl	-20(%ebp), %eax
	movl	%ecx, -48(%ebp)
	movl	%eax, -16(%ebp)
	jmp	L315
L351:
	movl	-100(%ebp), %eax
	addl	$732, %eax
	pushl	%eax
	movl	-104(%ebp), %eax
	pushl	$0
	addl	$7864, %eax
	pushl	$113
	pushl	%eax
	pushl	-100(%ebp)
	call	_tek_rdget1
	addl	$20, %esp
	testl	%eax, %eax
	jne	L316
	jmp	L213
L226:
	movl	-100(%ebp), %eax
	movb	$5, 60(%eax)
	movb	$3, 61(%eax)
	movb	$9, 92(%eax)
	movb	$2, 93(%eax)
	movl	$-1, 12(%eax)
	testl	$64, 36(%ebp)
	je	L238
	movb	$0, 124(%eax)
	movb	$1, 125(%eax)
	movl	-104(%ebp), %edx
	movl	$65535, 8252(%edx)
L238:
	movl	-100(%ebp), %ecx
	movb	$0, 732(%ecx)
	movb	$1, 733(%ecx)
	movl	-104(%ebp), %eax
	cmpl	$-2, 36(%ebp)
	movl	$65535, 7864(%eax)
	je	L352
	movl	$0, -48(%ebp)
L250:
	movl	-48(%ebp), %ecx
	movb	_pt2.5(%ecx), %al
	movb	%al, -44(%ebp,%ecx)
	incl	%ecx
	movl	%ecx, -48(%ebp)
	cmpl	$13, %ecx
	jle	L250
	movl	36(%ebp), %ecx
	movb	$9, %al
	movl	$7, -92(%ebp)
	andl	$3, %ecx
	sarl	%cl, -92(%ebp)
	sall	$4, -92(%ebp)
	orl	$8, -92(%ebp)
	testl	$4, 36(%ebp)
	sete	%dl
	subb	%dl, %al
	testl	$8, 36(%ebp)
	movb	%al, -43(%ebp)
	movb	$13, %al
	sete	%dl
	subb	%dl, %al
	testl	$16, 36(%ebp)
	movb	%al, -39(%ebp)
	movb	$17, %al
	sete	%dl
	subb	%dl, %al
	testl	$32, 36(%ebp)
	movb	%al, -35(%ebp)
	movb	$19, %al
	sete	%dl
	subb	%dl, %al
	movb	%al, -33(%ebp)
L245:
	movl	$0, -48(%ebp)
L263:
	movl	-48(%ebp), %edx
	movl	-100(%ebp), %ecx
	movzbl	-44(%ebp,%edx), %eax
	sall	$5, %eax
	leal	28(%eax,%ecx), %eax
	movl	%eax, 1052(%ecx,%edx,4)
	incl	%edx
	movl	%edx, -48(%ebp)
	cmpl	$13, %edx
	jle	L263
	jmp	L237
L352:
	movl	$0, 752(%ecx)
	movl	$0, -48(%ebp)
L244:
	movl	-48(%ebp), %edx
	movb	_pt1.4(%edx), %al
	movb	%al, -44(%ebp,%edx)
	incl	%edx
	movl	%edx, -48(%ebp)
	cmpl	$13, %edx
	jle	L244
	jmp	L245
L211:
	addl	$12, %ebp
	movl	$1, %eax
	jmp	L212
	.balign 2
	.def	_tek_decode5;	.scl	3;	.type	32;	.endef
_tek_decode5:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	movl	12(%ebp), %eax
	pushl	%ebx
	movl	%eax, %ebx
	addl	$16, %eax
	movl	%eax, 12(%ebp)
	addl	8(%ebp), %ebx
	leal	12(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	popl	%ecx
	movl	%eax, %esi
	testl	%eax, %eax
	jle	L354
	leal	12(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	popl	%edx
	testl	$1, %eax
	je	L363
	movl	%eax, %ecx
	movl	$1, %edx
	sarl	%ecx
	andl	$15, %ecx
	addl	$8, %ecx
	sall	%cl, %edx
	movl	$1, %ecx
	testl	$32, %eax
	jne	L353
	cmpl	$256, %edx
	je	L361
	movl	$1, %ecx
	cmpl	%edx, %esi
	jg	L353
	andl	$64, %eax
	jne	L364
L361:
	pushl	16(%ebp)
	pushl	%esi
	subl	12(%ebp), %ebx
	pushl	12(%ebp)
	pushl	%ebx
L362:
	call	_tek_lzrestore_tek5
	addl	$16, %esp
	movl	%eax, %edi
L354:
	movl	%edi, %ecx
L353:
	leal	-12(%ebp), %esp
	movl	%ecx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L364:
	leal	12(%ebp), %eax
	pushl	%eax
	call	_tek_getnum_s7s
	popl	%edi
	jmp	L361
L363:
	movl	12(%ebp), %eax
	pushl	16(%ebp)
	subl	%eax, %ebx
	pushl	%esi
	leal	-1(%eax), %edx
	pushl	%edx
	leal	1(%ebx), %eax
	pushl	%eax
	jmp	L362
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
