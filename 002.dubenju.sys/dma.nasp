[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_out8
[FILE "dma.c"]
[SECTION .text]
	GLOBAL	_dma_reset
_dma_reset:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	255
	PUSH	13
	CALL	_io_out8
	LEAVE
	RET
	GLOBAL	_dma_mask_channel
_dma_mask_channel:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	AL,BYTE [8+EBP]
	CMP	AL,4
	JA	L3
	MOVZX	ECX,AL
	DEC	ECX
	MOV	EAX,1
	SAL	EAX,CL
	PUSH	EAX
	PUSH	10
L5:
	CALL	_io_out8
	POP	EAX
	POP	EDX
	LEAVE
	RET
L3:
	MOVZX	ECX,AL
	SUB	ECX,5
	MOV	EAX,1
	SAL	EAX,CL
	PUSH	EAX
	PUSH	212
	JMP	L5
	GLOBAL	_dma_unmask_channel
_dma_unmask_channel:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	AL,BYTE [8+EBP]
	CMP	AL,4
	JA	L7
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	10
L9:
	CALL	_io_out8
	POP	ECX
	POP	EAX
	LEAVE
	RET
L7:
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	212
	JMP	L9
	GLOBAL	_dma_reset_flipflop
_dma_reset_flipflop:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [8+EBP]
	CMP	EDX,1
	JLE	L10
	PUSH	255
	MOV	EAX,12
	TEST	EDX,EDX
	JE	L13
	MOV	EAX,216
L13:
	PUSH	EAX
	CALL	_io_out8
L10:
	LEAVE
	RET
	GLOBAL	_dma_set_address
_dma_set_address:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	DL,BYTE [8+EBP]
	MOV	AL,BYTE [12+EBP]
	MOVZX	ESI,BYTE [16+EBP]
	CMP	DL,8
	JA	L14
	MOVZX	EDX,DL
	XOR	ECX,ECX
	CMP	EDX,7
	JA	L16
	JMP	DWORD [L25+EDX*4]
[SECTION .data]
	ALIGNB	4
L25:
	DD	L17
	DD	L18
	DD	L19
	DD	L20
	DD	L21
	DD	L22
	DD	L23
	DD	L24
[SECTION .text]
L17:
	XOR	ECX,ECX
L16:
	MOVZX	EAX,AL
	MOVZX	EBX,CX
	PUSH	EAX
	PUSH	EBX
	CALL	_io_out8
	POP	EAX
	POP	EDX
	MOV	DWORD [8+EBP],EBX
	MOV	EDX,ESI
	MOVZX	EAX,DL
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	JMP	_io_out8
L18:
	MOV	ECX,2
	JMP	L16
L19:
	MOV	ECX,4
	JMP	L16
L20:
	MOV	ECX,6
	JMP	L16
L21:
	MOV	ECX,192
	JMP	L16
L22:
	MOV	ECX,196
	JMP	L16
L23:
	MOV	ECX,200
	JMP	L16
L24:
	MOV	ECX,204
	JMP	L16
L14:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_dma_set_count
_dma_set_count:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	DL,BYTE [8+EBP]
	MOV	AL,BYTE [12+EBP]
	MOVZX	ESI,BYTE [16+EBP]
	CMP	DL,8
	JA	L27
	MOVZX	EDX,DL
	XOR	ECX,ECX
	CMP	EDX,7
	JA	L29
	JMP	DWORD [L38+EDX*4]
[SECTION .data]
	ALIGNB	4
L38:
	DD	L30
	DD	L31
	DD	L32
	DD	L33
	DD	L34
	DD	L35
	DD	L36
	DD	L37
[SECTION .text]
L30:
	MOV	ECX,1
L29:
	MOVZX	EAX,AL
	MOVZX	EBX,CX
	PUSH	EAX
	PUSH	EBX
	CALL	_io_out8
	MOV	EDX,ESI
	POP	ECX
	POP	EAX
	MOV	DWORD [8+EBP],EBX
	MOVZX	EAX,DL
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	JMP	_io_out8
L31:
	MOV	ECX,3
	JMP	L29
L32:
	MOV	ECX,5
	JMP	L29
L33:
	MOV	ECX,7
	JMP	L29
L34:
	MOV	ECX,194
	JMP	L29
L35:
	MOV	ECX,198
	JMP	L29
L36:
	MOV	ECX,202
	JMP	L29
L37:
	MOV	ECX,206
	JMP	L29
L27:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_dma_set_mode
_dma_set_mode:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	AL,BYTE [8+EBP]
	MOV	BYTE [-13+EBP],AL
	CMP	AL,3
	SETA	AL
	MOVZX	EDI,AL
	MOVZX	ESI,BYTE [12+EBP]
	MOVZX	EBX,BYTE [-13+EBP]
	TEST	EDI,EDI
	JE	L41
	SUB	EBX,4
L41:
	MOVZX	EAX,BYTE [-13+EBP]
	PUSH	EAX
	CALL	_dma_mask_channel
	MOV	EDX,ESI
	MOVZX	EAX,DL
	OR	EBX,EAX
	PUSH	EBX
	CMP	BYTE [-13+EBP],4
	SBB	EAX,EAX
	AND	EAX,-203
	ADD	EAX,214
	PUSH	EAX
	CALL	_io_out8
	MOV	DWORD [8+EBP],EDI
	ADD	ESP,12
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_dma_unmask_all
	GLOBAL	_dma_set_read
_dma_set_read:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	84
	MOVZX	EAX,BYTE [8+EBP]
	PUSH	EAX
	CALL	_dma_set_mode
	LEAVE
	RET
	GLOBAL	_dma_set_write
_dma_set_write:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	88
	MOVZX	EAX,BYTE [8+EBP]
	PUSH	EAX
	CALL	_dma_set_mode
	LEAVE
	RET
	GLOBAL	_dma_set_external_page_register
_dma_set_external_page_register:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	AL,BYTE [8+EBP]
	MOV	CL,BYTE [12+EBP]
	CMP	AL,14
	JA	L48
	MOVZX	EAX,AL
	DEC	EAX
	XOR	EDX,EDX
	CMP	EAX,6
	JA	L50
	JMP	DWORD [L58+EAX*4]
[SECTION .data]
	ALIGNB	4
L58:
	DD	L51
	DD	L52
	DD	L53
	DD	L48
	DD	L55
	DD	L56
	DD	L57
[SECTION .text]
L51:
	MOV	EDX,131
L50:
	MOVZX	EAX,CL
	MOV	DWORD [12+EBP],EAX
	MOVZX	EAX,DX
	MOV	DWORD [8+EBP],EAX
	POP	EBP
	JMP	_io_out8
L52:
	MOV	EDX,129
	JMP	L50
L53:
	MOV	EDX,130
	JMP	L50
L48:
	POP	EBP
	RET
L55:
	MOV	EDX,137
	JMP	L50
L56:
	MOV	EDX,135
	JMP	L50
L57:
	MOV	EDX,136
	JMP	L50
	GLOBAL	_dma_unmask_all
_dma_unmask_all:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	255
	PUSH	220
	CALL	_io_out8
	LEAVE
	RET
