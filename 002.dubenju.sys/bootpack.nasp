[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_fifo32_init
	EXTERN	_init_pit
	EXTERN	_init_keyboard
	EXTERN	_enable_mouse
	EXTERN	_io_out8
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_memman_alloc_4k
	EXTERN	_file_readfat
	EXTERN	_file_inittbl
	EXTERN	_out_log
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_task_init
	EXTERN	_task_run
	EXTERN	_sheet_alloc
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen8
	EXTERN	_dbg_init
	EXTERN	_dbg_putstr0
	EXTERN	_sprintf
	EXTERN	_init_mouse_cursor8
	EXTERN	_make_window8
	EXTERN	_task_alloc
	EXTERN	_browser_task
	EXTERN	_brow_callback
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_io_cli
	EXTERN	_fifo32_put
	EXTERN	_file_search2
	EXTERN	_file_loadfile2
	EXTERN	_sysclock_task
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_memman_free_4k
	EXTERN	_sheet_free
	EXTERN	_taskctl
	EXTERN	_mouse_decode
	EXTERN	_set_mouse_cursorl8
	EXTERN	_cons_putstr0
	EXTERN	_asm_end_app
	EXTERN	_keytable0.0
	EXTERN	_wait_KBC_sendready
	EXTERN	_keytable1.1
	EXTERN	_bmp_conv
	EXTERN	_task_sleep
	EXTERN	_set_mouse_cursorrb8
	EXTERN	_set_mouse_cursorlt8
	EXTERN	_set_mouse_cursorh8
	EXTERN	_init_mouse_cursor81
	EXTERN	_hankaku
	EXTERN	_change_wtitle8
	EXTERN	_console_task
	EXTERN	_make_textbox8
	EXTERN	_putfonts8_asc
	EXTERN	_taskmgr_task
	EXTERN	_task_free
	EXTERN	_make_menu8
	EXTERN	_push_menu
	EXTERN	_sheet_refresh
	EXTERN	_pull_menu
	EXTERN	_change_mtitle8
	EXTERN	_strcmp
	EXTERN	_strcpy
[FILE "bootpack.c"]
[SECTION .data]
_keytable0.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	94
	DB	8
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	64
	DB	91
	DB	10
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	59
	DB	58
	DB	0
	DB	0
	DB	93
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	44
	DB	46
	DB	47
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	92
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	92
	DB	0
	DB	0
_keytable1.1:
	DB	0
	DB	0
	DB	33
	DB	34
	DB	35
	DB	36
	DB	37
	DB	38
	DB	39
	DB	40
	DB	41
	DB	126
	DB	61
	DB	126
	DB	8
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	96
	DB	123
	DB	10
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	43
	DB	42
	DB	0
	DB	0
	DB	125
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	60
	DB	62
	DB	63
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	95
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	124
	DB	0
	DB	0
LC0:
	DB	"[filesystem]file system is installed.",0x00
LC1:
	DB	0x0A,"Create sheet",0x0A,0x00
LC2:
	DB	"[gdi]debug window is installed.",0x00
LC4:
	DB	"vmode<>8",0x0A,0x00
LC5:
	DB	"cyls:%d.",0x0A,0x00
LC6:
	DB	"leds:%d.",0x0A,0x00
LC7:
	DB	"vmode:%d.",0x0A,0x00
LC8:
	DB	"scrnx:%d.",0x0A,0x00
LC9:
	DB	"scrny:%d.",0x0A,0x00
LC10:
	DB	"vram:%p.",0x0A,0x00
LC11:
	DB	"[gdi]initial gdi sheet.",0x00
LC12:
	DB	"Open Console",0x0A,0x00
LC13:
	DB	"browser",0x00
LC14:
	DB	"/nihongo.fnt",0x00
LC15:
	DB	"fong size:%d.",0x0A,0x00
LC16:
	DB	"Load Font from disk",0x0A,0x00
LC18:
	DB	"Load Font End",0x0A,0x00
LC19:
	DB	"[gdi]font is installed.",0x00
LC20:
	DB	"Init Menu",0x0A,0x00
LC21:
	DB	"[gdi]menu is installed.",0x00
LC22:
	DB	"[task]clock is installed.",0x00
LC27:
	DB	"right:%d.",0x0A,0x00
LC28:
	DB	"left:%d.",0x0A,0x00
LC29:
	DB	0x0A,"Break(mouse) :",0x0A,0x00
LC26:
	DB	"Shift+F2 Open Console.",0x0A,0x00
LC25:
	DB	0x0A,"Break(key) :(Shift+F1)",0x0A,0x00
LC24:
	DB	"==Print Screen ==",0x0A,0x00
LC23:
	DB	"[%d,%d]",0x0A,0x00
LC17:
	DB	"Load Font from coding.",0x0A,0x00
LC3:
	DB	"vmode=8",0x0A,0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-92+EBP]
	SUB	ESP,1588
	MOV	DWORD [-1520+EBP],-1
	MOV	DWORD [-1524+EBP],0
	MOV	DWORD [-1528+EBP],2147483647
	MOV	DWORD [-1532+EBP],0
	MOV	DWORD [-1556+EBP],0
	MOV	DWORD [-1564+EBP],0
	MOV	AL,BYTE [4081]
	SAR	AL,4
	MOV	EDX,EAX
	AND	EDX,7
	MOV	DWORD [-1568+EBP],EDX
	MOV	DWORD [-1572+EBP],-1
	MOV	DWORD [-1576+EBP],-1
	MOV	DWORD [-1580+EBP],-1
	MOV	DWORD [-1584+EBP],0
	MOV	DWORD [-1592+EBP],-1
	MOV	BYTE [_fat_flag],0
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	LEA	EAX,DWORD [-604+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	MOV	DWORD [4076],EBX
	CALL	_init_pit
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	LEA	EAX,DWORD [-780+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	EBX
	CALL	_enable_mouse
	ADD	ESP,36
	PUSH	184
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	LEA	EAX,DWORD [-764+EBP]
	PUSH	0
	PUSH	EAX
	LEA	EAX,DWORD [-636+EBP]
	PUSH	32
	PUSH	EAX
	CALL	_fifo32_init
	ADD	ESP,32
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	PUSH	3932160
	MOV	DWORD [-1536+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-1536+EBP]
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	ADD	ESP,36
	PUSH	11520
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	1049088
	MOV	DWORD [_u_fat],EAX
	PUSH	EAX
	CALL	_file_readfat
	CALL	_file_inittbl
	PUSH	LC0
	MOV	WORD [_current_path],47
	MOV	BYTE [_fat_flag],1
	CALL	_out_log
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	ADD	ESP,36
	PUSH	3932160
	MOV	DWORD [-1540+EBP],EAX
	CALL	_task_init
	PUSH	2
	PUSH	1
	PUSH	EAX
	MOV	DWORD [-1560+EBP],EAX
	MOV	DWORD [-68+EBP],EAX
	CALL	_task_run
	MOV	EAX,DWORD [-1560+EBP]
	MOV	ECX,DWORD [-1540+EBP]
	MOV	DWORD [4068],ECX
	MOV	BYTE [188+EAX],0
	PUSH	ECX
	CALL	_sheet_alloc
	MOVSX	EDX,WORD [4086]
	MOV	DWORD [-1544+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	ADD	EAX,EAX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EBX,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EBX
	PUSH	DWORD [-1544+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,48
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EBX
	CALL	_init_screen8
	MOV	EDX,DWORD [-1544+EBP]
	MOV	DWORD [40+EDX],0
	PUSH	EDX
	CALL	_dbg_init
	PUSH	7
	PUSH	LC1
	CALL	_dbg_putstr0
	PUSH	LC2
	CALL	_out_log
	ADD	ESP,28
	CMP	BYTE [4082],8
	JE	L152
	PUSH	7
	PUSH	LC4
L141:
	LEA	EDI,DWORD [-1500+EBP]
	CALL	_dbg_putstr0
	POP	ECX
	LEA	EDX,DWORD [-1500+EBP]
	POP	EBX
	MOV	ECX,41
	XOR	EBX,EBX
	CLD
	MOV	AL,BL
	REP
	STOSB
	MOVSX	EAX,BYTE [4080]
	PUSH	EAX
	LEA	EDI,DWORD [-1500+EBP]
	PUSH	LC5
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EDX,DWORD [-1500+EBP]
	CLD
	MOV	AL,BL
	MOV	ECX,41
	REP
	STOSB
	MOVSX	EAX,BYTE [4081]
	PUSH	EAX
	LEA	EDI,DWORD [-1500+EBP]
	PUSH	LC6
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	ADD	ESP,32
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EDX,DWORD [-1500+EBP]
	CLD
	MOV	AL,BL
	MOV	ECX,41
	REP
	STOSB
	MOVSX	EAX,BYTE [4082]
	PUSH	EAX
	LEA	EDI,DWORD [-1500+EBP]
	PUSH	LC7
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EDX,DWORD [-1500+EBP]
	CLD
	MOV	AL,BL
	MOV	ECX,41
	REP
	STOSB
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	LEA	EDI,DWORD [-1500+EBP]
	PUSH	LC8
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	ADD	ESP,40
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EDX,DWORD [-1500+EBP]
	CLD
	MOV	AL,BL
	MOV	ECX,41
	REP
	STOSB
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	LEA	EDI,DWORD [-1500+EBP]
	PUSH	LC9
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EDX,DWORD [-1500+EBP]
	CLD
	MOV	AL,BL
	MOV	ECX,41
	REP
	STOSB
	PUSH	DWORD [4088]
	PUSH	LC10
	LEA	EBX,DWORD [-1292+EBP]
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	ADD	ESP,40
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	PUSH	LC11
	CALL	_out_log
	PUSH	DWORD [-1536+EBP]
	PUSH	DWORD [-1540+EBP]
	CALL	_open_console
	MOV	DWORD [40+EAX],0
	PUSH	7
	MOV	DWORD [-1552+EBP],EAX
	PUSH	LC12
	CALL	_dbg_putstr0
	PUSH	DWORD [-1540+EBP]
	CALL	_sheet_alloc
	ADD	ESP,32
	PUSH	99
	MOV	DWORD [-1548+EBP],EAX
	PUSH	16
	PUSH	16
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	PUSH	99
	PUSH	EBX
	CALL	_init_mouse_cursor8
	PUSH	DWORD [-1540+EBP]
	CALL	_sheet_alloc
	ADD	ESP,32
	MOV	EBX,EAX
	PUSH	480000
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	99
	PUSH	400
	MOV	ESI,EAX
	PUSH	600
	PUSH	EAX
	PUSH	EBX
	CALL	_sheet_setbuf
	PUSH	0
	PUSH	LC13
	PUSH	400
	PUSH	600
	PUSH	ESI
	CALL	_make_window8
	ADD	ESP,48
	CALL	_task_alloc
	MOV	DWORD [36+EBX],EAX
	PUSH	512
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	ESI,DWORD [36+EBX]
	PUSH	65536
	MOV	EDI,EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	ADD	EAX,65528
	MOV	DWORD [100+ESI],EAX
	MOV	ESI,2
	MOV	EAX,DWORD [36+EBX]
	MOV	DWORD [190+EAX],2003792482
	MOV	DWORD [194+EAX],7497075
	MOV	EDX,DWORD [36+EBX]
	MOV	DWORD [76+EAX],_browser_task
	MOV	DWORD [116+EAX],8
	MOV	DWORD [120+EAX],16
	MOV	DWORD [124+EAX],8
	MOV	DWORD [128+EAX],8
	MOV	DWORD [132+EAX],8
	MOV	DWORD [136+EAX],8
	MOV	EAX,DWORD [100+EDX]
	MOV	DWORD [4+EAX],EBX
	MOV	EAX,DWORD [100+EDX]
	MOV	EDX,DWORD [-1536+EBP]
	MOV	DWORD [8+EAX],EDX
	PUSH	2
	PUSH	3
	PUSH	DWORD [36+EBX]
	CALL	_task_run
	PUSH	DWORD [36+EBX]
	PUSH	EDI
	PUSH	128
	MOV	EAX,DWORD [36+EBX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_init
	ADD	ESP,44
	MOVSX	EAX,WORD [4084]
	MOV	DWORD [40+EBX],_brow_callback
	LEA	ECX,DWORD [-16+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	ESI
	MOV	DWORD [-1512+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	0
	LEA	ECX,DWORD [-44+EAX]
	PUSH	0
	MOV	EAX,ECX
	CDQ
	IDIV	ESI
	PUSH	DWORD [-1544+EBP]
	MOV	DWORD [-1516+EBP],EAX
	CALL	_sheet_slide
	PUSH	16
	PUSH	8
	PUSH	DWORD [-1552+EBP]
	CALL	_sheet_slide
	PUSH	DWORD [-1516+EBP]
	PUSH	DWORD [-1512+EBP]
	PUSH	DWORD [-1548+EBP]
	CALL	_sheet_slide
	ADD	ESP,36
	PUSH	8
	PUSH	4
	PUSH	EBX
	CALL	_sheet_slide
	PUSH	0
	PUSH	DWORD [-1544+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	EBX
	LEA	EBX,DWORD [-636+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-1552+EBP]
	CALL	_sheet_updown
	ADD	ESP,36
	PUSH	3
	PUSH	DWORD [-1548+EBP]
	CALL	_sheet_updown
	PUSH	DWORD [-1552+EBP]
	CALL	_keywin_on
	CALL	_io_cli
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	PUSH	DWORD [-1568+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	CALL	_io_sti
	PUSH	DWORD [_u_fat]
	PUSH	224
	PUSH	1058304
	PUSH	LC14
	CALL	_file_search2
	ADD	ESP,44
	MOV	EBX,EAX
	TEST	EAX,EAX
	JE	L4
	MOV	DL,BYTE [11+EAX]
	AND	EDX,24
	JNE	L4
	MOV	EAX,DWORD [28+EAX]
	MOV	ECX,41
	CLD
	MOV	DWORD [-1504+EBP],EAX
	LEA	EDI,DWORD [-1500+EBP]
	MOV	AL,DL
	LEA	EDX,DWORD [-1500+EBP]
	REP
	STOSB
	PUSH	DWORD [-1504+EBP]
	PUSH	LC15
	PUSH	EDX
	CALL	_sprintf
	LEA	ECX,DWORD [-1500+EBP]
	PUSH	7
	PUSH	ECX
	CALL	_dbg_putstr0
	LEA	EAX,DWORD [-1504+EBP]
	PUSH	DWORD [_u_fat]
	PUSH	EAX
	MOVZX	EAX,WORD [26+EBX]
	PUSH	EAX
	CALL	_file_loadfile2
	ADD	ESP,32
	MOV	EBX,EAX
	PUSH	7
	PUSH	LC16
L142:
	CALL	_dbg_putstr0
	POP	ESI
	POP	EDI
	MOV	DWORD [4072],EBX
	PUSH	7
	PUSH	LC18
	CALL	_dbg_putstr0
	PUSH	LC19
	CALL	_out_log
	LEA	EAX,DWORD [-1508+EBP]
	PUSH	EAX
	LEA	EAX,DWORD [-1452+EBP]
	PUSH	EAX
	CALL	_init_menu
	PUSH	7
	PUSH	LC20
	CALL	_dbg_putstr0
	PUSH	LC21
	CALL	_out_log
	ADD	ESP,32
	CALL	_task_alloc
	PUSH	512
	MOV	ESI,EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	65536
	PUSH	3932160
	MOV	EBX,EAX
	CALL	_memman_alloc_4k
	ADD	EAX,65536
	MOV	DWORD [100+ESI],EAX
	MOV	DWORD [76+ESI],_sysclock_task
	MOV	DWORD [116+ESI],8
	MOV	DWORD [120+ESI],16
	MOV	DWORD [124+ESI],8
	MOV	DWORD [128+ESI],8
	MOV	DWORD [132+ESI],8
	MOV	DWORD [136+ESI],8
	MOV	DWORD [190+ESI],1668512115
	MOV	DWORD [194+ESI],1801678700
	MOV	BYTE [198+ESI],0
	PUSH	2
	PUSH	1
	PUSH	ESI
	CALL	_task_run
	LEA	EAX,DWORD [16+ESI]
	PUSH	ESI
	PUSH	EBX
	PUSH	128
	PUSH	EAX
	CALL	_fifo32_init
	ADD	ESP,44
	PUSH	LC22
	CALL	_out_log
L143:
	POP	EBX
L16:
	LEA	EBX,DWORD [-636+EBP]
	PUSH	EBX
	CALL	_fifo32_status
	POP	ECX
	TEST	EAX,EAX
	JLE	L19
	CMP	DWORD [-1572+EBP],0
	JS	L153
L19:
	LEA	EBX,DWORD [-92+EBP]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L154
	PUSH	EBX
	CALL	_fifo32_get
	MOV	DWORD [-1504+EBP],EAX
	CALL	_io_sti
	POP	ESI
	CMP	DWORD [-1552+EBP],0
	JE	L46
	MOV	EDX,DWORD [-1552+EBP]
	CMP	DWORD [28+EDX],0
	JNE	L46
	MOV	ECX,DWORD [-1540+EBP]
	MOV	DWORD [-1552+EBP],0
	MOV	EAX,DWORD [16+ECX]
	CMP	EAX,1
	JE	L46
	MOV	EDX,DWORD [-1540+EBP]
	MOV	EAX,DWORD [16+EDX+EAX*4]
	PUSH	EAX
	MOV	DWORD [-1552+EBP],EAX
	CALL	_keywin_on
	POP	EBX
L46:
	MOV	EDX,DWORD [-1504+EBP]
	LEA	EAX,DWORD [-256+EDX]
	CMP	EAX,255
	JBE	L50
	LEA	EAX,DWORD [-4352+EDX]
	CMP	EAX,255
	JBE	L50
	LEA	EAX,DWORD [-512+EDX]
	CMP	EAX,255
	JBE	L155
	LEA	EAX,DWORD [-768+EDX]
	CMP	EAX,255
	JBE	L156
	LEA	EAX,DWORD [-1024+EDX]
	CMP	EAX,999
	JBE	L157
	LEA	EAX,DWORD [-2024+EDX]
	CMP	EAX,255
	JBE	L158
	CMP	EDX,2280
	JNE	L16
	CALL	_close_taskmgr
	JMP	L16
L158:
	IMUL	EAX,EDX,44
	ADD	EAX,DWORD [-1540+EBP]
	PUSH	42240
	PUSH	DWORD [-88012+EAX]
	PUSH	3932160
	LEA	EBX,DWORD [-88012+EAX]
	CALL	_memman_free_4k
	PUSH	EBX
	CALL	_sheet_free
	ADD	ESP,16
	JMP	L16
L157:
	IMUL	EDX,EDX,212
	ADD	EDX,DWORD [_taskctl]
	LEA	EAX,DWORD [-213000+EDX]
	PUSH	EAX
	CALL	_close_constask
	JMP	L143
L156:
	IMUL	EAX,EDX,44
	MOV	ECX,DWORD [-1540+EBP]
	LEA	EAX,DWORD [-32748+EAX+ECX*1]
	PUSH	EAX
	CALL	_close_console
	JMP	L143
L155:
	MOVZX	EAX,BYTE [-1504+EBP]
	PUSH	EAX
	LEA	EAX,DWORD [-780+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L16
	MOV	ECX,DWORD [-772+EBP]
	MOV	EAX,DWORD [-776+EBP]
	ADD	DWORD [-1516+EBP],ECX
	ADD	DWORD [-1512+EBP],EAX
	JS	L159
L87:
	CMP	DWORD [-1516+EBP],0
	JS	L160
L88:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-1512+EBP],EAX
	JLE	L89
	MOV	DWORD [-1512+EBP],EAX
L89:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-1516+EBP],EAX
	JLE	L90
	MOV	DWORD [-1516+EBP],EAX
L90:
	MOV	EDX,DWORD [-1512+EBP]
	MOV	ECX,DWORD [-1516+EBP]
	MOV	DWORD [-1520+EBP],EDX
	MOV	DWORD [-1524+EBP],ECX
	TEST	DWORD [-768+EBP],2
	JE	L93
	CLD
	XOR	EAX,EAX
	LEA	EDI,DWORD [-1500+EBP]
	MOV	ECX,41
	LEA	EBX,DWORD [-1500+EBP]
	REP
	STOSB
	PUSH	DWORD [-768+EBP]
	PUSH	LC27
	PUSH	EBX
	CALL	_sprintf
	PUSH	7
	PUSH	EBX
	CALL	_dbg_putstr0
	ADD	ESP,20
	CMP	DWORD [-1504+EBP],511
	JLE	L92
	CMP	DWORD [-1552+EBP],0
	JE	L92
	CALL	_io_cli
	MOV	EDX,DWORD [-1552+EBP]
	PUSH	DWORD [-1504+EBP]
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	CALL	_io_sti
	POP	ESI
	POP	EDI
L92:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_set_mouse_cursorl8
	POP	ECX
	POP	EBX
L93:
	TEST	DWORD [-768+EBP],1
	JNE	L161
	MOV	DWORD [-1576+EBP],-1
	CMP	DWORD [-1528+EBP],2147483647
	JNE	L151
	CMP	DWORD [-1592+EBP],-1
	JE	L16
	IMUL	EDX,DWORD [-1592+EBP],20
	MOV	ESI,DWORD [-1516+EBP]
	MOV	EDI,DWORD [-1512+EBP]
	MOV	EAX,DWORD [-1448+EBP+EDX*1]
	SUB	ESI,DWORD [16+EAX]
	SUB	EDI,DWORD [12+EAX]
	PUSH	ESI
	LEA	EAX,DWORD [-1452+EDX+EBP*1]
	PUSH	EDI
	PUSH	EAX
	CALL	_select_menu
L144:
	ADD	ESP,12
	JMP	L16
L151:
	PUSH	DWORD [-1532+EBP]
	PUSH	DWORD [-1528+EBP]
	PUSH	DWORD [-1556+EBP]
	CALL	_sheet_slide
	MOV	DWORD [-1528+EBP],2147483647
	JMP	L144
L161:
	CLD
	XOR	EAX,EAX
	LEA	EDI,DWORD [-1500+EBP]
	MOV	ECX,41
	LEA	EBX,DWORD [-1500+EBP]
	REP
	STOSB
	PUSH	DWORD [-768+EBP]
	PUSH	LC28
	PUSH	EBX
	CALL	_sprintf
	PUSH	7
	PUSH	EBX
	CALL	_dbg_putstr0
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	99
	PUSH	EAX
	CALL	_init_mouse_cursor8
	ADD	ESP,28
	CMP	DWORD [-1504+EBP],511
	JLE	L95
	CMP	DWORD [-1552+EBP],0
	JE	L95
	CALL	_io_cli
	MOV	ECX,DWORD [-1552+EBP]
	PUSH	DWORD [-1504+EBP]
	MOV	EAX,DWORD [36+ECX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	CALL	_io_sti
	POP	EAX
	POP	EDX
L95:
	CMP	DWORD [-1576+EBP],0
	JS	L162
	MOV	EDI,DWORD [-1512+EBP]
	MOV	EAX,DWORD [-1584+EBP]
	SUB	EDI,DWORD [-1576+EBP]
	MOV	ESI,DWORD [-1516+EBP]
	SUB	ESI,DWORD [-1580+EBP]
	MOV	EDX,DWORD [-1516+EBP]
	LEA	EDI,DWORD [2+EDI+EAX*1]
	MOV	DWORD [-1580+EBP],EDX
	MOV	DWORD [-1528+EBP],EDI
	ADD	DWORD [-1532+EBP],ESI
	AND	DWORD [-1528+EBP],-4
	JMP	L16
L162:
	CMP	DWORD [-1592+EBP],-1
	JNE	L163
	MOV	EDX,DWORD [-1540+EBP]
	MOV	DWORD [-1588+EBP],0
	MOV	EBX,DWORD [16+EDX]
	LEA	ECX,DWORD [-1+EBX]
	TEST	ECX,ECX
	JLE	L106
L117:
	MOV	EAX,DWORD [-1540+EBP]
	MOV	ESI,DWORD [-1516+EBP]
	MOV	EDI,DWORD [-1512+EBP]
	MOV	EAX,DWORD [20+EAX+ECX*4]
	MOV	DWORD [-1556+EBP],EAX
	SUB	ESI,DWORD [16+EAX]
	SUB	EDI,DWORD [12+EAX]
	JS	L107
	MOV	EAX,DWORD [4+EAX]
	CMP	EDI,EAX
	JGE	L107
	TEST	ESI,ESI
	JS	L107
	MOV	EDX,DWORD [-1556+EBP]
	CMP	ESI,DWORD [8+EDX]
	JGE	L107
	TEST	BYTE [29+EDX],1
	JNE	L107
	IMUL	EAX,ESI
	ADD	EAX,EDI
	MOV	EDX,DWORD [EDX]
	MOV	DWORD [-1600+EBP],EAX
	MOV	EAX,DWORD [-1600+EBP]
	MOVZX	EDX,WORD [EDX+EAX*2]
	MOV	EAX,DWORD [-1556+EBP]
	CMP	EDX,DWORD [20+EAX]
	JNE	L164
L107:
	DEC	ECX
	TEST	ECX,ECX
	JG	L117
L106:
	CMP	DWORD [-1588+EBP],0
	JNE	L16
	CMP	DWORD [-1592+EBP],-1
	JNE	L16
	MOV	EDX,DWORD [-1540+EBP]
	MOV	EAX,DWORD [-1512+EBP]
	SUB	EAX,2
	MOV	EDX,DWORD [20+EDX]
	CMP	EAX,58
	MOV	DWORD [-1556+EBP],EDX
	JA	L16
	MOV	ECX,EDX
	MOV	EDX,DWORD [8+EDX]
	LEA	EAX,DWORD [-24+EDX]
	CMP	EAX,DWORD [-1516+EBP]
	JG	L16
	LEA	EAX,DWORD [-3+EDX]
	CMP	DWORD [-1516+EBP],EAX
	JG	L16
	PUSH	DWORD [-1508+EBP]
	LEA	EAX,DWORD [-1452+EBP]
	PUSH	EAX
	PUSH	ECX
	CALL	_open_menu
	MOV	DWORD [-1592+EBP],EAX
	JMP	L144
L164:
	LEA	EAX,DWORD [-1+EBX]
	PUSH	EAX
	PUSH	DWORD [-1556+EBP]
	CALL	_sheet_updown
	POP	EAX
	POP	EDX
	MOV	EDX,DWORD [-1552+EBP]
	CMP	DWORD [-1556+EBP],EDX
	JE	L111
	PUSH	EDX
	CALL	_keywin_off
	MOV	ECX,DWORD [-1556+EBP]
	PUSH	ECX
	MOV	DWORD [-1552+EBP],ECX
	CALL	_keywin_on
	POP	ECX
	POP	EBX
L111:
	MOV	EAX,DWORD [-1556+EBP]
	MOV	ECX,DWORD [28+EAX]
	TEST	ECX,256
	JNE	L112
	CMP	EDI,2
	JLE	L112
	MOV	EAX,DWORD [4+EAX]
	SUB	EAX,3
	CMP	EDI,EAX
	JGE	L112
	CMP	ESI,2
	JLE	L112
	CMP	ESI,20
	JG	L112
	MOV	EAX,DWORD [-1512+EBP]
	MOV	EDX,DWORD [-1516+EBP]
	MOV	DWORD [-1576+EBP],EAX
	MOV	DWORD [-1580+EBP],EDX
	MOV	EAX,DWORD [-1556+EBP]
	MOV	EDX,DWORD [-1556+EBP]
	MOV	EAX,DWORD [12+EAX]
	MOV	EDX,DWORD [16+EDX]
	MOV	DWORD [-1584+EBP],EAX
	MOV	DWORD [-1532+EBP],EDX
L112:
	TEST	ECX,256
	JNE	L113
	MOV	EAX,DWORD [-1556+EBP]
	MOV	EDX,DWORD [4+EAX]
	SUB	EDX,EDI
	LEA	EAX,DWORD [-17+EDX]
	CMP	EAX,ESI
	JGE	L113
	LEA	EAX,DWORD [-2+EDX]
	CMP	ESI,EAX
	JGE	L113
	CMP	ESI,5
	JLE	L113
	CMP	ESI,15
	JG	L113
	AND	ECX,16
	JE	L114
	MOV	EDX,DWORD [-1556+EBP]
	MOV	EBX,DWORD [36+EDX]
	PUSH	LC29
	PUSH	DWORD [164+EBX]
	CALL	_cons_putstr0
	CALL	_io_cli
	LEA	EAX,DWORD [48+EBX]
	MOV	DWORD [84+EBX],EAX
	MOV	DWORD [76+EBX],_asm_end_app
	CALL	_io_sti
	PUSH	0
	PUSH	-1
	PUSH	EBX
	CALL	_task_run
	ADD	ESP,20
L113:
	MOV	ECX,DWORD [-1556+EBP]
	TEST	BYTE [29+ECX],1
	JNE	L116
	MOV	EDX,DWORD [4+ECX]
	SUB	EDX,EDI
	LEA	EAX,DWORD [-32+EDX]
	CMP	EAX,ESI
	JGE	L116
	LEA	EAX,DWORD [-17+EDX]
	CMP	ESI,EAX
	JGE	L116
	CMP	ESI,5
	JLE	L116
	CMP	ESI,15
	JG	L116
	PUSH	-100
	PUSH	ECX
	CALL	_sheet_updown
	POP	EAX
	POP	EDX
L116:
	MOV	EAX,DWORD [-1556+EBP]
	MOV	DWORD [-1588+EBP],EAX
	JMP	L106
L114:
	MOV	ECX,DWORD [-1556+EBP]
	MOV	EBX,DWORD [36+ECX]
	PUSH	-1
	PUSH	ECX
	CALL	_sheet_updown
	PUSH	DWORD [-1552+EBP]
	CALL	_keywin_off
	MOV	EDX,DWORD [-1540+EBP]
	MOV	EAX,DWORD [16+EDX]
	MOV	EAX,DWORD [16+EDX+EAX*4]
	PUSH	EAX
	MOV	DWORD [-1552+EBP],EAX
	CALL	_keywin_on
	CALL	_io_cli
	LEA	EAX,DWORD [16+EBX]
	PUSH	4
	PUSH	EAX
	CALL	_fifo32_put
	CALL	_io_sti
	ADD	ESP,24
	JMP	L113
L163:
	IMUL	EAX,DWORD [-1592+EBP],20
	PUSH	DWORD [-1536+EBP]
	LEA	EAX,DWORD [-1452+EAX+EBP*1]
	PUSH	EAX
	CALL	_exec_menu
	POP	ESI
	POP	EDI
	CMP	EAX,-1
	JE	L165
	MOV	DWORD [-1592+EBP],EAX
	JMP	L16
L165:
	CMP	DWORD [-1592+EBP],-1
L150:
	JLE	L16
	IMUL	EAX,DWORD [-1592+EBP],20
	LEA	EAX,DWORD [-1452+EAX+EBP*1]
	PUSH	EAX
	MOV	EAX,DWORD [-1540+EBP]
	PUSH	DWORD [20+EAX]
	CALL	_close_menu
	POP	ECX
	POP	EBX
	MOV	DWORD [-1592+EBP],EAX
	INC	EAX
	JMP	L150
L160:
	MOV	DWORD [-1516+EBP],0
	JMP	L88
L159:
	MOV	DWORD [-1512+EBP],0
	JMP	L87
L50:
	CMP	EDX,4407
	JE	L166
L51:
	CMP	DWORD [-1592+EBP],-1
	JE	L52
	CMP	DWORD [-1592+EBP],-1
	JLE	L52
L57:
	IMUL	EAX,DWORD [-1592+EBP],20
	LEA	EAX,DWORD [-1452+EAX+EBP*1]
	PUSH	EAX
	MOV	EAX,DWORD [-1540+EBP]
	PUSH	DWORD [20+EAX]
	CALL	_close_menu
	POP	EDX
	POP	ECX
	MOV	DWORD [-1592+EBP],EAX
	INC	EAX
	JG	L57
L52:
	MOV	EAX,DWORD [-1504+EBP]
	CMP	EAX,383
	JG	L58
	CMP	DWORD [-1564+EBP],0
	JNE	L59
	MOV	AL,BYTE [_keytable0.0-256+EAX]
L149:
	MOV	BYTE [-60+EBP],AL
L61:
	MOV	DL,BYTE [-60+EBP]
	LEA	EAX,DWORD [-65+EDX]
	CMP	AL,25
	JA	L62
	TEST	DWORD [-1568+EBP],4
	JNE	L140
	CMP	DWORD [-1564+EBP],0
	JE	L64
L62:
	CMP	BYTE [-60+EBP],0
	JE	L66
	CMP	DWORD [-1552+EBP],0
	JE	L66
	CALL	_io_cli
	MOV	EDX,DWORD [-1552+EBP]
	MOVSX	EAX,BYTE [-60+EBP]
	ADD	EAX,256
	PUSH	EAX
	MOV	EAX,DWORD [36+EDX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	CALL	_io_sti
	POP	EDI
	POP	EAX
L66:
	CMP	DWORD [-1504+EBP],271
	JE	L167
L67:
	MOV	EAX,DWORD [-1504+EBP]
	CMP	EAX,298
	JE	L168
L69:
	CMP	EAX,310
	JE	L169
L70:
	CMP	EAX,426
	JE	L170
L71:
	CMP	EAX,438
	JE	L171
L72:
	CMP	EAX,314
	JE	L172
L73:
	CMP	DWORD [-1504+EBP],325
	JE	L173
L74:
	CMP	DWORD [-1504+EBP],326
	JE	L174
L75:
	CMP	DWORD [-1504+EBP],315
	JE	L175
L76:
	CMP	DWORD [-1504+EBP],316
	JE	L176
L78:
	CMP	DWORD [-1504+EBP],343
	JE	L177
L80:
	MOV	EAX,DWORD [-1504+EBP]
	CMP	EAX,506
	JE	L178
L82:
	CMP	EAX,510
	JNE	L16
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1572+EBP]
	PUSH	96
	CALL	_io_out8
	POP	EBX
	POP	ESI
	JMP	L16
L178:
	MOV	DWORD [-1572+EBP],-1
	JMP	L82
L177:
	MOV	EDX,DWORD [-1540+EBP]
	MOV	EAX,DWORD [16+EDX]
	CMP	EAX,2
	JLE	L80
	DEC	EAX
	PUSH	EAX
	PUSH	DWORD [24+EDX]
	CALL	_sheet_updown
	POP	EDI
	POP	EAX
	JMP	L80
L176:
	CMP	DWORD [-1564+EBP],0
	JE	L78
	CMP	DWORD [-1552+EBP],0
	JE	L79
	PUSH	DWORD [-1552+EBP]
	CALL	_keywin_off
	POP	ECX
L79:
	PUSH	DWORD [-1536+EBP]
	PUSH	DWORD [-1540+EBP]
	CALL	_open_console
	PUSH	4
	PUSH	32
	PUSH	EAX
	MOV	DWORD [-1552+EBP],EAX
	CALL	_sheet_slide
	MOV	ECX,DWORD [-1540+EBP]
	PUSH	DWORD [16+ECX]
	PUSH	DWORD [-1552+EBP]
	CALL	_sheet_updown
	PUSH	DWORD [-1552+EBP]
	CALL	_keywin_on
	ADD	ESP,32
	PUSH	7
	PUSH	LC26
	CALL	_dbg_putstr0
	POP	EAX
	POP	EDX
	JMP	L78
L175:
	CMP	DWORD [-1564+EBP],0
	JE	L76
	CMP	DWORD [-1552+EBP],0
	JE	L76
	MOV	EDX,DWORD [-1552+EBP]
	MOV	EBX,DWORD [36+EDX]
	TEST	EBX,EBX
	JE	L76
	CMP	DWORD [52+EBX],0
	JE	L76
	PUSH	LC25
	PUSH	DWORD [164+EBX]
	CALL	_cons_putstr0
	CALL	_io_cli
	LEA	EAX,DWORD [48+EBX]
	MOV	DWORD [84+EBX],EAX
	MOV	DWORD [76+EBX],_asm_end_app
	CALL	_io_sti
	PUSH	0
	PUSH	-1
	PUSH	EBX
	CALL	_task_run
	ADD	ESP,20
	JMP	L76
L174:
	LEA	EBX,DWORD [-636+EBP]
	XOR	DWORD [-1568+EBP],1
	CALL	_io_cli
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	PUSH	DWORD [-1568+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	CALL	_io_sti
	ADD	ESP,16
	JMP	L75
L173:
	LEA	EBX,DWORD [-636+EBP]
	XOR	DWORD [-1568+EBP],2
	CALL	_io_cli
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	PUSH	DWORD [-1568+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	CALL	_io_sti
	ADD	ESP,16
	JMP	L74
L172:
	LEA	EBX,DWORD [-636+EBP]
	XOR	DWORD [-1568+EBP],4
	CALL	_io_cli
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	PUSH	DWORD [-1568+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	CALL	_io_sti
	ADD	ESP,16
	JMP	L73
L171:
	AND	DWORD [-1564+EBP],-3
	JMP	L72
L170:
	AND	DWORD [-1564+EBP],-2
	JMP	L71
L169:
	OR	DWORD [-1564+EBP],2
	JMP	L70
L168:
	OR	DWORD [-1564+EBP],1
	JMP	L69
L167:
	CMP	DWORD [-1552+EBP],0
	JE	L67
	PUSH	DWORD [-1552+EBP]
	CALL	_keywin_off
	MOV	EAX,DWORD [-1552+EBP]
	POP	ESI
	MOV	ECX,DWORD [24+EAX]
	DEC	ECX
	JNE	L68
	MOV	EDX,DWORD [-1540+EBP]
	MOV	ECX,DWORD [16+EDX]
	DEC	ECX
L68:
	MOV	EAX,DWORD [-1540+EBP]
	MOV	ECX,DWORD [20+EAX+ECX*4]
	PUSH	ECX
	MOV	DWORD [-1552+EBP],ECX
	CALL	_keywin_on
	POP	EBX
	JMP	L67
L64:
	LEA	EAX,DWORD [32+EDX]
	MOV	BYTE [-60+EBP],AL
	JMP	L62
L140:
	CMP	DWORD [-1564+EBP],0
	JE	L62
	JMP	L64
L59:
	MOV	AL,BYTE [_keytable1.1-256+EAX]
	JMP	L149
L58:
	MOV	BYTE [-60+EBP],0
	JMP	L61
L166:
	MOV	ECX,DWORD [-1540+EBP]
	PUSH	DWORD [ECX]
	PUSH	480
	PUSH	640
	CALL	_bmp_conv
	PUSH	7
	PUSH	LC24
	CALL	_dbg_putstr0
	ADD	ESP,20
	JMP	L51
L154:
	CMP	DWORD [-1520+EBP],0
	JNS	L179
	CMP	DWORD [-1528+EBP],2147483647
	JNE	L180
	PUSH	DWORD [-1560+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	JMP	L143
L180:
	CALL	_io_sti
	JMP	L151
L179:
	LEA	EDI,DWORD [-1500+EBP]
	CALL	_io_sti
	PUSH	DWORD [-1524+EBP]
	PUSH	DWORD [-1520+EBP]
	PUSH	DWORD [-1548+EBP]
	LEA	EBX,DWORD [-1500+EBP]
	CALL	_sheet_slide
	CLD
	XOR	EAX,EAX
	MOV	ECX,41
	REP
	STOSB
	PUSH	DWORD [-1524+EBP]
	PUSH	DWORD [-1520+EBP]
	PUSH	LC23
	PUSH	EBX
	CALL	_sprintf
	PUSH	7
	PUSH	EBX
	CALL	_dbg_putstr0
	ADD	ESP,36
	MOV	EAX,DWORD [-1552+EBP]
	MOV	EDX,DWORD [12+EAX]
	CMP	EDX,DWORD [-1520+EBP]
	JG	L22
	LEA	EAX,DWORD [3+EDX]
	CMP	DWORD [-1520+EBP],EAX
	JG	L22
	MOV	ECX,DWORD [-1552+EBP]
	MOV	EDX,DWORD [16+ECX]
	CMP	EDX,DWORD [-1524+EBP]
	JG	L23
	LEA	EAX,DWORD [3+EDX]
	CMP	DWORD [-1524+EBP],EAX
	JLE	L146
L23:
	LEA	EAX,DWORD [3+EDX]
	CMP	EAX,DWORD [-1524+EBP]
	JG	L25
	MOV	ECX,DWORD [-1552+EBP]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ECX]
	SUB	EAX,3
	CMP	DWORD [-1524+EBP],EAX
	JLE	L147
L25:
	MOV	EAX,DWORD [-1552+EBP]
	ADD	EDX,DWORD [8+EAX]
	LEA	EAX,DWORD [-3+EDX]
	CMP	EAX,DWORD [-1524+EBP]
	JG	L28
	CMP	DWORD [-1524+EBP],EDX
	JG	L28
L148:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_set_mouse_cursorrb8
L145:
	POP	EDI
	POP	EAX
L28:
	PUSH	DWORD [-1532+EBP]
	PUSH	DWORD [-1528+EBP]
	CALL	_reset_back
	PUSH	DWORD [-1532+EBP]
	PUSH	DWORD [-1528+EBP]
	PUSH	DWORD [-1552+EBP]
	CALL	_reset_key_win
	ADD	ESP,20
	MOV	DWORD [-1520+EBP],-1
	JMP	L16
L147:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_set_mouse_cursorl8
	JMP	L145
L146:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_set_mouse_cursorlt8
	JMP	L145
L22:
	LEA	EAX,DWORD [3+EDX]
	CMP	EAX,DWORD [-1520+EBP]
	JG	L29
	MOV	ECX,DWORD [-1552+EBP]
	MOV	EAX,EDX
	ADD	EAX,DWORD [4+ECX]
	SUB	EAX,3
	CMP	DWORD [-1520+EBP],EAX
	JG	L29
	MOV	EDX,DWORD [16+ECX]
	CMP	EDX,DWORD [-1524+EBP]
	JG	L32
	LEA	EAX,DWORD [3+EDX]
	CMP	DWORD [-1524+EBP],EAX
	JLE	L31
L32:
	MOV	EAX,DWORD [-1552+EBP]
	ADD	EDX,DWORD [8+EAX]
	LEA	EAX,DWORD [-3+EDX]
	CMP	EAX,DWORD [-1524+EBP]
	JG	L35
	CMP	DWORD [-1524+EBP],EDX
	JG	L35
L31:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_set_mouse_cursorh8
	JMP	L145
L35:
	PUSH	99
	LEA	EAX,DWORD [-1292+EBP]
	PUSH	EAX
	CALL	_init_mouse_cursor81
	JMP	L145
L29:
	MOV	ECX,DWORD [-1552+EBP]
	ADD	EDX,DWORD [4+ECX]
	LEA	EAX,DWORD [-3+EDX]
	CMP	EAX,DWORD [-1520+EBP]
	JG	L35
	CMP	DWORD [-1520+EBP],EDX
	JG	L35
	MOV	EDX,DWORD [16+ECX]
	CMP	EDX,DWORD [-1524+EBP]
	JG	L36
	LEA	EAX,DWORD [3+EDX]
	CMP	DWORD [-1524+EBP],EAX
	JLE	L148
L36:
	LEA	EAX,DWORD [3+EDX]
	CMP	EAX,DWORD [-1524+EBP]
	JG	L38
	MOV	ECX,DWORD [-1552+EBP]
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+ECX]
	SUB	EAX,3
	CMP	DWORD [-1524+EBP],EAX
	JLE	L147
L38:
	MOV	EAX,DWORD [-1552+EBP]
	ADD	EDX,DWORD [8+EAX]
	LEA	EAX,DWORD [-3+EDX]
	CMP	EAX,DWORD [-1524+EBP]
	JG	L28
	CMP	DWORD [-1524+EBP],EDX
	JG	L28
	JMP	L146
L153:
	PUSH	EBX
	CALL	_fifo32_get
	MOV	DWORD [-1572+EBP],EAX
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1572+EBP]
	PUSH	96
	CALL	_io_out8
	ADD	ESP,12
	JMP	L19
L4:
	PUSH	145472
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	EBX,EAX
	POP	EAX
	POP	EDX
	XOR	EDX,EDX
	MOV	DWORD [-1504+EBP],0
L10:
	MOV	AL,BYTE [_hankaku+EDX]
	MOV	BYTE [EDX+EBX*1],AL
	MOV	EAX,DWORD [-1504+EBP]
	INC	EAX
	MOV	DWORD [-1504+EBP],EAX
	MOV	EDX,EAX
	CMP	EAX,4095
	JLE	L10
	MOV	DWORD [-1504+EBP],4096
	MOV	EAX,4096
L15:
	MOV	BYTE [EAX+EBX*1],-1
	MOV	EAX,DWORD [-1504+EBP]
	INC	EAX
	MOV	DWORD [-1504+EBP],EAX
	CMP	EAX,145471
	JLE	L15
	PUSH	7
	PUSH	LC17
	JMP	L142
L152:
	PUSH	7
	PUSH	LC3
	JMP	L141
	GLOBAL	_keywin_off
_keywin_off:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	PUSH	0
	PUSH	EBX
	CALL	_change_wtitle8
	TEST	BYTE [28+EBX],32
	POP	ECX
	POP	EAX
	JNE	L183
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L183:
	CALL	_io_cli
	PUSH	3
	MOV	EAX,DWORD [36+EBX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	MOV	EBX,DWORD [-4+EBP]
	POP	EAX
	POP	EDX
	LEAVE
	JMP	_io_sti
	GLOBAL	_keywin_on
_keywin_on:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	PUSH	1
	PUSH	EBX
	CALL	_change_wtitle8
	TEST	BYTE [28+EBX],32
	POP	ECX
	POP	EAX
	JNE	L186
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L186:
	CALL	_io_cli
	PUSH	2
	MOV	EAX,DWORD [36+EBX]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	MOV	EBX,DWORD [-4+EBP]
	POP	EAX
	POP	EDX
	LEAVE
	JMP	_io_sti
	GLOBAL	_open_constask
_open_constask:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	CALL	_task_alloc
	PUSH	512
	PUSH	3932160
	MOV	EBX,EAX
	CALL	_memman_alloc_4k
	PUSH	65536
	PUSH	3932160
	MOV	ESI,EAX
	CALL	_memman_alloc_4k
	MOV	DWORD [190+EBX],1936617315
	MOV	DWORD [194+EBX],6646895
	MOV	DWORD [172+EBX],EAX
	MOV	EDX,DWORD [8+EBP]
	ADD	EAX,65524
	MOV	DWORD [100+EBX],EAX
	MOV	DWORD [76+EBX],_console_task
	MOV	DWORD [116+EBX],8
	MOV	DWORD [120+EBX],16
	MOV	DWORD [124+EBX],8
	MOV	DWORD [128+EBX],8
	MOV	DWORD [132+EBX],8
	MOV	DWORD [136+EBX],8
	MOV	DWORD [4+EAX],EDX
	MOV	EDX,DWORD [100+EBX]
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [8+EDX],EAX
	PUSH	2
	PUSH	3
	PUSH	EBX
	CALL	_task_run
	LEA	EAX,DWORD [16+EBX]
	PUSH	EBX
	PUSH	ESI
	PUSH	128
	PUSH	EAX
	CALL	_fifo32_init
	LEA	ESP,DWORD [-8+EBP]
	MOV	EAX,EBX
	POP	EBX
	POP	ESI
	POP	EBP
	RET
[SECTION .data]
LC30:
	DB	"console",0x00
LC31:
	DB	"open console",0x0A,0x00
[SECTION .text]
	GLOBAL	_open_console
_open_console:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_alloc
	PUSH	480000
	PUSH	3932160
	MOV	EBX,EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	PUSH	400
	MOV	ESI,EAX
	PUSH	600
	PUSH	EAX
	PUSH	EBX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	0
	PUSH	LC30
	PUSH	400
	PUSH	600
	PUSH	ESI
	CALL	_make_window8
	PUSH	0
	PUSH	363
	PUSH	584
	PUSH	28
	PUSH	8
	PUSH	EBX
	CALL	_make_textbox8
	ADD	ESP,44
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	CALL	_open_constask
	OR	DWORD [28+EBX],32
	MOV	DWORD [36+EBX],EAX
	PUSH	1
	PUSH	LC31
	CALL	_dbg_putstr0
	LEA	ESP,DWORD [-8+EBP]
	MOV	EAX,EBX
	POP	EBX
	POP	ESI
	POP	EBP
	RET
[SECTION .data]
LC32:
	DB	"close console",0x0A,0x00
[SECTION .text]
	GLOBAL	_close_constask
_close_constask:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	PUSH	EBX
	CALL	_task_sleep
	PUSH	65536
	PUSH	DWORD [172+EBX]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	512
	PUSH	DWORD [16+EBX]
	PUSH	3932160
	CALL	_memman_free_4k
	MOV	DWORD [4+EBX],0
	PUSH	1
	PUSH	LC32
	CALL	_dbg_putstr0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
	GLOBAL	_close_console
_close_console:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	MOV	ESI,DWORD [36+EBX]
	PUSH	480000
	PUSH	DWORD [EBX]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	EBX
	CALL	_sheet_free
	MOV	DWORD [8+EBP],ESI
	ADD	ESP,16
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	JMP	_close_constask
[SECTION .data]
LC33:
	DB	"[%s]",0x00
[SECTION .text]
	GLOBAL	_debug_msg
_debug_msg:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-124+EBP]
	SUB	ESP,112
	MOV	ESI,DWORD [4068]
	PUSH	DWORD [12+EBP]
	PUSH	LC33
	LEA	EDI,DWORD [1044+ESI]
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	IMUL	EAX,DWORD [8+EBP],20
	PUSH	1
	ADD	EAX,6
	PUSH	0
	PUSH	EAX
	PUSH	56
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [1044+ESI]
	CALL	_putfonts8_asc
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC34:
	DB	"open taskmgr",0x0A,0x00
[SECTION .text]
	GLOBAL	_open_taskmgr
_open_taskmgr:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EAX,DWORD [4068]
	CMP	DWORD [_taskmgr],0
	JE	L193
	XOR	ESI,ESI
	LEA	EBX,DWORD [1044+EAX]
L199:
	MOV	EAX,DWORD [_taskmgr]
	CMP	DWORD [36+EBX],EAX
	JE	L201
L196:
	INC	ESI
	ADD	EBX,44
	CMP	ESI,255
	JLE	L199
L192:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L201:
	PUSH	EBX
	CALL	_keywin_on
	POP	EAX
	JMP	L196
L193:
	CALL	_task_alloc
	PUSH	512
	PUSH	3932160
	MOV	DWORD [_taskmgr],EAX
	CALL	_memman_alloc_4k
	PUSH	65536
	PUSH	3932160
	MOV	ESI,EAX
	MOV	EBX,DWORD [_taskmgr]
	CALL	_memman_alloc_4k
	ADD	EAX,65528
	MOV	DWORD [100+EBX],EAX
	MOV	EAX,DWORD [_taskmgr]
	MOV	DWORD [190+EAX],1802723700
	MOV	DWORD [194+EAX],7497581
	MOV	EDX,DWORD [_taskmgr]
	MOV	DWORD [76+EAX],_taskmgr_task
	MOV	ECX,DWORD [100+EDX]
	MOV	DWORD [116+EAX],8
	MOV	DWORD [120+EAX],16
	MOV	DWORD [124+EAX],8
	MOV	DWORD [128+EAX],8
	MOV	DWORD [132+EAX],8
	MOV	DWORD [136+EAX],8
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [208+EDX],0
	MOV	DWORD [4+ECX],EAX
	PUSH	2
	PUSH	2
	PUSH	EDX
	CALL	_task_run
	MOV	EAX,DWORD [_taskmgr]
	PUSH	DWORD [_taskmgr]
	PUSH	ESI
	ADD	EAX,16
	PUSH	128
	PUSH	EAX
	CALL	_fifo32_init
	ADD	ESP,44
	PUSH	1
	PUSH	LC34
	CALL	_dbg_putstr0
	JMP	L192
[SECTION .data]
LC35:
	DB	"close taskmgr",0x0A,0x00
[SECTION .text]
	GLOBAL	_close_taskmgr
_close_taskmgr:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	DWORD [_taskmgr]
	CALL	_task_sleep
	MOV	EAX,DWORD [_taskmgr]
	PUSH	512
	PUSH	DWORD [16+EAX]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [_taskmgr]
	CALL	_task_free
	PUSH	1
	PUSH	LC35
	MOV	DWORD [_taskmgr],0
	CALL	_dbg_putstr0
	LEAVE
	RET
[SECTION .data]
LC36:
	DB	"OS Menu",0x00
[SECTION .text]
	GLOBAL	_open_menu
_open_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [4068]
	MOV	EBX,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	EDI,DWORD [12+EBP]
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [-20+EBP],0
	ADD	EAX,52
L209:
	CMP	DWORD [EAX],0
	JE	L205
	INC	DWORD [-20+EBP]
	ADD	EAX,60
	CMP	DWORD [-20+EBP],255
	JLE	L209
L205:
	MOV	EDX,DWORD [16+EBP]
	INC	DWORD [-20+EBP]
	CMP	DWORD [EDX],0
	JE	L216
L210:
	IMUL	EAX,DWORD [-20+EBP],26
	MOV	EDX,DWORD [16+EBP]
	LEA	ESI,DWORD [2+EAX]
	CMP	DWORD [EDX],0
	JNE	L211
	LEA	ESI,DWORD [20+EAX]
L211:
	PUSH	DWORD [-16+EBP]
	CALL	_sheet_alloc
	OR	DWORD [28+EAX],256
	MOV	DWORD [4+EDI],EAX
	MOV	EAX,ESI
	IMUL	EAX,EAX,144
	ADD	EAX,EAX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	DWORD [8+EDI],EAX
	PUSH	-1
	PUSH	ESI
	PUSH	144
	PUSH	EAX
	PUSH	DWORD [4+EDI]
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	DWORD [-20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	LC36
	PUSH	ESI
	PUSH	144
	PUSH	DWORD [8+EDI]
	CALL	_make_menu8
	MOV	EDX,DWORD [16+EBP]
	ADD	ESP,24
	MOV	EAX,DWORD [EDX]
	TEST	EAX,EAX
	JNE	L212
	MOV	EDX,DWORD [-16+EBP]
	MOV	DWORD [-24+EBP],0
	MOV	EAX,DWORD [12+EDX]
	SUB	EAX,ESI
	SUB	EAX,28
L213:
	PUSH	EAX
	PUSH	DWORD [-24+EBP]
	PUSH	DWORD [4+EDI]
	CALL	_sheet_slide
	MOV	EAX,DWORD [-16+EBP]
	PUSH	DWORD [16+EAX]
	PUSH	DWORD [4+EDI]
	CALL	_sheet_updown
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDX,DWORD [16+EBP]
	MOV	DWORD [16+EDI],EAX
	MOV	DWORD [12+EDI],0
	MOV	DWORD [EDI],EDX
	MOV	EAX,DWORD [EDX]
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L212:
	MOV	EDX,EAX
	LEA	EBX,DWORD [-20+EDI]
	IMUL	EDX,EDX,140
	MOV	DWORD [-24+EBP],EDX
	IMUL	EDX,DWORD [12+EBX],26
	DEC	EAX
	LEA	ECX,DWORD [2+EDX]
	JE	L217
L214:
	MOV	EAX,DWORD [4+EBX]
	MOV	EAX,DWORD [16+EAX]
	ADD	EAX,ECX
	SUB	EAX,ESI
	JMP	L213
L217:
	LEA	ECX,DWORD [20+EDX]
	JMP	L214
L216:
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_push_menu
	MOV	EAX,DWORD [8+EBX]
	LEA	EDX,DWORD [-2+EAX]
	SUB	EAX,24
	PUSH	EDX
	PUSH	61
	PUSH	EAX
	PUSH	2
	PUSH	EBX
	CALL	_sheet_refresh
	ADD	ESP,32
	JMP	L210
	GLOBAL	_close_menu
_close_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	PUSH	-1
	MOV	ESI,DWORD [8+EBP]
	PUSH	DWORD [4+EBX]
	CALL	_sheet_updown
	MOV	EAX,DWORD [4+EBX]
	MOV	EDX,DWORD [8+EAX]
	IMUL	EDX,DWORD [4+EAX]
	ADD	EDX,EDX
	PUSH	EDX
	PUSH	DWORD [8+EBX]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [4+EBX]
	CALL	_sheet_free
	ADD	ESP,24
	MOV	EAX,DWORD [EBX]
	CMP	DWORD [EAX],0
	JE	L220
L219:
	MOV	EAX,DWORD [EBX]
	MOV	EAX,DWORD [EAX]
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	DEC	EAX
	POP	ESI
	POP	EBP
	RET
L220:
	PUSH	DWORD [8+ESI]
	PUSH	DWORD [4+ESI]
	PUSH	DWORD [ESI]
	CALL	_pull_menu
	MOV	EAX,DWORD [8+ESI]
	LEA	EDX,DWORD [-2+EAX]
	SUB	EAX,24
	PUSH	EDX
	PUSH	61
	PUSH	EAX
	PUSH	2
	PUSH	ESI
	CALL	_sheet_refresh
	ADD	ESP,32
	JMP	L219
	GLOBAL	_select_menu
_select_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,1
	PUSH	EBX
	PUSH	EAX
	MOV	ESI,DWORD [8+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [12+ESI]
	TEST	EAX,EAX
	JNE	L226
L222:
	MOV	EAX,DWORD [ESI]
	MOV	DWORD [-16+EBP],EAX
	CMP	DWORD [EAX],0
	JNE	L223
	MOV	EDI,19
L223:
	CMP	DWORD [12+EBP],1
	JLE	L224
	MOV	ECX,DWORD [4+ESI]
	MOV	EAX,DWORD [4+ECX]
	SUB	EAX,2
	CMP	DWORD [12+EBP],EAX
	JGE	L224
	CMP	EDI,EBX
	JGE	L224
	MOV	EAX,DWORD [8+ECX]
	SUB	EAX,2
	CMP	EBX,EAX
	JL	L227
L224:
	MOV	DWORD [12+ESI],0
L221:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L227:
	SUB	EBX,EDI
	MOV	EDX,26
	MOV	EAX,EBX
	MOV	EDI,EDX
	CDQ
	IDIV	EDI
	LEA	EAX,DWORD [1+EAX]
	MOV	DWORD [12+ESI],EAX
	PUSH	1
	PUSH	EAX
	MOV	EAX,DWORD [-16+EBP]
	PUSH	DWORD [EAX]
	PUSH	ECX
	CALL	_change_mtitle8
	ADD	ESP,16
	JMP	L221
L226:
	PUSH	0
	PUSH	EAX
	MOV	EAX,DWORD [ESI]
	PUSH	DWORD [EAX]
	PUSH	DWORD [4+ESI]
	CALL	_change_mtitle8
	ADD	ESP,16
	JMP	L222
[SECTION .data]
LC37:
	DB	"<submenu>",0x00
LC38:
	DB	"<console>",0x00
LC39:
	DB	"<taskmgr>",0x00
LC40:
	DB	"open taskmgr",0x00
[SECTION .text]
	GLOBAL	_exec_menu
_exec_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	PUSH	ECX
	MOV	ECX,DWORD [8+EBP]
	MOV	EAX,DWORD [4068]
	MOV	DWORD [-16+EBP],EAX
	MOV	EDX,DWORD [16+ECX]
	MOV	EAX,DWORD [12+ECX]
	SUB	EDX,EAX
	OR	ECX,-1
	TEST	EAX,EAX
	JE	L228
	MOV	ESI,DWORD [8+EBP]
	TEST	EDX,EDX
	MOV	ESI,DWORD [ESI]
	MOV	DWORD [-20+EBP],ESI
	JLE	L247
	MOV	EBX,EDX
L234:
	MOV	EAX,DWORD [-20+EBP]
	DEC	EBX
	MOV	EAX,DWORD [52+EAX]
	MOV	DWORD [-20+EBP],EAX
	JNE	L234
L247:
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDI,LC37
	ADD	EAX,20
	MOV	ECX,10
	CLD
	MOV	ESI,EAX
	REPE
	CMPSB
	JE	L250
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDI,LC38
	ADD	EAX,20
	MOV	ECX,10
	CLD
	MOV	ESI,EAX
	REPE
	CMPSB
	JE	L251
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDI,LC39
	ADD	EAX,20
	MOV	ECX,10
	CLD
	MOV	ESI,EAX
	REPE
	CMPSB
	JNE	L239
	PUSH	LC40
	PUSH	1
	CALL	_debug_msg
	PUSH	DWORD [12+EBP]
	CALL	_open_taskmgr
	ADD	ESP,12
L236:
	OR	ECX,-1
L228:
	LEA	ESP,DWORD [-12+EBP]
	MOV	EAX,ECX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L239:
	PUSH	DWORD [12+EBP]
	PUSH	0
	XOR	EBX,EBX
	CALL	_open_constask
	LEA	EDI,DWORD [16+EAX]
	POP	EAX
	MOV	EAX,DWORD [-20+EBP]
	POP	EDX
	CMP	BYTE [20+EAX],0
	JNE	L245
L249:
	CALL	_io_cli
	PUSH	266
	PUSH	EDI
	CALL	_fifo32_put
	CALL	_io_sti
	POP	EAX
	POP	EDX
	JMP	L236
L245:
	CALL	_io_cli
	MOV	EDX,DWORD [-20+EBP]
	MOVSX	EAX,BYTE [20+EBX+EDX*1]
	ADD	EAX,256
	INC	EBX
	PUSH	EAX
	PUSH	EDI
	CALL	_fifo32_put
	CALL	_io_sti
	POP	ECX
	MOV	ECX,DWORD [-20+EBP]
	POP	ESI
	CMP	BYTE [20+EBX+ECX*1],0
	JNE	L245
	JMP	L249
L251:
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [-16+EBP]
	CALL	_open_console
	PUSH	8
	PUSH	8
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_sheet_slide
	MOV	EAX,DWORD [-16+EBP]
	PUSH	DWORD [16+EAX]
	PUSH	EBX
	CALL	_sheet_updown
	PUSH	EBX
	CALL	_keywin_on
	ADD	ESP,32
	JMP	L236
L250:
	MOV	EAX,DWORD [-20+EBP]
	PUSH	DWORD [56+EAX]
	MOV	EAX,DWORD [8+EBP]
	ADD	EAX,20
	PUSH	EAX
	PUSH	0
	CALL	_open_menu
	MOV	ECX,EAX
	JMP	L228
	GLOBAL	_set_menu
_set_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EDI,DWORD [24+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	DWORD [-20+EBP],-1
	MOV	DWORD [-24+EBP],0
	MOV	DWORD [-28+EBP],0
	MOV	DWORD [-16+EBP],0
L269:
	TEST	EDI,EDI
	JE	L257
	PUSH	EDI
	LEA	EAX,DWORD [4+EBX]
	PUSH	EAX
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JNE	L259
	MOV	DWORD [-24+EBP],EBX
L259:
	CMP	BYTE [4+EBX],0
	JE	L271
	INC	DWORD [-16+EBP]
	ADD	EBX,60
	ADD	ESI,60
	CMP	DWORD [-16+EBP],255
	JLE	L269
L254:
	MOV	EAX,DWORD [-20+EBP]
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L271:
	TEST	EDI,EDI
	JE	L265
	CMP	DWORD [-24+EBP],0
	JE	L254
L265:
	CMP	DWORD [28+EBP],0
	JE	L263
	CMP	DWORD [-28+EBP],0
	JE	L254
L263:
	TEST	EDI,EDI
	JE	L266
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [-24+EBP]
	ADD	EAX,ESI
	MOV	DWORD [56+EDX],EAX
L267:
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [EBX],EAX
	LEA	EAX,DWORD [4+EBX]
	PUSH	DWORD [16+EBP]
	PUSH	EAX
	CALL	_strcpy
	LEA	EAX,DWORD [20+EBX]
	PUSH	DWORD [20+EBP]
	PUSH	EAX
	CALL	_strcpy
	ADD	ESP,16
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [-20+EBP],EAX
	JMP	L254
L266:
	CMP	DWORD [28+EBP],0
	JE	L267
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [-28+EBP]
	ADD	EAX,ESI
	MOV	DWORD [52+EDX],EAX
	JMP	L267
L257:
	CMP	DWORD [28+EBP],0
	JE	L259
	PUSH	DWORD [28+EBP]
	LEA	EAX,DWORD [4+EBX]
	PUSH	EAX
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JNE	L259
	MOV	DWORD [-28+EBP],EBX
	JMP	L259
[SECTION .data]
LC41:
	DB	"taskmgr",0x00
LC42:
	DB	"explorer.hrb",0x00
LC43:
	DB	"explorer",0x00
LC44:
	DB	"programs+",0x00
LC45:
	DB	"walk",0x00
[SECTION .text]
	GLOBAL	_init_menu
_init_menu:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	PUSH	16384
	MOV	ESI,DWORD [8+EBP]
	PUSH	3932160
	MOV	EBX,DWORD [12+EBP]
	CALL	_memman_alloc_4k
	MOV	ECX,255
	MOV	DWORD [EBX],EAX
	POP	EAX
	POP	EDX
	XOR	EDX,EDX
L277:
	MOV	EAX,DWORD [EBX]
	MOV	BYTE [4+EAX+EDX*1],0
	MOV	DWORD [EAX+EDX*1],0
	MOV	EAX,DWORD [EBX]
	MOV	BYTE [20+EAX+EDX*1],0
	MOV	EAX,DWORD [EBX]
	MOV	DWORD [52+EAX+EDX*1],0
	MOV	EAX,DWORD [EBX]
	MOV	DWORD [56+EAX+EDX*1],0
	ADD	EDX,60
	DEC	ECX
	JNS	L277
	XOR	EAX,EAX
	MOV	ECX,7
L282:
	MOV	DWORD [ESI+EAX*1],0
	MOV	DWORD [4+ESI+EAX*1],0
	MOV	DWORD [8+ESI+EAX*1],0
	MOV	DWORD [12+ESI+EAX*1],0
	MOV	DWORD [16+ESI+EAX*1],0
	ADD	EAX,20
	DEC	ECX
	JNS	L282
	PUSH	0
	PUSH	0
	PUSH	LC39
	PUSH	LC41
	PUSH	0
	PUSH	DWORD [EBX]
	CALL	_set_menu
	PUSH	LC41
	PUSH	0
	PUSH	LC38
	PUSH	LC30
	PUSH	0
	PUSH	DWORD [EBX]
	CALL	_set_menu
	ADD	ESP,48
	PUSH	LC30
	PUSH	0
	PUSH	LC42
	PUSH	LC43
	PUSH	0
	PUSH	DWORD [EBX]
	CALL	_set_menu
	PUSH	LC43
	PUSH	0
	PUSH	LC37
	PUSH	LC44
	PUSH	0
	PUSH	DWORD [EBX]
	CALL	_set_menu
	ADD	ESP,48
	PUSH	0
	PUSH	LC44
	PUSH	LC45
	PUSH	LC45
	PUSH	1
	PUSH	DWORD [EBX]
	CALL	_set_menu
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_reset_back
_reset_back:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
	GLOBAL	_reset_key_win
_reset_key_win:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
	GLOBAL	_u_fat
[SECTION .data]
	ALIGNB	4
_u_fat:
	RESB	4
	GLOBAL	_fat_flag
[SECTION .data]
_fat_flag:
	RESB	1
	GLOBAL	_current_path
[SECTION .data]
	ALIGNB	16
_current_path:
	RESB	256
	GLOBAL	_epath
[SECTION .data]
	ALIGNB	16
_epath:
	RESB	1024
	GLOBAL	_fdc
[SECTION .data]
	ALIGNB	4
_fdc:
	RESB	4
	GLOBAL	_inout
[SECTION .data]
	ALIGNB	4
_inout:
	RESB	4
	GLOBAL	_taskmgr
[SECTION .data]
	ALIGNB	4
_taskmgr:
	RESB	4
