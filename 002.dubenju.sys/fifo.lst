     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_task_run
     7 00000000                                 	EXTERN	_io_cli
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 [FILE "fifo.c"]
    10                                          [SECTION .text]
    11 00000000                                 	GLOBAL	_fifo32_init
    12 00000000                                 _fifo32_init:
    13 00000000 55                              	PUSH	EBP
    14 00000001 89 E5                           	MOV	EBP,ESP
    15 00000003 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    16 00000006 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
    17 00000009 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    18 0000000C 89 10                           	MOV	DWORD [EAX],EDX
    19 0000000E 89 48 0C                        	MOV	DWORD [12+EAX],ECX
    20 00000011 8B 55 14                        	MOV	EDX,DWORD [20+EBP]
    21 00000014 89 48 10                        	MOV	DWORD [16+EAX],ECX
    22 00000017 C7 40 14 00000000               	MOV	DWORD [20+EAX],0
    23 0000001E C7 40 04 00000000               	MOV	DWORD [4+EAX],0
    24 00000025 C7 40 08 00000000               	MOV	DWORD [8+EAX],0
    25 0000002C 89 50 18                        	MOV	DWORD [24+EAX],EDX
    26 0000002F 5D                              	POP	EBP
    27 00000030 C3                              	RET
    28 00000031                                 	GLOBAL	_fifo32_put
    29 00000031                                 _fifo32_put:
    30 00000031 55                              	PUSH	EBP
    31 00000032 89 E5                           	MOV	EBP,ESP
    32 00000034 53                              	PUSH	EBX
    33 00000035 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    34 00000038 83 7B 10 00                     	CMP	DWORD [16+EBX],0
    35 0000003C 75 0C                           	JNE	L3
    36 0000003E 83 4B 14 01                     	OR	DWORD [20+EBX],1
    37 00000042 83 C8 FF                        	OR	EAX,-1
    38 00000045                                 L2:
    39 00000045 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    40 00000048 C9                              	LEAVE
    41 00000049 C3                              	RET
    42 0000004A                                 L3:
    43 0000004A 8B 4B 04                        	MOV	ECX,DWORD [4+EBX]
    44 0000004D 8B 13                           	MOV	EDX,DWORD [EBX]
    45 0000004F 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
    46 00000052 89 04 8A                        	MOV	DWORD [EDX+ECX*4],EAX
    47 00000055 8B 43 04                        	MOV	EAX,DWORD [4+EBX]
    48 00000058 40                              	INC	EAX
    49 00000059 89 43 04                        	MOV	DWORD [4+EBX],EAX
    50 0000005C 3B 43 0C                        	CMP	EAX,DWORD [12+EBX]
    51 0000005F 74 21                           	JE	L7
    52 00000061                                 L4:
    53 00000061 8B 43 18                        	MOV	EAX,DWORD [24+EBX]
    54 00000064 FF 4B 10                        	DEC	DWORD [16+EBX]
    55 00000067 85 C0                           	TEST	EAX,EAX
    56 00000069 74 13                           	JE	L5
    57 0000006B 83 78 04 02                     	CMP	DWORD [4+EAX],2
    58 0000006F 74 0D                           	JE	L5
    59 00000071 6A 00                           	PUSH	0
    60 00000073 6A FF                           	PUSH	-1
    61 00000075 50                              	PUSH	EAX
    62 00000076 E8 [00000000]                   	CALL	_task_run
    63 0000007B 83 C4 0C                        	ADD	ESP,12
    64 0000007E                                 L5:
    65 0000007E 31 C0                           	XOR	EAX,EAX
    66 00000080 EB C3                           	JMP	L2
    67 00000082                                 L7:
    68 00000082 C7 43 04 00000000               	MOV	DWORD [4+EBX],0
    69 00000089 EB D6                           	JMP	L4
    70 0000008B                                 	GLOBAL	_fifo32_put_io
    71 0000008B                                 _fifo32_put_io:
    72 0000008B 55                              	PUSH	EBP
    73 0000008C 89 E5                           	MOV	EBP,ESP
    74 0000008E 53                              	PUSH	EBX
    75 0000008F E8 [00000000]                   	CALL	_io_cli
    76 00000094 FF 75 0C                        	PUSH	DWORD [12+EBP]
    77 00000097 FF 75 08                        	PUSH	DWORD [8+EBP]
    78 0000009A E8 FFFFFF92                     	CALL	_fifo32_put
    79 0000009F 89 C3                           	MOV	EBX,EAX
    80 000000A1 E8 [00000000]                   	CALL	_io_sti
    81 000000A6 89 D8                           	MOV	EAX,EBX
    82 000000A8 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    83 000000AB C9                              	LEAVE
    84 000000AC C3                              	RET
    85 000000AD                                 	GLOBAL	_fifo32_get
    86 000000AD                                 _fifo32_get:
    87 000000AD 55                              	PUSH	EBP
    88 000000AE 83 C8 FF                        	OR	EAX,-1
    89 000000B1 89 E5                           	MOV	EBP,ESP
    90 000000B3 56                              	PUSH	ESI
    91 000000B4 53                              	PUSH	EBX
    92 000000B5 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    93 000000B8 8B 71 10                        	MOV	ESI,DWORD [16+ECX]
    94 000000BB 8B 59 0C                        	MOV	EBX,DWORD [12+ECX]
    95 000000BE 39 DE                           	CMP	ESI,EBX
    96 000000C0 74 18                           	JE	L9
    97 000000C2 8B 41 08                        	MOV	EAX,DWORD [8+ECX]
    98 000000C5 8B 11                           	MOV	EDX,DWORD [ECX]
    99 000000C7 8B 14 82                        	MOV	EDX,DWORD [EDX+EAX*4]
   100 000000CA 40                              	INC	EAX
   101 000000CB 89 41 08                        	MOV	DWORD [8+ECX],EAX
   102 000000CE 39 D8                           	CMP	EAX,EBX
   103 000000D0 74 0C                           	JE	L12
   104 000000D2                                 L11:
   105 000000D2 8D 46 01                        	LEA	EAX,DWORD [1+ESI]
   106 000000D5 89 41 10                        	MOV	DWORD [16+ECX],EAX
   107 000000D8 89 D0                           	MOV	EAX,EDX
   108 000000DA                                 L9:
   109 000000DA 5B                              	POP	EBX
   110 000000DB 5E                              	POP	ESI
   111 000000DC 5D                              	POP	EBP
   112 000000DD C3                              	RET
   113 000000DE                                 L12:
   114 000000DE C7 41 08 00000000               	MOV	DWORD [8+ECX],0
   115 000000E5 EB EB                           	JMP	L11
   116 000000E7                                 	GLOBAL	_fifo32_status
   117 000000E7                                 _fifo32_status:
   118 000000E7 55                              	PUSH	EBP
   119 000000E8 89 E5                           	MOV	EBP,ESP
   120 000000EA 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   121 000000ED 5D                              	POP	EBP
   122 000000EE 8B 42 0C                        	MOV	EAX,DWORD [12+EDX]
   123 000000F1 2B 42 10                        	SUB	EAX,DWORD [16+EDX]
   124 000000F4 C3                              	RET
