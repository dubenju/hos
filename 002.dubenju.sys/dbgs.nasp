[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_make_textbox8
	EXTERN	_sheet_refresh
	EXTERN	_putfonts8_asc_sht
	EXTERN	_table_16_65536
	EXTERN	_fat_flag
	EXTERN	_u_fat
	EXTERN	_hrb_api_fopen
	EXTERN	_sprintf
	EXTERN	_hrb_api_fwrite
	EXTERN	_hrb_api_fclose
[FILE "dbgs.c"]
[SECTION .text]
	GLOBAL	_dbg_init
_dbg_init:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	179
	PUSH	240
	PUSH	400
	MOV	EAX,DWORD [8+EBP]
	PUSH	200
	MOV	DWORD [_dbg],EAX
	PUSH	12
	PUSH	EAX
	MOV	DWORD [_dbg+4],179
	MOV	DWORD [_dbg+8],12
	MOV	DWORD [_dbg+12],200
	MOV	DWORD [_dbg+16],0
	MOV	DWORD [_dbg+20],0
	MOV	DWORD [_dbg+24],400
	MOV	DWORD [_dbg+28],240
	CALL	_make_textbox8
	MOV	EDX,DWORD [_dbg+8]
	MOV	ECX,DWORD [_dbg+12]
	MOV	EAX,ECX
	SUB	ECX,3
	ADD	EAX,DWORD [_dbg+28]
	ADD	EAX,3
	PUSH	EAX
	MOV	EAX,EDX
	ADD	EAX,DWORD [_dbg+24]
	SUB	EDX,3
	ADD	EAX,3
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [_dbg]
	CALL	_sheet_refresh
	MOV	BYTE [_dbg+32],1
	LEAVE
	RET
[SECTION .data]
LC0:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_dbg_putchar
_dbg_putchar:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	ECX
	MOV	EAX,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	BYTE [-6+EBP],AL
	CMP	AL,9
	MOV	BYTE [-5+EBP],0
	JE	L4
	CMP	AL,10
	JE	L17
	CMP	AL,13
	JE	L2
	MOV	EDX,DWORD [_dbg]
	TEST	EDX,EDX
	JNE	L18
L15:
	MOV	EAX,DWORD [_dbg+16]
	ADD	EAX,8
	MOV	DWORD [_dbg+16],EAX
	CMP	EAX,DWORD [_dbg+24]
	JE	L17
L2:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L17:
	PUSH	_dbg
	CALL	_dbg_newline
	POP	EAX
	JMP	L2
L18:
	PUSH	1
	LEA	EAX,DWORD [-6+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [_dbg+20]
	PUSH	DWORD [_dbg+4]
	ADD	EAX,DWORD [_dbg+12]
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [_dbg+16]
	ADD	EAX,DWORD [_dbg+8]
	PUSH	EAX
	PUSH	EDX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L15
L4:
	MOV	EDX,DWORD [_dbg]
	TEST	EDX,EDX
	JNE	L19
L7:
	MOV	EAX,DWORD [_dbg+16]
	ADD	EAX,8
	MOV	DWORD [_dbg+16],EAX
	CMP	EAX,DWORD [_dbg+24]
	JE	L20
L8:
	TEST	BYTE [_dbg+16],31
	JNE	L4
	JMP	L2
L20:
	PUSH	_dbg
	CALL	_dbg_newline
	POP	EDX
	JMP	L8
L19:
	PUSH	1
	MOV	EAX,DWORD [_dbg+20]
	PUSH	LC0
	ADD	EAX,DWORD [_dbg+12]
	PUSH	DWORD [_dbg+4]
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [_dbg+16]
	ADD	EAX,DWORD [_dbg+8]
	PUSH	EAX
	PUSH	EDX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L7
	GLOBAL	_dbg_newline
_dbg_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,56
	MOV	ESI,DWORD [8+EBP]
	MOV	EDX,DWORD [28+ESI]
	MOV	EAX,DWORD [ESI]
	MOV	DWORD [-16+EBP],EAX
	MOV	DWORD [-20+EBP],EDX
	MOV	EAX,EDX
	MOV	EDX,DWORD [20+ESI]
	SUB	EAX,16
	MOV	DWORD [16+ESI],0
	CMP	EDX,EAX
	JGE	L22
	LEA	EAX,DWORD [16+EDX]
	MOV	DWORD [20+ESI],EAX
L21:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L22:
	CMP	DWORD [-16+EBP],0
	JE	L21
	MOV	EBX,DWORD [12+ESI]
	MOV	ECX,DWORD [-20+EBP]
	MOV	DWORD [-44+EBP],EBX
	LEA	EAX,DWORD [-16+ECX+EBX*1]
	CMP	EBX,EAX
	JGE	L46
L34:
	MOV	ECX,DWORD [8+ESI]
	MOV	EDI,DWORD [24+ESI]
	MOV	DWORD [-24+EBP],ECX
	MOV	DWORD [-40+EBP],EDI
	LEA	EAX,DWORD [EDI+ECX*1]
	CMP	ECX,EAX
	JGE	L48
	MOV	EAX,DWORD [-16+EBP]
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,DWORD [4+EAX]
	MOV	EDI,DWORD [EDX]
	MOV	DWORD [-52+EBP],EAX
L33:
	LEA	EAX,DWORD [16+EBX]
	MOV	EDX,DWORD [-52+EBP]
	IMUL	EAX,DWORD [-52+EBP]
	IMUL	EDX,EBX
	LEA	EAX,DWORD [EAX+ECX*1]
	LEA	EDX,DWORD [EDX+ECX*1]
	INC	ECX
	MOV	AX,WORD [EDI+EAX*2]
	MOV	WORD [EDI+EDX*2],AX
	MOV	EAX,DWORD [-24+EBP]
	ADD	EAX,DWORD [-40+EBP]
	CMP	ECX,EAX
	JL	L33
L48:
	MOV	ECX,DWORD [-44+EBP]
	MOV	EDI,DWORD [-20+EBP]
	INC	EBX
	LEA	EAX,DWORD [-16+EDI+ECX*1]
	CMP	EBX,EAX
	JL	L34
L46:
	MOV	EAX,DWORD [12+ESI]
	MOV	EDX,DWORD [28+ESI]
	MOV	DWORD [-28+EBP],EAX
	MOV	DWORD [-32+EBP],EDX
	LEA	EBX,DWORD [-16+EDX+EAX*1]
L44:
	MOV	ECX,DWORD [8+ESI]
	MOV	EDI,DWORD [24+ESI]
	MOV	DWORD [-36+EBP],ECX
	MOV	DWORD [-68+EBP],EDI
	LEA	EAX,DWORD [EDI+ECX*1]
	CMP	ECX,EAX
	JGE	L52
	MOV	EAX,DWORD [-16+EBP]
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,DWORD [4+EAX]
	MOV	EDX,DWORD [EDX]
	MOV	DWORD [-48+EBP],EAX
	MOV	DWORD [-56+EBP],EDX
L43:
	MOV	EAX,DWORD [-48+EBP]
	MOV	EDX,DWORD [4+ESI]
	IMUL	EAX,EBX
	MOV	DX,WORD [_table_16_65536+EDX+EDX*1]
	MOV	EDI,DWORD [-56+EBP]
	LEA	EAX,DWORD [EAX+ECX*1]
	INC	ECX
	MOV	WORD [EDI+EAX*2],DX
	MOV	EAX,DWORD [-36+EBP]
	ADD	EAX,DWORD [-68+EBP]
	CMP	ECX,EAX
	JL	L43
L52:
	MOV	EAX,DWORD [-28+EBP]
	INC	EBX
	ADD	EAX,DWORD [-32+EBP]
	CMP	EBX,EAX
	JL	L44
	MOV	ECX,DWORD [12+ESI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [28+ESI]
	PUSH	EAX
	MOV	EDX,DWORD [8+ESI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [24+ESI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [-16+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L21
	GLOBAL	_dbg_putstr0
_dbg_putstr0:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [12+EBP]
	MOV	EBX,DWORD [8+EBP]
	CMP	BYTE [_dbg+32],1
	JE	L61
L53:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L61:
	CMP	BYTE [EBX],0
	JE	L53
L59:
	PUSH	ESI
	MOVSX	EAX,BYTE [EBX]
	PUSH	EAX
	INC	EBX
	CALL	_dbg_putchar
	POP	EAX
	POP	EDX
	CMP	BYTE [EBX],0
	JNE	L59
	JMP	L53
	GLOBAL	_dbg_putstr1
_dbg_putstr1:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [12+EBP]
	XOR	EBX,EBX
	MOV	EDI,DWORD [16+EBP]
	CMP	EBX,ESI
	JL	L67
L69:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L67:
	MOV	EDX,DWORD [8+EBP]
	PUSH	EDI
	MOVSX	EAX,BYTE [EBX+EDX*1]
	PUSH	EAX
	INC	EBX
	CALL	_dbg_putchar
	CMP	EBX,ESI
	POP	ECX
	POP	EAX
	JL	L67
	JMP	L69
[SECTION .data]
LC1:
	DB	"/ztext.txt",0x00
LC2:
	DB	"[log]%s",0x0A,0x00
[SECTION .text]
	GLOBAL	_out_log
_out_log:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,288
	CMP	BYTE [_fat_flag],0
	JNE	L72
L70:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L72:
	PUSH	DWORD [_u_fat]
	LEA	ESI,DWORD [-44+EBP]
	LEA	EDI,DWORD [-300+EBP]
	PUSH	ESI
	LEA	EBX,DWORD [-300+EBP]
	PUSH	0
	PUSH	LC1
	CALL	_hrb_api_fopen
	XOR	EAX,EAX
	CLD
	MOV	ECX,64
	REP
	STOSD
	PUSH	DWORD [8+EBP]
	PUSH	LC2
	MOV	EDI,EBX
	PUSH	EBX
	CALL	_sprintf
	XOR	EAX,EAX
	PUSH	DWORD [_u_fat]
	CLD
	PUSH	ESI
	OR	ECX,-1
	REPNE
	SCASB
	NOT	ECX
	DEC	ECX
	PUSH	ECX
	PUSH	EBX
	CALL	_hrb_api_fwrite
	ADD	ESP,44
	PUSH	DWORD [_u_fat]
	PUSH	ESI
	CALL	_hrb_api_fclose
	JMP	L70
	GLOBAL	_dbg
[SECTION .data]
	ALIGNB	16
_dbg:
	RESB	33
