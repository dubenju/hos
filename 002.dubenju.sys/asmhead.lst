     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [INSTRSET "i486p"]				; 486の命令まで使いたいという記述
     5 00000000                                 
     6 00000000                                 ;VBEMODE EQU 0x101 ;  640 x  480 x 8bit Color
     7  = 00000111                              VBEMODE EQU 0x111 ; 640 x  480 x 16bit Color
     8 00000000                                 ;  0x100 :  640 x  400 x 8bit Color
     9 00000000                                 ;  0x101 :  640 x  480 x 8bit Color
    10 00000000                                 ;  0x103 :  800 x  600 x 8bit Color
    11 00000000                                 ;  0x105 : 1024 x  768 x 8bit Color
    12 00000000                                 ;  0x107 : 1280 x 1024 x 8bit Color
    13 00000000                                 
    14 00000000                                 ;  0x111 :  640 x  480 x 16bit Color
    15 00000000                                 ;  0x114 :  800 x  600 x 16bit Color
    16 00000000                                 ;  0x117 : 1024 x  768 x 16bit Color
    17 00000000                                 ;  0x11A : 1280 x 1024 x 16bit Color
    18 00000000                                 
    19  = 00280000                              BOTPAK	EQU		0x00280000		; bootpackのロード先
    20  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    21  = 00000900                              DSKCAC0	EQU		0x00000900		; ディスクキャッシュの場所（リアルモード）
    22 00000000                                 
    23 00000000                                 ; BOOT_INFO関係
    24  = 000005F0                              CYLS	EQU		0x05f0			; ブートセクタが設定する
    25  = 000005F1                              LEDS	EQU		0x05f1
    26  = 000005F2                              VMODE	EQU		0x05f2			; 色数に関する情報。何ビットカラーか？
    27  = 000005F4                              SCRNX	EQU		0x05f4			; 解像度のX
    28  = 000005F6                              SCRNY	EQU		0x05f6			; 解像度のY
    29  = 000005F8                              VRAM	EQU		0x05f8			; グラフィックバッファの開始番地
    30 00000000                                 
    31                                          		ORG		0x0700			; このプログラムがどこに読み込まれるのか
    32 00000700                                 
    33 00000700 B8 9000                         		MOV		AX,0x9000
    34 00000703 8E C0                           		MOV		ES,AX
    35 00000705 BF 0000                         		MOV		DI,0
    36 00000708                                 
    37 00000708 C6 06 05F0 01                   		MOV		BYTE  [CYLS],1 
    38 0000070D                                 
    39 0000070D                                 ;Check VESA
    40 0000070D B8 4F00                         		MOV		AX,0x4f00
    41 00000710 CD 10                           		INT		10H
    42 00000712 3D 004F                         		CMP		AX,0x004f
    43 00000715                                 ;		JNE		scrn320
    44 00000715 75 74                           		JNE		scrn640
    45 00000717                                 
    46 00000717 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    47 0000071B 3D 0200                         		CMP		AX,0x0200
    48 0000071E                                 ;		JB		scrn320
    49 0000071E 72 6B                           		JB		scrn640
    50 00000720                                 
    51 00000720 B9 0111                         		MOV		CX,VBEMODE
    52 00000723 B8 4F01                         		MOV		AX,0x4f01
    53 00000726 CD 10                           		INT		10H
    54 00000728 3D 004F                         		CMP		AX,0x004f
    55 0000072B                                 ;		JNE		scrn320
    56 0000072B 75 5E                           		JNE		scrn640
    57 0000072D                                 
    58 0000072D                                 
    59 0000072D                                 ;    CMP		BYTE [ES:DI+0x19],8
    60 0000072D 26 80 7D 19 10                  		CMP		BYTE [ES:DI+0x19],16
    61 00000732                                 ;		JNE		scrn320
    62 00000732 75 57                           		JNE		scrn640
    63 00000734                                 ;    CMP		BYTE [ES:DI+0x1b],4
    64 00000734 26 80 7D 1B 06                  		CMP		BYTE [ES:DI+0x1b],6
    65 00000739                                 ;		JNE		scrn320
    66 00000739 75 50                           		JNE		scrn640
    67 0000073B 26 8B 05                        		MOV		AX,[ES:DI+0x00]
    68 0000073E 25 0080                         		AND		AX,0x0080
    69 00000741                                 ;		JZ		scrn320
    70 00000741 74 48                           		JZ		scrn640
    71 00000743                                 
    72 00000743                                 
    73 00000743 BB 4111                         		MOV		BX,VBEMODE+0x4000
    74 00000746 B8 4F02                         		MOV		AX,0x4f02
    75 00000749 CD 10                           		INT		10H
    76 0000074B                                 ;    MOV		BYTE [VMODE],8
    77 0000074B C6 06 05F2 10                   		MOV		BYTE [VMODE],16
    78 00000750 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    79 00000754 A3 05F4                         		MOV		[SCRNX],AX
    80 00000757 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    81 0000075B A3 05F6                         		MOV		[SCRNY],AX
    82 0000075E 66 26 8B 45 28                  		MOV		EAX, [ES:DI+0x28]
    83 00000763 66 A3 05F8                      		MOV		[VRAM], EAX
    84 00000767 EB 42                           		JMP		keystatus
    85 00000769                                 
    86 00000769                                 scrn320:
    87 00000769 B0 13                           		MOV		AL,0x13	
    88 0000076B B4 00                           		MOV		AH,0x00
    89 0000076D CD 10                           		INT		0x10
    90 0000076F C6 06 05F2 08                   		MOV		BYTE [VMODE],8
    91 00000774 C7 06 05F4 0140                 		MOV		WORD [SCRNX],320
    92 0000077A C7 06 05F6 00F0                 		MOV		WORD [SCRNY],240
    93 00000780 66 C7 06 05F8 000A0000          		MOV		DWORD [VRAM],000A0000H
    94 00000789 EB 20                           		JMP		keystatus
    95 0000078B                                 
    96 0000078B                                 scrn640:
    97 0000078B                                 ; 画面モードを設定
    98 0000078B                                 
    99 0000078B B4 00                           		MOV		AH, 00H
   100 0000078D B0 13                           		MOV		AL, 13H			; VGAグラフィックス、13H：640×480 256色
   101 0000078F CD 10                           		INT		10H
   102 00000791 C6 06 05F2 08                   		MOV		BYTE [VMODE],8
   103 00000796 C7 06 05F4 0280                 		MOV		WORD [SCRNX],640
   104 0000079C C7 06 05F6 01E0                 		MOV		WORD [SCRNY],480
   105 000007A2 66 C7 06 05F8 000A0000          		MOV		DWORD [VRAM],000A0000H
   106 000007AB                                 
   107 000007AB                                 keystatus:
   108 000007AB                                 
   109 000007AB                                 
   110 000007AB B4 02                           		MOV		AH,02H
   111 000007AD CD 16                           		INT		16H			; keyboard BIOS
   112 000007AF                                 ;H->L:Ins、Caps Lock、Num Lock、Scroll Lock、Alt、Ctrl、Left Shift、Right Shift
   113 000007AF A2 05F1                         		MOV		[LEDS],AL  ; 05f1
   114 000007B2                                 
   115 000007B2                                 ; PICが一切の割り込みを受け付けないようにする
   116 000007B2                                 ;	AT互換機の仕様では、PICの初期化をするなら、
   117 000007B2                                 ;	こいつをCLI前にやっておかないと、たまにハングアップする
   118 000007B2                                 ;	PICの初期化はあとでやる
   119 000007B2                                 
   120 000007B2 B0 FF                           		MOV		AL,0xff
   121 000007B4 E6 21                           		OUT		0x21,AL
   122 000007B6 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
   123 000007B7 E6 A1                           		OUT		0xa1,AL
   124 000007B9                                 
   125 000007B9 FA                              		CLI						; さらにCPUレベルでも割り込み禁止
   126 000007BA                                 
   127 000007BA                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   128 000007BA                                 
   129 000007BA                                 ;		CALL	waitkbdout
   130 000007BA                                 ;		MOV		AL,0D1H
   131 000007BA                                 ;		OUT		64H,AL
   132 000007BA                                 ;		CALL	waitkbdout
   133 000007BA                                 ;		MOV		AL,0DFH			; enable A20
   134 000007BA                                 ;		OUT		60H,AL
   135 000007BA                                 ;		CALL	waitkbdout
   136 000007BA                                 
   137 000007BA E4 92                                          IN  AL , 92H
   138 000007BC 0C 02                                          OR  AL , 02H     ; enable A20
   139 000007BE E6 92                           		OUT 92H, AL
   140 000007C0                                 
   141 000007C0                                 ;    call check_a20
   142 000007C0                                 ;    test ax, ax
   143 000007C0                                 ;    mov ax, A20On
   144 000007C0                                 ;    jnz Print           ; Enabled
   145 000007C0                                 ;    mov ax, A20Off
   146 000007C0                                 ; 
   147 000007C0                                 ;Print:
   148 000007C0                                 ;    mov bp, ax
   149 000007C0                                 ;    mov cx, 16
   150 000007C0                                 ;    mov ax, 0x1301
   151 000007C0                                 ;    mov bx, 0x000c
   152 000007C0                                 ;    mov dl, 0
   153 000007C0                                 ;    int 0x10
   154 000007C0                                 ;    
   155 000007C0                                 ;    cli                 ; Shutdown
   156 000007C0                                 ;    hlt
   157 000007C0                                 ; 
   158 000007C0                                 ;check_a20:
   159 000007C0                                 ;    push ds
   160 000007C0                                 ;    push es
   161 000007C0                                 ;    push di
   162 000007C0                                 ;    push si
   163 000007C0                                 ; 
   164 000007C0                                 ;    cli
   165 000007C0                                 ; 
   166 000007C0                                 ;    xor ax, ax ; ax = 0
   167 000007C0                                 ;    mov es, ax
   168 000007C0                                 ; 
   169 000007C0                                 ;    not ax ; ax = 0xFFFF
   170 000007C0                                 ;    mov ds, ax
   171 000007C0                                 ; 
   172 000007C0                                 ;    mov di, 0x0500
   173 000007C0                                 ;    mov si, 0x0510
   174 000007C0                                 ; 
   175 000007C0                                 ;    mov al, byte [es:di]
   176 000007C0                                 ;    push ax
   177 000007C0                                 ; 
   178 000007C0                                 ;    mov al, byte [ds:si]
   179 000007C0                                 ;    push ax
   180 000007C0                                 ; 
   181 000007C0                                 ;    mov byte [es:di], 0x00
   182 000007C0                                 ;    mov byte [ds:si], 0xFF
   183 000007C0                                 ; 
   184 000007C0                                 ;    cmp byte [es:di], 0xFF
   185 000007C0                                 ; 
   186 000007C0                                 ;    pop ax
   187 000007C0                                 ;    mov byte [ds:si], al
   188 000007C0                                 ; 
   189 000007C0                                 ;    pop ax
   190 000007C0                                 ;    mov byte [es:di], al
   191 000007C0                                 ; 
   192 000007C0                                 ;    mov ax, 0
   193 000007C0                                 ;    je check_a20__exit
   194 000007C0                                 ; 
   195 000007C0                                 ;    mov ax, 1
   196 000007C0                                 ; 
   197 000007C0                                 ;check_a20__exit:
   198 000007C0                                 ;    pop si
   199 000007C0                                 ;    pop di
   200 000007C0                                 ;    pop es
   201 000007C0                                 ;    pop ds
   202 000007C0                                 ; 
   203 000007C0                                 ;    ret
   204 000007C0                                 ; 
   205 000007C0                                 ;A20On:
   206 000007C0                                 ;    db "A20 is On        "
   207 000007C0                                 ;A20Off:
   208 000007C0                                 ;    db "A20 is Off       "
   209 000007C0                                  
   210 000007C0                                 
   211 000007C0                                 ; プロテクトモード移行
   212 000007C0                                 
   213 000007C0                                 
   214 000007C0 0F 01 16 08AA                   		LGDT	[GDTR0]			; 暫定GDTを設定
   215 000007C5 0F 20 C0                        		MOV		EAX,CR0
   216 000007C8 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   217 000007CE 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   218 000007D2 0F 22 C0                        		MOV		CR0,EAX
   219 000007D5 EB 00                           		JMP		pipelineflush
   220 000007D7                                 pipelineflush:
   221 000007D7 B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
   222 000007DA 8E D8                           		MOV		DS,AX
   223 000007DC 8E C0                           		MOV		ES,AX
   224 000007DE 8E E0                           		MOV		FS,AX
   225 000007E0 8E E8                           		MOV		GS,AX
   226 000007E2 8E D0                           		MOV		SS,AX
   227 000007E4                                 
   228 000007E4                                 ; bootpackの転送
   229 000007E4                                 
   230 000007E4 66 BE 000008B0                  		MOV		ESI,bootpack	; 転送元
   231 000007EA 66 BF 00280000                  		MOV		EDI,BOTPAK	; 転送先 0x00280000
   232 000007F0 66 B9 00020000                  		MOV		ECX,512*1024/4
   233 000007F6 E8 0075                         		CALL	memcpy
   234 000007F9                                 
   235 000007F9                                 ; ついでにディスクデータも本来の位置へ転送
   236 000007F9                                 
   237 000007F9                                 ; まずはブートセクタから
   238 000007F9                                 
   239 000007F9 66 BE 00000700                  		MOV		ESI,0700H	; 転送元
   240 000007FF 66 BF 00100000                  		MOV		EDI,DSKCAC	; 転送先 0x00100000
   241 00000805 66 B9 00000080                  		MOV		ECX,512/4
   242 0000080B E8 0060                         		CALL	memcpy
   243 0000080E                                 
   244 0000080E                                 ; 残り全部
   245 0000080E                                 
   246 0000080E 66 BE 00000B00                  		MOV		ESI,DSKCAC0+512	; 転送元 0x00008000 0x00000900
   247 00000814 66 BF 00100200                  		MOV		EDI,DSKCAC +512	; 転送先 0x00100000
   248 0000081A 66 B9 00000000                  		MOV		ECX,0
   249 00000820 8A 0E 05F0                      		MOV		CL,BYTE [CYLS]
   250 00000824 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   251 0000082B 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   252 00000832 E8 0039                         		CALL	memcpy
   253 00000835                                 
   254 00000835                                 ;		HLT
   255 00000835                                 
   256 00000835                                 ; asmheadでしなければいけないことは全部し終わったので、
   257 00000835                                 ;	あとはbootpackに任せる
   258 00000835                                 
   259 00000835                                 ; bootpackの起動
   260 00000835                                 
   261 00000835 66 BB 00280000                  		MOV		EBX,BOTPAK              ; 0x00280000
   262 0000083B 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   263 00000840 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   264 00000844 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   265 00000848 74 10                           		JZ		skip			; 転送するべきものがない
   266 0000084A 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   267 0000084F 66 01 DE                        		ADD		ESI,EBX
   268 00000852 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   269 00000857 E8 0014                         		CALL	memcpy
   270 0000085A                                 skip:
   271 0000085A 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   272 0000085F 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   273 00000867                                 
   274 00000867                                 waitkbdout:
   275 00000867 E4 64                           		IN		 AL,64H
   276 00000869 24 02                           		AND		 AL,02H
   277 0000086B 75 FA                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   278 0000086D C3                              		RET
   279 0000086E                                 
   280 0000086E                                 memcpy:
   281 0000086E 67 66 8B 06                     		MOV		EAX,[ESI]
   282 00000872 66 83 C6 04                     		ADD		ESI,4
   283 00000876 67 66 89 07                     		MOV		[EDI],EAX
   284 0000087A 66 83 C7 04                     		ADD		EDI,4
   285 0000087E 66 83 E9 01                     		SUB		ECX,1
   286 00000882 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   287 00000884 C3                              		RET
   288 00000885                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   289 00000885                                 
   290 00000885 00 00 00 00 00 00 00 00 00 00   		ALIGNB	16
       0000088F 00 
   291 00000890                                 GDT0:
   292 00000890                                 ;		RESB	8				; ヌルセレクタ
   293 00000890                                 ;		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   294 00000890                                 ;		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   295 00000890 00000000 00000000               		DD 00000000H, 00000000H
   296 00000898 0000FFFF 00CF9200               		DD 0000FFFFH, 00CF9200H
   297 000008A0 0000FFFF 00479A28               		DD 0000FFFFH, 00479A28H
   298 000008A8                                 
   299 000008A8                                 
   300 000008A8                                 ;Base	00000000
   301 000008A8                                 ;Limit	FFFFF
   302 000008A8                                 ;G	1
   303 000008A8                                 ;D	1
   304 000008A8                                 ;X	0
   305 000008A8                                 ;U	0
   306 000008A8                                 ;P	1
   307 000008A8                                 ;DPL	0
   308 000008A8                                 ;Type	9
   309 000008A8                                 ;A	0
   310 000008A8                                 ;Base	00280000
   311 000008A8                                 ;Limit	7FFFF
   312 000008A8                                 ;G	0
   313 000008A8                                 ;D	1
   314 000008A8                                 ;X	0
   315 000008A8                                 ;U	0
   316 000008A8                                 ;P	1
   317 000008A8                                 ;DPL	0
   318 000008A8                                 ;Type	D
   319 000008A8                                 ;A	0
   320 000008A8                                 
   321 000008A8                                 
   322 000008A8 0000                            		DW		0
   323 000008AA                                 GDTR0:
   324 000008AA 0017                            		DW		8*3-1 ; limit 8 * n - 1
   325 000008AC 00000890                        		DD		GDT0  ; base
   326 000008B0                                 
   327 000008B0                                 		ALIGNB	16
   328 000008B0                                 bootpack:
