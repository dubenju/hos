	.file	"bootpack.c"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$516, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_init
	pushl	$647168
	pushl	$65536
	pushl	$3932160
	call	_memman_free
	leal	-4194304(%ebx), %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	1528
	pushl	$3932160
	call	_shtctl_init
	movl	%eax, %esi
	pushl	%eax
	call	_sheet_alloc
	movswl	1526,%edx
	movl	%eax, -528(%ebp)
	movswl	1524,%eax
	imull	%edx, %eax
	addl	%eax, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-528(%ebp)
	call	_sheet_setbuf
	addl	$48, %esp
	movswl	1526,%eax
	pushl	%eax
	movswl	1524,%eax
	pushl	%eax
	pushl	%ebx
	leal	-524(%ebp), %ebx
	call	_init_screen8
	pushl	%esi
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	movl	%eax, %esi
	pushl	$16
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$36, %esp
	pushl	$99
	pushl	%ebx
	call	_init_mouse_cursor8
	movl	$2, %ecx
	movswl	1524,%eax
	leal	-16(%eax), %edx
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movswl	1526,%edx
	subl	$44, %edx
	movl	%eax, %edi
	movl	%edx, %eax
	pushl	$0
	cltd
	idivl	%ecx
	pushl	$0
	movl	%eax, %ebx
	pushl	-528(%ebp)
	call	_sheet_slide
	pushl	%ebx
	pushl	%edi
	pushl	%esi
	call	_sheet_slide
	addl	$32, %esp
	pushl	$0
	pushl	-528(%ebp)
	call	_sheet_updown
	pushl	$3
	pushl	%esi
	call	_sheet_updown
	addl	$16, %esp
L2:
	call	_io_loop
	jmp	L2
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	$0
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L7
	movl	-4(%ebp), %ebx
	leave
	ret
L7:
	call	_io_cli
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	movl	-4(%ebp), %ebx
	popl	%eax
	popl	%edx
	leave
	jmp	_io_sti
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	$1
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L10
	movl	-4(%ebp), %ebx
	leave
	ret
L10:
	call	_io_cli
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	movl	-4(%ebp), %ebx
	popl	%eax
	popl	%edx
	leave
	jmp	_io_sti
	.balign 2
.globl _open_constask
	.def	_open_constask;	.scl	2;	.type	32;	.endef
_open_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$65536
	pushl	$3932160
	movl	%eax, %esi
	call	_memman_alloc_4k
	movl	$1936617315, 190(%ebx)
	movl	$6646895, 194(%ebx)
	movl	%eax, 172(%ebx)
	movl	8(%ebp), %edx
	addl	$65524, %eax
	movl	%eax, 100(%ebx)
	movl	$_console_task, 76(%ebx)
	movl	$8, 116(%ebx)
	movl	$16, 120(%ebx)
	movl	$8, 124(%ebx)
	movl	$8, 128(%ebx)
	movl	$8, 132(%ebx)
	movl	$8, 136(%ebx)
	movl	%edx, 4(%eax)
	movl	100(%ebx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	$2
	pushl	$3
	pushl	%ebx
	call	_task_run
	leal	16(%ebx), %eax
	pushl	%ebx
	pushl	%esi
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.data
LC0:
	.ascii "console\0"
LC1:
	.ascii "open console\12\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$480000
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$400
	movl	%eax, %esi
	pushl	$600
	pushl	%eax
	pushl	%ebx
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$0
	pushl	$LC0
	pushl	$400
	pushl	$600
	pushl	%esi
	call	_make_window8
	pushl	$0
	pushl	$363
	pushl	$584
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_make_textbox8
	addl	$44, %esp
	pushl	12(%ebp)
	pushl	%ebx
	call	_open_constask
	orl	$32, 28(%ebx)
	movl	%eax, 36(%ebx)
	pushl	$1
	pushl	$LC1
	call	_dbg_putstr0
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.data
LC2:
	.ascii "close console\12\0"
	.text
	.balign 2
.globl _close_constask
	.def	_close_constask;	.scl	2;	.type	32;	.endef
_close_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_task_sleep
	pushl	$65536
	pushl	172(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	$512
	pushl	16(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	movl	$0, 4(%ebx)
	pushl	$1
	pushl	$LC2
	call	_dbg_putstr0
	movl	-4(%ebp), %ebx
	leave
	ret
	.balign 2
.globl _close_console
	.def	_close_console;	.scl	2;	.type	32;	.endef
_close_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	36(%ebx), %esi
	pushl	$480000
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	movl	%esi, 8(%ebp)
	addl	$16, %esp
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	jmp	_close_constask
	.data
LC3:
	.ascii "[%s]\0"
	.text
	.balign 2
.globl _debug_msg
	.def	_debug_msg;	.scl	2;	.type	32;	.endef
_debug_msg:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-124(%ebp), %ebx
	subl	$112, %esp
	movl	4068, %esi
	pushl	12(%ebp)
	pushl	$LC3
	leal	1044(%esi), %edi
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	imull	$20, 8(%ebp), %eax
	pushl	$1
	addl	$6, %eax
	pushl	$0
	pushl	%eax
	pushl	$56
	pushl	4(%edi)
	pushl	1044(%esi)
	call	_putfonts8_asc
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC4:
	.ascii "open taskmgr\12\0"
	.text
	.balign 2
.globl _open_taskmgr
	.def	_open_taskmgr;	.scl	2;	.type	32;	.endef
_open_taskmgr:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	4068, %eax
	cmpl	$0, _taskmgr
	je	L17
	xorl	%esi, %esi
	leal	1044(%eax), %ebx
L23:
	movl	_taskmgr, %eax
	cmpl	%eax, 36(%ebx)
	je	L25
L20:
	incl	%esi
	addl	$44, %ebx
	cmpl	$255, %esi
	jle	L23
L16:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L25:
	pushl	%ebx
	call	_keywin_on
	popl	%eax
	jmp	L20
L17:
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, _taskmgr
	call	_memman_alloc_4k
	pushl	$65536
	pushl	$3932160
	movl	%eax, %esi
	movl	_taskmgr, %ebx
	call	_memman_alloc_4k
	addl	$65528, %eax
	movl	%eax, 100(%ebx)
	movl	_taskmgr, %eax
	movl	$1802723700, 190(%eax)
	movl	$7497581, 194(%eax)
	movl	_taskmgr, %edx
	movl	$_taskmgr_task, 76(%eax)
	movl	100(%edx), %ecx
	movl	$8, 116(%eax)
	movl	$16, 120(%eax)
	movl	$8, 124(%eax)
	movl	$8, 128(%eax)
	movl	$8, 132(%eax)
	movl	$8, 136(%eax)
	movl	8(%ebp), %eax
	movl	$0, 208(%edx)
	movl	%eax, 4(%ecx)
	pushl	$2
	pushl	$2
	pushl	%edx
	call	_task_run
	movl	_taskmgr, %eax
	pushl	_taskmgr
	pushl	%esi
	addl	$16, %eax
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	addl	$44, %esp
	pushl	$1
	pushl	$LC4
	call	_dbg_putstr0
	jmp	L16
	.data
LC5:
	.ascii "close taskmgr\12\0"
	.text
	.balign 2
.globl _close_taskmgr
	.def	_close_taskmgr;	.scl	2;	.type	32;	.endef
_close_taskmgr:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	_taskmgr
	call	_task_sleep
	movl	_taskmgr, %eax
	pushl	$512
	pushl	16(%eax)
	pushl	$3932160
	call	_memman_free_4k
	pushl	_taskmgr
	call	_task_free
	pushl	$1
	pushl	$LC5
	movl	$0, _taskmgr
	call	_dbg_putstr0
	leave
	ret
	.data
LC6:
	.ascii "OS Menu\0"
	.text
	.balign 2
.globl _open_menu
	.def	_open_menu;	.scl	2;	.type	32;	.endef
_open_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	4068, %eax
	movl	8(%ebp), %ebx
	movl	%eax, -16(%ebp)
	movl	12(%ebp), %edi
	movl	16(%ebp), %eax
	movl	$0, -20(%ebp)
	addl	$52, %eax
L33:
	cmpl	$0, (%eax)
	je	L29
	incl	-20(%ebp)
	addl	$60, %eax
	cmpl	$255, -20(%ebp)
	jle	L33
L29:
	movl	16(%ebp), %edx
	incl	-20(%ebp)
	cmpl	$0, (%edx)
	je	L40
L34:
	imull	$26, -20(%ebp), %eax
	movl	16(%ebp), %edx
	leal	2(%eax), %esi
	cmpl	$0, (%edx)
	jne	L35
	leal	20(%eax), %esi
L35:
	pushl	-16(%ebp)
	call	_sheet_alloc
	orl	$256, 28(%eax)
	movl	%eax, 4(%edi)
	movl	%esi, %eax
	imull	$144, %eax, %eax
	addl	%eax, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, 8(%edi)
	pushl	$-1
	pushl	%esi
	pushl	$144
	pushl	%eax
	pushl	4(%edi)
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	-20(%ebp)
	pushl	16(%ebp)
	pushl	$LC6
	pushl	%esi
	pushl	$144
	pushl	8(%edi)
	call	_make_menu8
	movl	16(%ebp), %edx
	addl	$24, %esp
	movl	(%edx), %eax
	testl	%eax, %eax
	jne	L36
	movl	-16(%ebp), %edx
	movl	$0, -24(%ebp)
	movl	12(%edx), %eax
	subl	%esi, %eax
	subl	$28, %eax
L37:
	pushl	%eax
	pushl	-24(%ebp)
	pushl	4(%edi)
	call	_sheet_slide
	movl	-16(%ebp), %eax
	pushl	16(%eax)
	pushl	4(%edi)
	call	_sheet_updown
	movl	-20(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%eax, 16(%edi)
	movl	$0, 12(%edi)
	movl	%edx, (%edi)
	movl	(%edx), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L36:
	movl	%eax, %edx
	leal	-20(%edi), %ebx
	imull	$140, %edx, %edx
	movl	%edx, -24(%ebp)
	imull	$26, 12(%ebx), %edx
	decl	%eax
	leal	2(%edx), %ecx
	je	L41
L38:
	movl	4(%ebx), %eax
	movl	16(%eax), %eax
	addl	%ecx, %eax
	subl	%esi, %eax
	jmp	L37
L41:
	leal	20(%edx), %ecx
	jmp	L38
L40:
	pushl	8(%ebx)
	pushl	4(%ebx)
	pushl	(%ebx)
	call	_push_menu
	movl	8(%ebx), %eax
	leal	-2(%eax), %edx
	subl	$24, %eax
	pushl	%edx
	pushl	$61
	pushl	%eax
	pushl	$2
	pushl	%ebx
	call	_sheet_refresh
	addl	$32, %esp
	jmp	L34
	.balign 2
.globl _close_menu
	.def	_close_menu;	.scl	2;	.type	32;	.endef
_close_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	12(%ebp), %ebx
	pushl	$-1
	movl	8(%ebp), %esi
	pushl	4(%ebx)
	call	_sheet_updown
	movl	4(%ebx), %eax
	movl	8(%eax), %edx
	imull	4(%eax), %edx
	addl	%edx, %edx
	pushl	%edx
	pushl	8(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	4(%ebx)
	call	_sheet_free
	addl	$24, %esp
	movl	(%ebx), %eax
	cmpl	$0, (%eax)
	je	L44
L43:
	movl	(%ebx), %eax
	movl	(%eax), %eax
	leal	-8(%ebp), %esp
	popl	%ebx
	decl	%eax
	popl	%esi
	popl	%ebp
	ret
L44:
	pushl	8(%esi)
	pushl	4(%esi)
	pushl	(%esi)
	call	_pull_menu
	movl	8(%esi), %eax
	leal	-2(%eax), %edx
	subl	$24, %eax
	pushl	%edx
	pushl	$61
	pushl	%eax
	pushl	$2
	pushl	%esi
	call	_sheet_refresh
	addl	$32, %esp
	jmp	L43
	.balign 2
.globl _select_menu
	.def	_select_menu;	.scl	2;	.type	32;	.endef
_select_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$1, %edi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %esi
	movl	16(%ebp), %ebx
	movl	12(%esi), %eax
	testl	%eax, %eax
	jne	L50
L46:
	movl	(%esi), %eax
	movl	%eax, -16(%ebp)
	cmpl	$0, (%eax)
	jne	L47
	movl	$19, %edi
L47:
	cmpl	$1, 12(%ebp)
	jle	L48
	movl	4(%esi), %ecx
	movl	4(%ecx), %eax
	subl	$2, %eax
	cmpl	%eax, 12(%ebp)
	jge	L48
	cmpl	%ebx, %edi
	jge	L48
	movl	8(%ecx), %eax
	subl	$2, %eax
	cmpl	%eax, %ebx
	jl	L51
L48:
	movl	$0, 12(%esi)
L45:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L51:
	subl	%edi, %ebx
	movl	$26, %edx
	movl	%ebx, %eax
	movl	%edx, %edi
	cltd
	idivl	%edi
	leal	1(%eax), %eax
	movl	%eax, 12(%esi)
	pushl	$1
	pushl	%eax
	movl	-16(%ebp), %eax
	pushl	(%eax)
	pushl	%ecx
	call	_change_mtitle8
	addl	$16, %esp
	jmp	L45
L50:
	pushl	$0
	pushl	%eax
	movl	(%esi), %eax
	pushl	(%eax)
	pushl	4(%esi)
	call	_change_mtitle8
	addl	$16, %esp
	jmp	L46
	.data
LC7:
	.ascii "<submenu>\0"
LC8:
	.ascii "<console>\0"
LC9:
	.ascii "<taskmgr>\0"
LC10:
	.ascii "open taskmgr\0"
	.text
	.balign 2
.globl _exec_menu
	.def	_exec_menu;	.scl	2;	.type	32;	.endef
_exec_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	8(%ebp), %ecx
	movl	4068, %eax
	movl	%eax, -16(%ebp)
	movl	16(%ecx), %edx
	movl	12(%ecx), %eax
	subl	%eax, %edx
	orl	$-1, %ecx
	testl	%eax, %eax
	je	L52
	movl	8(%ebp), %esi
	testl	%edx, %edx
	movl	(%esi), %esi
	movl	%esi, -20(%ebp)
	jle	L71
	movl	%edx, %ebx
L58:
	movl	-20(%ebp), %eax
	decl	%ebx
	movl	52(%eax), %eax
	movl	%eax, -20(%ebp)
	jne	L58
L71:
	movl	-20(%ebp), %eax
	movl	$LC7, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	je	L74
	movl	-20(%ebp), %eax
	movl	$LC8, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	je	L75
	movl	-20(%ebp), %eax
	movl	$LC9, %edi
	addl	$20, %eax
	movl	$10, %ecx
	cld
	movl	%eax, %esi
	repe
	cmpsb
	jne	L63
	pushl	$LC10
	pushl	$1
	call	_debug_msg
	pushl	12(%ebp)
	call	_open_taskmgr
	addl	$12, %esp
L60:
	orl	$-1, %ecx
L52:
	leal	-12(%ebp), %esp
	movl	%ecx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L63:
	pushl	12(%ebp)
	pushl	$0
	xorl	%ebx, %ebx
	call	_open_constask
	leal	16(%eax), %edi
	popl	%eax
	movl	-20(%ebp), %eax
	popl	%edx
	cmpb	$0, 20(%eax)
	jne	L69
L73:
	call	_io_cli
	pushl	$266
	pushl	%edi
	call	_fifo32_put
	call	_io_sti
	popl	%eax
	popl	%edx
	jmp	L60
L69:
	call	_io_cli
	movl	-20(%ebp), %edx
	movsbl	20(%ebx,%edx),%eax
	addl	$256, %eax
	incl	%ebx
	pushl	%eax
	pushl	%edi
	call	_fifo32_put
	call	_io_sti
	popl	%ecx
	movl	-20(%ebp), %ecx
	popl	%esi
	cmpb	$0, 20(%ebx,%ecx)
	jne	L69
	jmp	L73
L75:
	pushl	12(%ebp)
	pushl	-16(%ebp)
	call	_open_console
	pushl	$8
	pushl	$8
	movl	%eax, %ebx
	pushl	%eax
	call	_sheet_slide
	movl	-16(%ebp), %eax
	pushl	16(%eax)
	pushl	%ebx
	call	_sheet_updown
	pushl	%ebx
	call	_keywin_on
	addl	$32, %esp
	jmp	L60
L74:
	movl	-20(%ebp), %eax
	pushl	56(%eax)
	movl	8(%ebp), %eax
	addl	$20, %eax
	pushl	%eax
	pushl	$0
	call	_open_menu
	movl	%eax, %ecx
	jmp	L52
	.balign 2
.globl _set_menu
	.def	_set_menu;	.scl	2;	.type	32;	.endef
_set_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$16, %esp
	movl	24(%ebp), %edi
	movl	8(%ebp), %ebx
	movl	$-1, -20(%ebp)
	movl	$0, -24(%ebp)
	movl	$0, -28(%ebp)
	movl	$0, -16(%ebp)
L93:
	testl	%edi, %edi
	je	L81
	pushl	%edi
	leal	4(%ebx), %eax
	pushl	%eax
	call	_strcmp
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	jne	L83
	movl	%ebx, -24(%ebp)
L83:
	cmpb	$0, 4(%ebx)
	je	L95
	incl	-16(%ebp)
	addl	$60, %ebx
	addl	$60, %esi
	cmpl	$255, -16(%ebp)
	jle	L93
L78:
	movl	-20(%ebp), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L95:
	testl	%edi, %edi
	je	L89
	cmpl	$0, -24(%ebp)
	je	L78
L89:
	cmpl	$0, 28(%ebp)
	je	L87
	cmpl	$0, -28(%ebp)
	je	L78
L87:
	testl	%edi, %edi
	je	L90
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	addl	%esi, %eax
	movl	%eax, 56(%edx)
L91:
	movl	12(%ebp), %eax
	movl	%eax, (%ebx)
	leal	4(%ebx), %eax
	pushl	16(%ebp)
	pushl	%eax
	call	_strcpy
	leal	20(%ebx), %eax
	pushl	20(%ebp)
	pushl	%eax
	call	_strcpy
	addl	$16, %esp
	movl	-16(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L78
L90:
	cmpl	$0, 28(%ebp)
	je	L91
	movl	8(%ebp), %eax
	movl	-28(%ebp), %edx
	addl	%esi, %eax
	movl	%eax, 52(%edx)
	jmp	L91
L81:
	cmpl	$0, 28(%ebp)
	je	L83
	pushl	28(%ebp)
	leal	4(%ebx), %eax
	pushl	%eax
	call	_strcmp
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	jne	L83
	movl	%ebx, -28(%ebp)
	jmp	L83
	.data
LC11:
	.ascii "taskmgr\0"
LC12:
	.ascii "explorer.hrb\0"
LC13:
	.ascii "explorer\0"
LC14:
	.ascii "programs+\0"
LC15:
	.ascii "walk\0"
	.text
	.balign 2
.globl _init_menu
	.def	_init_menu;	.scl	2;	.type	32;	.endef
_init_menu:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	pushl	$16384
	movl	8(%ebp), %esi
	pushl	$3932160
	movl	12(%ebp), %ebx
	call	_memman_alloc_4k
	movl	$255, %ecx
	movl	%eax, (%ebx)
	popl	%eax
	popl	%edx
	xorl	%edx, %edx
L101:
	movl	(%ebx), %eax
	movb	$0, 4(%eax,%edx)
	movl	$0, (%eax,%edx)
	movl	(%ebx), %eax
	movb	$0, 20(%eax,%edx)
	movl	(%ebx), %eax
	movl	$0, 52(%eax,%edx)
	movl	(%ebx), %eax
	movl	$0, 56(%eax,%edx)
	addl	$60, %edx
	decl	%ecx
	jns	L101
	xorl	%eax, %eax
	movl	$7, %ecx
L106:
	movl	$0, (%esi,%eax)
	movl	$0, 4(%esi,%eax)
	movl	$0, 8(%esi,%eax)
	movl	$0, 12(%esi,%eax)
	movl	$0, 16(%esi,%eax)
	addl	$20, %eax
	decl	%ecx
	jns	L106
	pushl	$0
	pushl	$0
	pushl	$LC9
	pushl	$LC11
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	pushl	$LC11
	pushl	$0
	pushl	$LC8
	pushl	$LC0
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	addl	$48, %esp
	pushl	$LC0
	pushl	$0
	pushl	$LC12
	pushl	$LC13
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	pushl	$LC13
	pushl	$0
	pushl	$LC7
	pushl	$LC14
	pushl	$0
	pushl	(%ebx)
	call	_set_menu
	addl	$48, %esp
	pushl	$0
	pushl	$LC14
	pushl	$LC15
	pushl	$LC15
	pushl	$1
	pushl	(%ebx)
	call	_set_menu
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _reset_back
	.def	_reset_back;	.scl	2;	.type	32;	.endef
_reset_back:
	pushl	%ebp
	movl	%esp, %ebp
	popl	%ebp
	ret
	.balign 2
.globl _reset_key_win
	.def	_reset_key_win;	.scl	2;	.type	32;	.endef
_reset_key_win:
	pushl	%ebp
	movl	%esp, %ebp
	popl	%ebp
	ret
.globl _u_fat
	.data
	.balign 4
_u_fat:
	.space 4
.globl _fat_flag
	.data
_fat_flag:
	.space 1
.globl _current_path
	.data
	.balign 16
_current_path:
	.space 256
.globl _epath
	.data
	.balign 16
_epath:
	.space 1024
.globl _fdc
	.data
	.balign 4
_fdc:
	.space 4
.globl _inout
	.data
	.balign 4
_inout:
	.space 4
.globl _taskmgr
	.data
	.balign 4
_taskmgr:
	.space 4
	.def	_strcmp;	.scl	2;	.type	32;	.endef
	.def	_change_mtitle8;	.scl	2;	.type	32;	.endef
	.def	_pull_menu;	.scl	2;	.type	32;	.endef
	.def	_make_menu8;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_push_menu;	.scl	2;	.type	32;	.endef
	.def	_task_free;	.scl	2;	.type	32;	.endef
	.def	_taskmgr_task;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_dbg_putstr0;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_strcpy;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_io_loop;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
