[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_out8
	EXTERN	_io_in8
[FILE "rtc.c"]
[SECTION .text]
	GLOBAL	_init_rtc
_init_rtc:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
[SECTION .data]
_adr.0:
	DB	50
	DB	8
	DB	7
	DB	4
	DB	2
	DB	0
	DB	9
_max.1:
	DB	-103
	DB	18
	DB	49
	DB	35
	DB	89
	DB	96
	DB	-103
[SECTION .text]
	GLOBAL	_rtc_get
_rtc_get:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	OR	EAX,-1
	MOV	ESI,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],0
	CMP	ESI,5
	JLE	L4
L2:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L4:
	MOVZX	EAX,BYTE [_adr.0+ESI]
	PUSH	EAX
	XOR	EDI,EDI
	PUSH	112
	CALL	_io_out8
	PUSH	113
	CALL	_io_in8
	MOV	BL,AL
	MOVZX	EAX,BYTE [_adr.0+ESI]
	PUSH	EAX
	PUSH	112
	CALL	_io_out8
	PUSH	113
	CALL	_io_in8
	ADD	ESP,24
	MOV	CL,AL
	CMP	BL,AL
	JE	L11
L8:
	MOV	EDI,1
L7:
	TEST	ESI,ESI
	JNE	L6
	MOV	AL,CL
	MOV	EDX,ECX
	SHR	AL,4
	AND	EDX,15
	MOVZX	EAX,AL
	IMUL	EAX,EAX,10
	ADD	EAX,EDX
	MOV	ESI,6
	IMUL	EAX,EAX,100
	INC	EDI
	MOV	DWORD [-16+EBP],EAX
L6:
	TEST	EDI,EDI
	JNE	L4
	MOV	AL,CL
	MOV	EDX,ECX
	SHR	AL,4
	AND	EDX,15
	MOVZX	EAX,AL
	IMUL	EAX,EAX,10
	ADD	EAX,EDX
	ADD	EAX,DWORD [-16+EBP]
	JMP	L2
L11:
	AND	EAX,15
	CMP	AL,9
	JA	L8
	CMP	BYTE [_max.1+ESI],CL
	JAE	L7
	JMP	L8
