[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_table_rgb.0
	EXTERN	_io_load_eflags
	EXTERN	_io_cli
	EXTERN	_io_out8
	EXTERN	_io_store_eflags
	EXTERN	_u_fat
	EXTERN	_task_now
	EXTERN	_sprintf
	EXTERN	_out_log
	EXTERN	_hankaku
	EXTERN	_file_search2
	EXTERN	_memman_alloc_4k
	EXTERN	_file_loadfile2
	EXTERN	_info_JPEG
	EXTERN	_decode0_JPEG
	EXTERN	_memman_free_4k
[FILE "graphic.c"]
[SECTION .data]
_table_rgb.0:
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-58
	DB	-58
	DB	-58
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-124
[SECTION .text]
	GLOBAL	_init_palette
_init_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,692
	CMP	BYTE [1522],8
	JE	L59
	XOR	ECX,ECX
	XOR	ESI,ESI
L28:
	MOVZX	EBX,BYTE [_table_rgb.0+ESI]
	MOVZX	EDI,BYTE [_table_rgb.0+1+ESI]
	MOVZX	EAX,BYTE [_table_rgb.0+2+ESI]
	SAL	EBX,8
	MOV	DWORD [-672+EBP],EAX
	LEA	EDX,DWORD [0+EDI*8]
	MOV	EAX,EBX
	AND	DX,2016
	ADD	ESI,3
	AND	AX,-2048
	OR	EAX,EDX
	MOV	EDX,DWORD [-672+EBP]
	SHR	EDX,3
	OR	EAX,EDX
	MOV	WORD [_table_8_565+ECX+ECX*1],AX
	INC	ECX
	CMP	ECX,15
	JLE	L28
	MOV	DWORD [-672+EBP],0
	MOV	DWORD [-684+EBP],0
	MOV	DWORD [-688+EBP],0
L43:
	XOR	EDI,EDI
	MOV	DWORD [-676+EBP],0
	MOV	DWORD [-680+EBP],0
L42:
	XOR	EBX,EBX
	XOR	ESI,ESI
L41:
	MOV	EDX,ESI
	MOV	EAX,DWORD [-676+EBP]
	AND	AX,2016
	MOV	ECX,DWORD [-688+EBP]
	AND	DX,-2048
	ADD	ESI,13056
	OR	EDX,EAX
	ADD	ECX,DWORD [-680+EBP]
	MOV	EAX,DWORD [-684+EBP]
	SAR	EAX,3
	ADD	ECX,EBX
	AND	EAX,31
	INC	EBX
	OR	EDX,EAX
	CMP	EBX,5
	MOV	WORD [_table_8_565+32+ECX+ECX*1],DX
	JLE	L41
	INC	EDI
	ADD	DWORD [-676+EBP],408
	ADD	DWORD [-680+EBP],6
	CMP	EDI,5
	JLE	L42
	INC	DWORD [-672+EBP]
	ADD	DWORD [-684+EBP],51
	ADD	DWORD [-688+EBP],36
	CMP	DWORD [-672+EBP],5
	JLE	L43
L1:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L59:
	XOR	ECX,ECX
L7:
	MOV	WORD [_table_8_565+ECX+ECX*1],CX
	INC	ECX
	CMP	ECX,15
	JLE	L7
	PUSH	_table_rgb.0
	PUSH	15
	PUSH	0
	CALL	_set_palette
	ADD	ESP,12
	MOV	DWORD [-672+EBP],0
	MOV	DWORD [-696+EBP],0
	MOV	DWORD [-700+EBP],0
L22:
	XOR	EDI,EDI
	XOR	ESI,ESI
	MOV	DWORD [-692+EBP],0
L21:
	XOR	EBX,EBX
	XOR	ECX,ECX
L20:
	MOV	EDX,DWORD [-700+EBP]
	ADD	EDX,ESI
	ADD	EDX,EBX
	IMUL	EAX,EDX,3
	MOV	DWORD [-704+EBP],EDX
	MOV	BYTE [-668+EBP+EAX*1],CL
	ADD	ECX,51
	MOV	DL,BYTE [-692+EBP]
	MOV	BYTE [-667+EBP+EAX*1],DL
	MOV	DL,BYTE [-696+EBP]
	MOV	BYTE [-666+EBP+EAX*1],DL
	MOV	EDX,DWORD [-700+EBP]
	LEA	EAX,DWORD [EDX+ESI*1]
	MOV	EDX,DWORD [-704+EBP]
	LEA	EAX,DWORD [16+EBX+EAX*1]
	INC	EBX
	MOV	WORD [_table_8_565+32+EDX+EDX*1],AX
	CMP	EBX,5
	JLE	L20
	INC	EDI
	ADD	ESI,6
	ADD	DWORD [-692+EBP],51
	CMP	EDI,5
	JLE	L21
	INC	DWORD [-672+EBP]
	ADD	DWORD [-696+EBP],51
	ADD	DWORD [-700+EBP],36
	CMP	DWORD [-672+EBP],5
	JLE	L22
	LEA	EAX,DWORD [-668+EBP]
	PUSH	EAX
	PUSH	231
	PUSH	16
	CALL	_set_palette
	ADD	ESP,12
	JMP	L1
	GLOBAL	_set_palette
_set_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	CALL	_io_load_eflags
	MOV	DWORD [-16+EBP],EAX
	CALL	_io_cli
	PUSH	EBX
	PUSH	968
	CALL	_io_out8
	CMP	EBX,EDI
	POP	EAX
	POP	EDX
	JLE	L65
L67:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_io_store_eflags
L65:
	MOV	AL,BYTE [ESI]
	INC	EBX
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [1+ESI]
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [2+ESI]
	SHR	AL,2
	ADD	ESI,3
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,24
	CMP	EBX,EDI
	JLE	L65
	JMP	L67
	GLOBAL	_drawpixel8
_drawpixel8:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [24+EBP]
	MOV	EAX,DWORD [16+EBP]
	IMUL	EDX,DWORD [12+EBP]
	MOV	CX,WORD [_table_8_565+EAX+EAX*1]
	ADD	EDX,DWORD [20+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	WORD [EAX+EDX*2],CX
	POP	EBP
	RET
	GLOBAL	_DDAline
_DDAline:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [28+EBP]
	MOV	EAX,DWORD [20+EBP]
	CMP	EAX,EDX
	JG	L76
L74:
	INC	EAX
	CMP	EAX,EDX
	JLE	L74
L76:
	POP	EBP
	RET
	GLOBAL	_boxfill8
_boxfill8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EBX
	MOV	EDI,DWORD [32+EBP]
	MOV	AL,BYTE [16+EBP]
	MOV	ESI,DWORD [24+EBP]
	MOV	BYTE [-13+EBP],AL
	CMP	ESI,EDI
	JG	L89
L87:
	MOV	EBX,DWORD [20+EBP]
	CMP	EBX,DWORD [28+EBP]
	JLE	L86
L91:
	INC	ESI
	CMP	ESI,EDI
	JLE	L87
L89:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L86:
	PUSH	ESI
	PUSH	EBX
	INC	EBX
	MOVZX	EAX,BYTE [-13+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_drawpixel8
	ADD	ESP,20
	CMP	EBX,DWORD [28+EBP]
	JLE	L86
	JMP	L91
[SECTION .data]
_logo.1:
	DB	"..............................****....***.*."
	DB	".............................**00**..**0**.0"
	DB	"............................**00.**0.**0.*0."
	DB	"............................**0..**0.**0..0."
	DB	"...........................**00..**0..**...."
	DB	"...........................**0..**00..***..."
	DB	"...........................**0..**0.*..**0.."
	DB	"...........................**0.**00**0.**0.."
	DB	"............................****00.*0***00.."
	DB	".............................0000...0.000..."
	DB	"............................................"
	DB	"............................................"
	DB	"............................................"
[SECTION .text]
	GLOBAL	_init_screen8
_init_screen8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,16
	MOV	EAX,DWORD [16+EBP]
	MOV	EBX,DWORD [12+EBP]
	SUB	EAX,29
	DEC	EBX
	PUSH	EAX
	PUSH	EBX
	PUSH	0
	PUSH	0
	PUSH	14
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [_u_fat]
	CALL	_read_picture
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,44
	SUB	EAX,28
	PUSH	EAX
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,27
	PUSH	EAX
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	DEC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EBX
	SUB	EAX,26
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EDI,DWORD [16+EBP]
	SUB	EDI,24
	PUSH	EDI
	PUSH	59
	PUSH	EDI
	PUSH	3
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,4
	MOV	DWORD [-20+EBP],EAX
	PUSH	EAX
	PUSH	2
	PUSH	EDI
	PUSH	2
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-20+EBP]
	PUSH	59
	PUSH	DWORD [-20+EBP]
	PUSH	3
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,5
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	59
	SUB	EAX,23
	PUSH	EAX
	MOV	DWORD [-24+EBP],EAX
	PUSH	59
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,3
	PUSH	EAX
	MOV	DWORD [-28+EBP],EAX
	PUSH	59
	PUSH	EAX
	PUSH	2
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-28+EBP]
	PUSH	60
	PUSH	EDI
	PUSH	60
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [12+EBP]
	PUSH	EDI
	SUB	ESI,4
	SUB	EBX,47
	PUSH	ESI
	PUSH	EDI
	PUSH	EBX
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-20+EBP]
	PUSH	EBX
	PUSH	DWORD [-24+EBP]
	PUSH	EBX
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-28+EBP]
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	DWORD [-28+EBP]
	PUSH	EBX
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [12+EBP]
	ADD	ESP,56
	SUB	EAX,3
	PUSH	DWORD [-28+EBP]
	PUSH	EAX
	PUSH	EDI
	PUSH	EAX
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ECX,DWORD [16+EBP]
	SUB	ECX,18
	ADD	ESP,28
	IMUL	ECX,DWORD [12+EBP]
	MOV	DWORD [-16+EBP],0
L107:
	XOR	EBX,EBX
L106:
	MOV	DL,BYTE [_logo.1+EBX+ESI*1]
	CMP	DL,42
	JE	L112
	CMP	DL,48
	JE	L113
	MOV	DL,-1
L102:
	CMP	DL,-1
	JE	L99
	MOVZX	EDX,DL
	LEA	EAX,DWORD [EBX+ECX*1]
	MOV	EDI,DWORD [8+EBP]
	MOV	DX,WORD [_table_8_565+EDX+EDX*1]
	MOV	WORD [20+EDI+EAX*2],DX
L99:
	INC	EBX
	CMP	EBX,43
	JLE	L106
	INC	DWORD [-16+EBP]
	ADD	ESI,44
	ADD	ECX,DWORD [12+EBP]
	CMP	DWORD [-16+EBP],12
	JLE	L107
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L113:
	MOV	DL,7
	JMP	L102
L112:
	MOV	DL,4
	JMP	L102
	GLOBAL	_putfont8
_putfont8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,24
	MOV	AL,BYTE [24+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	BYTE [-13+EBP],AL
	MOV	BYTE [-14+EBP],DL
	MOV	DWORD [-20+EBP],0
L135:
	MOV	EAX,DWORD [32+EBP]
	MOV	EDX,DWORD [-20+EBP]
	MOV	AL,BYTE [EDX+EAX*1]
	MOV	BYTE [-25+EBP],AL
	MOV	BYTE [-33+EBP],-128
	MOV	DWORD [-32+EBP],0
L134:
	MOVSX	ECX,BYTE [-14+EBP]
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDX,DWORD [-32+EBP]
	IMUL	EAX,ECX
	ADD	EAX,DWORD [20+EBP]
	MOV	EBX,ECX
	IMUL	EDX,ECX
	IMUL	EAX,DWORD [12+EBP]
	ADD	EAX,EDX
	MOV	EDX,DWORD [8+EBP]
	ADD	EAX,DWORD [16+EBP]
	LEA	EAX,DWORD [EDX+EAX*2]
	MOV	DWORD [-24+EBP],EAX
	MOVSX	EDX,BYTE [-25+EBP]
	MOVZX	EAX,BYTE [-33+EBP]
	TEST	EDX,EAX
	JE	L123
	XOR	ESI,ESI
	CMP	ESI,ECX
	JGE	L123
	XOR	EDI,EDI
L133:
	XOR	ECX,ECX
	CMP	ECX,EBX
	JGE	L142
	MOV	EAX,DWORD [-24+EBP]
	LEA	EDX,DWORD [EAX+EDI*2]
L132:
	MOVZX	EAX,BYTE [-13+EBP]
	INC	ECX
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDX],AX
	ADD	EDX,2
	CMP	ECX,EBX
	JL	L132
L142:
	INC	ESI
	ADD	EDI,DWORD [12+EBP]
	CMP	ESI,EBX
	JL	L133
L123:
	INC	DWORD [-32+EBP]
	SHR	BYTE [-33+EBP],1
	CMP	DWORD [-32+EBP],7
	JLE	L134
	INC	DWORD [-20+EBP]
	CMP	DWORD [-20+EBP],15
	JLE	L135
	ADD	ESP,24
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC0:
	DB	"vram:%p",0x00
LC1:
	DB	"%s x:%d",0x00
LC2:
	DB	"%s y:%d",0x00
LC3:
	DB	"%s c:%d",0x00
LC4:
	DB	"%s scl:%d",0x00
LC5:
	DB	"%s s:[%s]",0x00
LC6:
	DB	"1",0x00
LC7:
	DB	"%s mode:%s",0x00
[SECTION .text]
	GLOBAL	_putfonts8_asc
_putfonts8_asc:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EDI,DWORD [-1036+EBP]
	SUB	ESP,1036
	LEA	EBX,DWORD [-1036+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	AL,BYTE [24+EBP]
	MOV	BYTE [-1038+EBP],DL
	MOV	BYTE [-1037+EBP],AL
	CALL	_task_now
	MOV	ECX,256
	CLD
	MOV	DWORD [-1044+EBP],EAX
	MOV	EAX,DWORD [4072]
	MOV	DWORD [-1048+EBP],EAX
	XOR	EAX,EAX
	REP
	STOSD
	PUSH	DWORD [8+EBP]
	PUSH	LC0
	PUSH	EBX
	CALL	_sprintf
	PUSH	DWORD [16+EBP]
	PUSH	EBX
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	DWORD [20+EBP]
	PUSH	EBX
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,44
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	EBX
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	MOVSX	ESI,BYTE [-1038+EBP]
	PUSH	ESI
	PUSH	EBX
	PUSH	LC4
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,32
	PUSH	DWORD [32+EBP]
	PUSH	EBX
	PUSH	LC5
	PUSH	EBX
	CALL	_sprintf
	MOV	EDX,DWORD [-1044+EBP]
	ADD	ESP,16
	CMP	BYTE [188+EDX],0
	JNE	L144
	MOV	EAX,DWORD [32+EBP]
	CMP	BYTE [EAX],0
	JNE	L149
L144:
	MOV	EAX,DWORD [-1044+EBP]
	CMP	BYTE [188+EAX],1
	JE	L180
L150:
	MOV	EDX,DWORD [-1044+EBP]
	CMP	BYTE [188+EDX],2
	JE	L181
L143:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L181:
	MOV	EAX,DWORD [32+EBP]
	CMP	BYTE [EAX],0
	JE	L143
L176:
	MOV	EDX,DWORD [-1044+EBP]
	MOV	AL,BYTE [189+EDX]
	TEST	AL,AL
	JNE	L172
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,125
	JA	L173
	MOV	EAX,DWORD [-1044+EBP]
	MOV	BYTE [189+EAX],DL
L175:
	MOVSX	EAX,BYTE [-1038+EBP]
	MOV	EDX,DWORD [16+EBP]
	INC	DWORD [32+EBP]
	LEA	EDX,DWORD [EDX+EAX*8]
	MOV	EAX,DWORD [32+EBP]
	MOV	DWORD [16+EBP],EDX
	CMP	BYTE [EAX],0
	JNE	L176
	JMP	L143
L173:
	MOVZX	EAX,DL
	SAL	EAX,4
	ADD	EAX,DWORD [-1048+EBP]
	PUSH	EAX
	MOVSX	EAX,BYTE [-1038+EBP]
	PUSH	EAX
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,28
	JMP	L175
L172:
	MOVZX	EBX,AL
	IMUL	EBX,EBX,94
	MOV	EDX,DWORD [32+EBP]
	MOVZX	EAX,BYTE [EDX]
	MOV	EDX,DWORD [-1044+EBP]
	LEA	EBX,DWORD [-15295+EAX+EBX*1]
	MOV	BYTE [189+EDX],0
	SAL	EBX,5
	ADD	EBX,DWORD [-1048+EBP]
	MOVSX	EDI,BYTE [-1038+EBP]
	LEA	EAX,DWORD [4096+EBX]
	ADD	EBX,4112
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EDI
	SUB	EAX,8
	MOVZX	ESI,BYTE [-1037+EBP]
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,56
	JMP	L175
L180:
	PUSH	LC6
	LEA	EBX,DWORD [-1036+EBP]
	PUSH	EBX
	PUSH	LC7
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	CALL	_out_log
	MOV	EDX,DWORD [32+EBP]
	ADD	ESP,20
	CMP	BYTE [EDX],0
	JE	L150
L166:
	MOV	EAX,DWORD [-1044+EBP]
	MOV	DL,BYTE [189+EAX]
	TEST	DL,DL
	JNE	L155
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,30
	JBE	L157
	LEA	EAX,DWORD [32+EDX]
	CMP	AL,28
	JA	L156
L157:
	MOV	EAX,DWORD [-1044+EBP]
	MOV	BYTE [189+EAX],DL
L159:
	MOVSX	EAX,BYTE [-1038+EBP]
	MOV	EDX,DWORD [16+EBP]
	INC	DWORD [32+EBP]
	LEA	EDX,DWORD [EDX+EAX*8]
	MOV	EAX,DWORD [32+EBP]
	MOV	DWORD [16+EBP],EDX
	CMP	BYTE [EAX],0
	JNE	L166
	JMP	L150
L156:
	MOVZX	EAX,DL
	SAL	EAX,4
	ADD	EAX,DWORD [-1048+EBP]
	PUSH	EAX
	MOVSX	EAX,BYTE [-1038+EBP]
	PUSH	EAX
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,28
	JMP	L159
L155:
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,30
	JA	L160
	MOVZX	EAX,DL
	LEA	ECX,DWORD [-258+EAX+EAX*1]
L161:
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [-64+EDX]
	CMP	AL,62
	JA	L162
	MOVZX	EAX,DL
	SUB	EAX,64
L163:
	IMUL	EBX,ECX,94
	MOV	EDX,DWORD [-1044+EBP]
	ADD	EBX,EAX
	SAL	EBX,5
	MOV	BYTE [189+EDX],0
	ADD	EBX,DWORD [-1048+EBP]
	MOVSX	EDI,BYTE [-1038+EBP]
	LEA	EAX,DWORD [4096+EBX]
	ADD	EBX,4112
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EDI
	SUB	EAX,8
	MOVZX	ESI,BYTE [-1037+EBP]
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,56
	JMP	L159
L162:
	LEA	EAX,DWORD [-128+EDX]
	CMP	AL,30
	JA	L164
	MOVZX	EAX,DL
	SUB	EAX,65
	JMP	L163
L164:
	MOVZX	EAX,DL
	SUB	EAX,159
	INC	ECX
	JMP	L163
L160:
	MOVZX	EAX,DL
	LEA	ECX,DWORD [-386+EAX+EAX*1]
	JMP	L161
L149:
	MOV	EDX,DWORD [32+EBP]
	MOVZX	EAX,BYTE [EDX]
	SAL	EAX,4
	ADD	EAX,_hankaku
	PUSH	EAX
	PUSH	ESI
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	INC	DWORD [32+EBP]
	MOV	EAX,DWORD [16+EBP]
	MOV	EDX,DWORD [32+EBP]
	ADD	ESP,28
	LEA	EAX,DWORD [EAX+ESI*8]
	MOV	DWORD [16+EBP],EAX
	CMP	BYTE [EDX],0
	JNE	L149
	JMP	L144
[SECTION .data]
_cursor.2:
	DB	"*..............."
	DB	"**.............."
	DB	"*O*............."
	DB	"*OO*............"
	DB	"*OOO*..........."
	DB	"*OOOO*.........."
	DB	"*OOOOO*........."
	DB	"*OOOOOO*........"
	DB	"*OOOOOOO*......."
	DB	"*OOOOO****......"
	DB	"*OO*OO*........."
	DB	"*O**OO*........."
	DB	"**..*OO*........"
	DB	"*...*OO*........"
	DB	".....*OO*......."
	DB	".....***........"
[SECTION .text]
	GLOBAL	_init_mouse_cursor81
_init_mouse_cursor81:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	ESI,ESI
	PUSH	EDI
	XOR	EBX,EBX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L195:
	XOR	ECX,ECX
L194:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.2+EDX],42
	JE	L200
L191:
	CMP	BYTE [_cursor.2+EDX],79
	JE	L201
L192:
	CMP	BYTE [_cursor.2+EDX],46
	JE	L202
L189:
	INC	ECX
	CMP	ECX,15
	JLE	L194
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L195
	POP	ESI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L202:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L189
L201:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L192
L200:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L191
[SECTION .data]
_cursor.3:
	DB	".**............."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"*OO***.**.**.**."
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	".**************."
[SECTION .text]
	GLOBAL	_init_mouse_cursor8
_init_mouse_cursor8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L216:
	XOR	ECX,ECX
L215:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.3+EDX],42
	JE	L221
L212:
	CMP	BYTE [_cursor.3+EDX],79
	JE	L222
L213:
	CMP	BYTE [_cursor.3+EDX],46
	JE	L223
L210:
	INC	ECX
	CMP	ECX,15
	JLE	L215
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L216
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L223:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L210
L222:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L213
L221:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L212
[SECTION .data]
_cursor.4:
	DB	"...*........*..."
	DB	"..**........**.."
	DB	".*O**********O*."
	DB	"*OOOOOOOOOOOOOO*"
	DB	".*O**********O*."
	DB	"..**........**.."
	DB	"...*........*..."
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
[SECTION .text]
	GLOBAL	_set_mouse_cursorl8
_set_mouse_cursorl8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L237:
	XOR	ECX,ECX
L236:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.4+EDX],42
	JE	L242
L233:
	CMP	BYTE [_cursor.4+EDX],79
	JE	L243
L234:
	CMP	BYTE [_cursor.4+EDX],46
	JE	L244
L231:
	INC	ECX
	CMP	ECX,15
	JLE	L236
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L237
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L244:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L231
L243:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L234
L242:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L233
[SECTION .data]
_cursor.5:
	DB	"...*............"
	DB	"..*O*..........."
	DB	".*OOO*.........."
	DB	"***O***........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"***O***........."
	DB	".*OOO*.........."
	DB	"..*O*..........."
	DB	"...*............"
[SECTION .text]
	GLOBAL	_set_mouse_cursorh8
_set_mouse_cursorh8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L258:
	XOR	ECX,ECX
L257:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.5+EDX],42
	JE	L263
L254:
	CMP	BYTE [_cursor.5+EDX],79
	JE	L264
L255:
	CMP	BYTE [_cursor.5+EDX],46
	JE	L265
L252:
	INC	ECX
	CMP	ECX,15
	JLE	L257
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L258
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L265:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L252
L264:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L255
L263:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L254
[SECTION .data]
_cursor.6:
	DB	"*****..........."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"***O*..........."
	DB	"*..*O*.........."
	DB	"....*O*........."
	DB	".....*O*........"
	DB	"......*O*......."
	DB	".......*O*......"
	DB	"........*O*....."
	DB	".........*O*...."
	DB	"..........*O*..*"
	DB	"...........*O***"
	DB	"............*OO*"
	DB	"............*OO*"
	DB	"...........*****"
[SECTION .text]
	GLOBAL	_set_mouse_cursorlt8
_set_mouse_cursorlt8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	ECX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L279:
	XOR	ECX,ECX
L278:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.6+EDX],42
	JE	L284
L275:
	CMP	BYTE [_cursor.6+EDX],79
	JE	L285
L276:
	CMP	BYTE [_cursor.6+EDX],46
	JE	L286
L273:
	INC	ECX
	CMP	ECX,15
	JLE	L278
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L279
	POP	EDX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L286:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L273
L285:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L276
L284:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L275
[SECTION .data]
_cursor.7:
	DB	"...........*****"
	DB	"............*OO*"
	DB	"............*OO*"
	DB	"...........*O***"
	DB	"..........*O*..*"
	DB	".........*O*...."
	DB	"........*O*....."
	DB	".......*O*......"
	DB	"......*O*......."
	DB	".....*O*........"
	DB	"....*O*........."
	DB	"*..*O*.........."
	DB	"***O*..........."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"*****..........."
[SECTION .text]
	GLOBAL	_set_mouse_cursorrb8
_set_mouse_cursorrb8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	ESI
	XOR	ESI,ESI
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L300:
	XOR	ECX,ECX
L299:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.7+EDX],42
	JE	L305
L296:
	CMP	BYTE [_cursor.7+EDX],79
	JE	L306
L297:
	CMP	BYTE [_cursor.7+EDX],46
	JE	L307
L294:
	INC	ECX
	CMP	ECX,15
	JLE	L299
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L300
	POP	EBX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L307:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L294
L306:
	MOV	AX,WORD [_table_8_565+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L297
L305:
	MOV	AX,WORD [_table_8_565]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L296
	GLOBAL	_putblock8_8
_putblock8_8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	SUB	ESP,12
	CMP	ESI,DWORD [20+EBP]
	JGE	L320
	XOR	EDI,EDI
L318:
	XOR	EBX,EBX
	CMP	EBX,DWORD [16+EBP]
	JGE	L322
	MOV	EAX,DWORD [32+EBP]
	LEA	EAX,DWORD [EAX+EDI*2]
	MOV	DWORD [-24+EBP],EAX
L317:
	MOV	EDX,DWORD [28+EBP]
	MOV	EAX,DWORD [24+EBP]
	ADD	EDX,ESI
	ADD	EAX,EBX
	IMUL	EDX,DWORD [12+EBP]
	ADD	EDX,EAX
	INC	EBX
	MOV	DWORD [-20+EBP],EDX
	MOV	EDX,DWORD [-24+EBP]
	MOV	ECX,DWORD [-20+EBP]
	MOVSX	EAX,WORD [EDX]
	MOV	EDX,DWORD [8+EBP]
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	ADD	DWORD [-24+EBP],2
	MOV	WORD [EDX+ECX*2],AX
	CMP	EBX,DWORD [16+EBP]
	JL	L317
L322:
	INC	ESI
	ADD	EDI,DWORD [36+EBP]
	CMP	ESI,DWORD [20+EBP]
	JL	L318
L320:
	ADD	ESP,12
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC8:
	DB	"/rapuwp.jpg",0x00
[SECTION .text]
	GLOBAL	_read_picture
_read_picture:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,56
	MOV	ESI,DWORD [8+EBP]
	PUSH	ESI
	PUSH	224
	PUSH	1058304
	PUSH	LC8
	CALL	_file_search2
	ADD	ESP,16
	MOV	EBX,EAX
	TEST	EAX,EAX
	JE	L325
	TEST	BYTE [11+EAX],24
	JE	L324
L325:
	OR	EAX,-1
L323:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L324:
	MOV	EAX,DWORD [28+EAX]
	XOR	EDI,EDI
	PUSH	EAX
	MOV	DWORD [-32+EBP],EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	LEA	EAX,DWORD [-32+EBP]
	PUSH	ESI
	PUSH	EAX
	MOVZX	EAX,WORD [26+EBX]
	PUSH	EAX
	CALL	_file_loadfile2
	PUSH	65536
	PUSH	3932160
	MOV	DWORD [-36+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	DWORD [-36+EBP]
	PUSH	DWORD [-32+EBP]
	MOV	DWORD [-44+EBP],EAX
	LEA	EAX,DWORD [-28+EBP]
	PUSH	EAX
	PUSH	DWORD [-44+EBP]
	CALL	_info_JPEG
	MOV	EAX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [-20+EBP]
	SAL	EAX,2
	ADD	ESP,44
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	0
	PUSH	EAX
	MOV	DWORD [-40+EBP],EAX
	PUSH	4
	PUSH	DWORD [-36+EBP]
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-44+EBP]
	CALL	_decode0_JPEG
	ADD	ESP,32
	MOV	EAX,DWORD [16+EBP]
	MOV	ECX,2
	SUB	EAX,DWORD [-20+EBP]
	CDQ
	MOV	DWORD [-48+EBP],EAX
	IDIV	ECX
	MOV	DWORD [-52+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	SUB	DWORD [20+EBP],EAX
	MOV	EAX,DWORD [20+EBP]
	CDQ
	IDIV	ECX
	CMP	EDI,DWORD [-16+EBP]
	MOV	DWORD [-60+EBP],EAX
	JGE	L337
L335:
	XOR	ESI,ESI
	MOV	EAX,DWORD [-20+EBP]
	CMP	ESI,EAX
	JL	L334
L339:
	INC	EDI
	CMP	EDI,DWORD [-16+EBP]
	JL	L335
L337:
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-36+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	MOV	EAX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [-20+EBP]
	SAL	EAX,2
	PUSH	EAX
	PUSH	DWORD [-40+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	65536
	PUSH	DWORD [-44+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	XOR	EAX,EAX
	JMP	L323
L334:
	IMUL	EAX,EDI
	MOV	EBX,DWORD [-60+EBP]
	ADD	EAX,ESI
	ADD	EBX,EDI
	MOV	DWORD [-68+EBP],EAX
	IMUL	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [-52+EBP]
	MOV	EDX,DWORD [-68+EBP]
	ADD	EAX,ESI
	MOV	ECX,DWORD [-40+EBP]
	ADD	EBX,EAX
	MOVSX	EAX,BYTE [1522]
	PUSH	EAX
	PUSH	EDI
	PUSH	ESI
	INC	ESI
	MOVZX	EAX,BYTE [ECX+EDX*4]
	PUSH	EAX
	MOVZX	EAX,BYTE [1+ECX+EDX*4]
	PUSH	EAX
	MOVZX	EAX,BYTE [2+ECX+EDX*4]
	PUSH	EAX
	CALL	_rgb2pal
	ADD	ESP,24
	MOV	EDX,DWORD [12+EBP]
	MOV	WORD [EDX+EBX*2],AX
	MOV	EAX,DWORD [-20+EBP]
	CMP	ESI,EAX
	JL	L334
	JMP	L339
[SECTION .data]
	ALIGNB	4
_table.8:
	DD	3
	DD	1
	DD	0
	DD	2
[SECTION .text]
	GLOBAL	_rgb2pal
_rgb2pal:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	ECX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EDX,DWORD [20+EBP]
	MOV	EAX,DWORD [24+EBP]
	CMP	DWORD [28+EBP],8
	JE	L343
	SAL	ECX,8
	LEA	EAX,DWORD [0+EDI*8]
	AND	AX,2016
	MOV	EDX,ECX
	AND	DX,-2048
	SAR	EBX,3
	OR	EDX,EAX
	OR	EDX,EBX
	MOVZX	EAX,DX
L340:
	ADD	ESP,20
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L343:
	IMUL	ECX,ECX,21
	AND	EDX,1
	AND	EAX,1
	MOV	ESI,256
	LEA	EAX,DWORD [EDX+EAX*2]
	IMUL	EDI,EDI,21
	MOV	EAX,DWORD [_table.8+EAX*4]
	MOV	DWORD [-32+EBP],EAX
	MOV	EAX,ECX
	CDQ
	IDIV	ESI
	MOV	ECX,EAX
	MOV	EAX,EDI
	CDQ
	IDIV	ESI
	IMUL	EBX,EBX,21
	MOV	EDI,EAX
	ADD	ECX,DWORD [-32+EBP]
	MOV	EAX,EBX
	CDQ
	IDIV	ESI
	MOV	EBX,EAX
	MOV	ESI,4
	MOV	EAX,ECX
	ADD	EDI,DWORD [-32+EBP]
	ADD	EBX,DWORD [-32+EBP]
	CDQ
	IDIV	ESI
	MOV	ECX,EAX
	MOV	EAX,EDI
	CDQ
	IDIV	ESI
	MOV	EDI,EAX
	MOV	EAX,EBX
	CDQ
	IDIV	ESI
	MOV	EBX,EAX
	IMUL	EAX,EDI,6
	IMUL	EDX,EBX,36
	LEA	EAX,DWORD [EAX+ECX*1]
	LEA	EAX,DWORD [16+EDX+EAX*1]
	MOVZX	EAX,AX
	JMP	L340
	GLOBAL	_table_8_565
[SECTION .data]
	ALIGNB	16
_table_8_565:
	RESB	512
