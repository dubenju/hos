[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_table_rgb.0
	EXTERN	_io_load_eflags
	EXTERN	_io_cli
	EXTERN	_io_out8
	EXTERN	_io_store_eflags
	EXTERN	_task_now
	EXTERN	_sprintf
	EXTERN	_out_log
	EXTERN	_hankaku
	EXTERN	_file_search2
	EXTERN	_memman_alloc_4k
	EXTERN	_file_loadfile2
	EXTERN	_info_JPEG
	EXTERN	_decode0_JPEG
	EXTERN	_memman_free_4k
[FILE "graphic.c"]
[SECTION .data]
_table_rgb.0:
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-58
	DB	-58
	DB	-58
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-124
[SECTION .text]
	GLOBAL	_init_palette
_init_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,684
	MOV	AL,BYTE [1522]
	CMP	AL,8
	JE	L82
	CMP	AL,16
	JE	L83
	CMP	AL,24
	JE	L84
L1:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L84:
	XOR	EBX,EBX
	MOV	DWORD [-672+EBP],0
L56:
	XOR	EDI,EDI
	MOV	DWORD [-676+EBP],0
L55:
	XOR	ESI,ESI
	MOV	ECX,31
L54:
	MOV	EAX,ESI
	MOV	EDX,DWORD [-676+EBP]
	AND	DX,2016
	ADD	ESI,2048
	AND	AX,-2048
	OR	EAX,EDX
	MOV	EDX,DWORD [-672+EBP]
	AND	EDX,31
	OR	EAX,EDX
	MOV	WORD [_table_16_65536+EBX+EBX*1],AX
	INC	EBX
	DEC	ECX
	JNS	L54
	INC	EDI
	ADD	DWORD [-676+EBP],16
	CMP	EDI,63
	JLE	L55
	INC	DWORD [-672+EBP]
	CMP	DWORD [-672+EBP],31
	JLE	L56
	XOR	EBX,EBX
	XOR	ECX,ECX
L61:
	MOVZX	EAX,BYTE [_table_rgb.0+1+ECX]
	MOVZX	EDX,BYTE [_table_rgb.0+ECX]
	SAL	EAX,4
	AND	AX,2016
	SAL	EDX,11
	OR	EDX,EAX
	MOV	AL,BYTE [_table_rgb.0+2+ECX]
	AND	EAX,31
	ADD	ECX,3
	MOVZX	AX,AL
	OR	EDX,EAX
	MOV	WORD [_table_16_65536+EBX+EBX*1],DX
	INC	EBX
	CMP	EBX,15
	JLE	L61
	JMP	L1
L83:
	XOR	EBX,EBX
	MOV	DWORD [-672+EBP],0
L34:
	XOR	EDI,EDI
	MOV	DWORD [-680+EBP],0
L33:
	XOR	ESI,ESI
	MOV	ECX,31
L32:
	MOV	EAX,ESI
	MOV	EDX,DWORD [-680+EBP]
	AND	DX,2016
	ADD	ESI,2048
	AND	AX,-2048
	OR	EAX,EDX
	MOV	EDX,DWORD [-672+EBP]
	AND	EDX,31
	OR	EAX,EDX
	MOV	WORD [_table_16_65536+EBX+EBX*1],AX
	INC	EBX
	DEC	ECX
	JNS	L32
	INC	EDI
	ADD	DWORD [-680+EBP],16
	CMP	EDI,63
	JLE	L33
	INC	DWORD [-672+EBP]
	CMP	DWORD [-672+EBP],31
	JLE	L34
	XOR	EBX,EBX
	XOR	ECX,ECX
L39:
	MOVZX	EAX,BYTE [_table_rgb.0+1+ECX]
	MOVZX	EDX,BYTE [_table_rgb.0+ECX]
	SAL	EAX,4
	AND	AX,2016
	SAL	EDX,11
	OR	EDX,EAX
	MOV	AL,BYTE [_table_rgb.0+2+ECX]
	AND	EAX,31
	ADD	ECX,3
	MOVZX	AX,AL
	OR	EDX,EAX
	MOV	WORD [_table_16_65536+EBX+EBX*1],DX
	INC	EBX
	CMP	EBX,15
	JLE	L39
	JMP	L1
L82:
	PUSH	_table_rgb.0
	PUSH	15
	PUSH	0
	CALL	_set_palette
	ADD	ESP,12
	MOV	DWORD [-672+EBP],0
	MOV	DWORD [-684+EBP],0
	MOV	DWORD [-688+EBP],0
L17:
	XOR	EDI,EDI
	XOR	ESI,ESI
	XOR	EBX,EBX
L16:
	XOR	ECX,ECX
	MOV	DWORD [-696+EBP],0
L15:
	MOV	EAX,DWORD [-688+EBP]
	MOV	DL,BYTE [-696+EBP]
	ADD	EAX,EBX
	ADD	EAX,ECX
	INC	ECX
	IMUL	EAX,EAX,3
	MOV	BYTE [-668+EBP+EAX*1],DL
	MOV	EDX,ESI
	MOV	BYTE [-667+EBP+EAX*1],DL
	MOV	DL,BYTE [-684+EBP]
	MOV	BYTE [-666+EBP+EAX*1],DL
	ADD	DWORD [-696+EBP],51
	CMP	ECX,5
	JLE	L15
	INC	EDI
	ADD	ESI,51
	ADD	EBX,6
	CMP	EDI,5
	JLE	L16
	INC	DWORD [-672+EBP]
	ADD	DWORD [-684+EBP],51
	ADD	DWORD [-688+EBP],36
	CMP	DWORD [-672+EBP],5
	JLE	L17
	LEA	EAX,DWORD [-668+EBP]
	PUSH	EAX
	PUSH	231
	PUSH	16
	CALL	_set_palette
	ADD	ESP,12
	JMP	L1
	GLOBAL	_set_palette
_set_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	CALL	_io_load_eflags
	MOV	DWORD [-16+EBP],EAX
	CALL	_io_cli
	PUSH	255
	PUSH	966
	CALL	_io_out8
	PUSH	EBX
	PUSH	968
	CALL	_io_out8
	ADD	ESP,16
	CMP	EBX,EDI
	JLE	L90
L92:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_io_store_eflags
L90:
	MOV	AL,BYTE [ESI]
	INC	EBX
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [1+ESI]
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [2+ESI]
	SHR	AL,2
	ADD	ESI,3
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,24
	CMP	EBX,EDI
	JLE	L90
	JMP	L92
	GLOBAL	_drawpixel8
_drawpixel8:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [24+EBP]
	MOV	EAX,DWORD [16+EBP]
	IMUL	EDX,DWORD [12+EBP]
	MOV	CX,WORD [_table_16_65536+EAX+EAX*1]
	ADD	EDX,DWORD [20+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	WORD [EAX+EDX*2],CX
	POP	EBP
	RET
	GLOBAL	_DDAline
_DDAline:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [28+EBP]
	MOV	EAX,DWORD [20+EBP]
	CMP	EAX,EDX
	JG	L101
L99:
	INC	EAX
	CMP	EAX,EDX
	JLE	L99
L101:
	POP	EBP
	RET
	GLOBAL	_boxfill8
_boxfill8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDX
	MOV	EDI,DWORD [32+EBP]
	MOV	AL,BYTE [16+EBP]
	MOV	ESI,DWORD [24+EBP]
	MOV	BYTE [-13+EBP],AL
	CMP	ESI,EDI
	JG	L114
L112:
	MOV	EBX,DWORD [20+EBP]
	CMP	EBX,DWORD [28+EBP]
	JLE	L111
L116:
	INC	ESI
	CMP	ESI,EDI
	JLE	L112
L114:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L111:
	PUSH	ESI
	PUSH	EBX
	INC	EBX
	MOVZX	EAX,BYTE [-13+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_drawpixel8
	ADD	ESP,20
	CMP	EBX,DWORD [28+EBP]
	JLE	L111
	JMP	L116
	GLOBAL	_boxfill8c
_boxfill8c:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ESI
	PUSH	ESI
	MOV	AL,BYTE [16+EBP]
	MOV	ECX,DWORD [24+EBP]
	MOV	EDI,DWORD [28+EBP]
	MOV	BYTE [-13+EBP],AL
	CMP	ECX,DWORD [32+EBP]
	JG	L129
	MOV	EBX,DWORD [12+EBP]
	IMUL	EBX,ECX
L127:
	MOV	EDX,DWORD [20+EBP]
	CMP	EDX,EDI
	JG	L131
	MOV	ESI,DWORD [8+EBP]
	ADD	ESI,EBX
	ADD	ESI,EDX
	MOV	DWORD [-20+EBP],ESI
L126:
	MOV	ESI,DWORD [-20+EBP]
	MOV	AL,BYTE [-13+EBP]
	INC	EDX
	MOV	BYTE [ESI],AL
	INC	ESI
	MOV	DWORD [-20+EBP],ESI
	CMP	EDX,EDI
	JLE	L126
L131:
	INC	ECX
	ADD	EBX,DWORD [12+EBP]
	CMP	ECX,DWORD [32+EBP]
	JLE	L127
L129:
	POP	ECX
	POP	EBX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
_logo.1:
	DB	"..............................****....***.*."
	DB	".............................**00**..**0**.0"
	DB	"............................**00.**0.**0.*0."
	DB	"............................**0..**0.**0..0."
	DB	"...........................**00..**0..**...."
	DB	"...........................**0..**00..***..."
	DB	"...........................**0..**0.*..**0.."
	DB	"...........................**0.**00**0.**0.."
	DB	"............................****00.*0***00.."
	DB	".............................0000...0.000..."
	DB	"............................................"
	DB	"............................................"
	DB	"............................................"
[SECTION .text]
	GLOBAL	_init_screen8
_init_screen8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,24
	MOV	EAX,DWORD [16+EBP]
	MOV	EBX,DWORD [12+EBP]
	SUB	EAX,29
	DEC	EBX
	PUSH	EAX
	PUSH	EBX
	PUSH	0
	PUSH	0
	PUSH	14
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,28
	PUSH	EAX
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,27
	PUSH	EAX
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	DEC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EBX
	SUB	EAX,26
	PUSH	EAX
	PUSH	0
	PUSH	8
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [16+EBP]
	ADD	ESP,56
	SUB	EAX,24
	MOV	DWORD [-16+EBP],EAX
	PUSH	EAX
	PUSH	59
	PUSH	EAX
	PUSH	3
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EDX,DWORD [16+EBP]
	SUB	EDX,4
	PUSH	EDX
	MOV	DWORD [-20+EBP],EDX
	PUSH	2
	PUSH	DWORD [-16+EBP]
	PUSH	2
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-20+EBP]
	PUSH	59
	PUSH	DWORD [-20+EBP]
	PUSH	3
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ESI,DWORD [16+EBP]
	MOV	EAX,DWORD [16+EBP]
	SUB	ESI,23
	SUB	EAX,5
	MOV	DWORD [-24+EBP],ESI
	PUSH	EAX
	PUSH	59
	PUSH	ESI
	PUSH	59
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ESI,DWORD [16+EBP]
	ADD	ESP,56
	SUB	ESI,3
	PUSH	ESI
	PUSH	59
	PUSH	ESI
	PUSH	2
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	ESI
	PUSH	60
	PUSH	DWORD [-16+EBP]
	PUSH	60
	PUSH	0
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EBX,DWORD [12+EBP]
	ADD	ESP,56
	MOV	EDI,DWORD [12+EBP]
	PUSH	DWORD [-16+EBP]
	SUB	EDI,4
	SUB	EBX,47
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-20+EBP]
	PUSH	EBX
	PUSH	DWORD [-24+EBP]
	PUSH	EBX
	PUSH	15
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	ESI
	PUSH	EDI
	XOR	EDI,EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [12+EBP]
	PUSH	ESI
	SUB	EAX,3
	PUSH	EAX
	PUSH	DWORD [-16+EBP]
	PUSH	EAX
	PUSH	7
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_boxfill8
	MOV	ECX,DWORD [16+EBP]
	SUB	ECX,18
	ADD	ESP,56
	IMUL	ECX,DWORD [12+EBP]
	MOV	DWORD [-36+EBP],0
L147:
	XOR	EBX,EBX
L146:
	MOV	EAX,DWORD [-36+EBP]
	MOV	DL,BYTE [_logo.1+EBX+EAX*1]
	CMP	DL,42
	JE	L152
	CMP	DL,48
	JE	L153
	MOV	DL,-1
L142:
	CMP	DL,-1
	JE	L139
	MOVZX	EDX,DL
	LEA	ESI,DWORD [EBX+ECX*1]
	MOV	EAX,DWORD [8+EBP]
	MOV	DX,WORD [_table_16_65536+EDX+EDX*1]
	MOV	WORD [20+EAX+ESI*2],DX
L139:
	INC	EBX
	CMP	EBX,43
	JLE	L146
	INC	EDI
	ADD	ECX,DWORD [12+EBP]
	ADD	DWORD [-36+EBP],44
	CMP	EDI,12
	JLE	L147
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L153:
	MOV	DL,7
	JMP	L142
L152:
	MOV	DL,4
	JMP	L142
	GLOBAL	_putfont8
_putfont8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,24
	MOV	AL,BYTE [24+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	BYTE [-13+EBP],AL
	MOV	BYTE [-14+EBP],DL
	MOV	DWORD [-20+EBP],0
L175:
	MOV	EAX,DWORD [32+EBP]
	MOV	EDX,DWORD [-20+EBP]
	MOV	AL,BYTE [EDX+EAX*1]
	MOV	BYTE [-25+EBP],AL
	MOV	BYTE [-33+EBP],-128
	MOV	DWORD [-32+EBP],0
L174:
	MOVSX	ECX,BYTE [-14+EBP]
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDX,DWORD [-32+EBP]
	IMUL	EAX,ECX
	ADD	EAX,DWORD [20+EBP]
	MOV	EBX,ECX
	IMUL	EDX,ECX
	IMUL	EAX,DWORD [12+EBP]
	ADD	EAX,EDX
	MOV	EDX,DWORD [8+EBP]
	ADD	EAX,DWORD [16+EBP]
	LEA	EAX,DWORD [EDX+EAX*2]
	MOV	DWORD [-24+EBP],EAX
	MOVSX	EDX,BYTE [-25+EBP]
	MOVZX	EAX,BYTE [-33+EBP]
	TEST	EDX,EAX
	JE	L163
	XOR	ESI,ESI
	CMP	ESI,ECX
	JGE	L163
	XOR	EDI,EDI
L173:
	XOR	ECX,ECX
	CMP	ECX,EBX
	JGE	L182
	MOV	EAX,DWORD [-24+EBP]
	LEA	EDX,DWORD [EAX+EDI*2]
L172:
	MOVZX	EAX,BYTE [-13+EBP]
	INC	ECX
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDX],AX
	ADD	EDX,2
	CMP	ECX,EBX
	JL	L172
L182:
	INC	ESI
	ADD	EDI,DWORD [12+EBP]
	CMP	ESI,EBX
	JL	L173
L163:
	INC	DWORD [-32+EBP]
	SHR	BYTE [-33+EBP],1
	CMP	DWORD [-32+EBP],7
	JLE	L174
	INC	DWORD [-20+EBP]
	CMP	DWORD [-20+EBP],15
	JLE	L175
	ADD	ESP,24
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC0:
	DB	"vram:%p",0x00
LC1:
	DB	"%s x:%d",0x00
LC2:
	DB	"%s y:%d",0x00
LC3:
	DB	"%s c:%d",0x00
LC4:
	DB	"%s scl:%d",0x00
LC5:
	DB	"%s s:[%s]",0x00
LC6:
	DB	"1",0x00
LC7:
	DB	"%s mode:%s",0x00
[SECTION .text]
	GLOBAL	_putfonts8_asc
_putfonts8_asc:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EDI,DWORD [-1036+EBP]
	SUB	ESP,1036
	LEA	EBX,DWORD [-1036+EBP]
	MOV	DL,BYTE [28+EBP]
	MOV	AL,BYTE [24+EBP]
	MOV	BYTE [-1038+EBP],DL
	MOV	BYTE [-1037+EBP],AL
	CALL	_task_now
	MOV	ECX,256
	CLD
	MOV	DWORD [-1044+EBP],EAX
	MOV	EAX,DWORD [4072]
	MOV	DWORD [-1048+EBP],EAX
	XOR	EAX,EAX
	REP
	STOSD
	PUSH	DWORD [8+EBP]
	PUSH	LC0
	PUSH	EBX
	CALL	_sprintf
	PUSH	DWORD [16+EBP]
	PUSH	EBX
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	DWORD [20+EBP]
	PUSH	EBX
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,44
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	EBX
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	MOVSX	ESI,BYTE [-1038+EBP]
	PUSH	ESI
	PUSH	EBX
	PUSH	LC4
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,32
	PUSH	DWORD [32+EBP]
	PUSH	EBX
	PUSH	LC5
	PUSH	EBX
	CALL	_sprintf
	MOV	EDX,DWORD [-1044+EBP]
	ADD	ESP,16
	CMP	BYTE [188+EDX],0
	JNE	L184
	MOV	EAX,DWORD [32+EBP]
	CMP	BYTE [EAX],0
	JNE	L189
L184:
	MOV	EAX,DWORD [-1044+EBP]
	CMP	BYTE [188+EAX],1
	JE	L220
L190:
	MOV	EDX,DWORD [-1044+EBP]
	CMP	BYTE [188+EDX],2
	JE	L221
L183:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L221:
	MOV	EAX,DWORD [32+EBP]
	CMP	BYTE [EAX],0
	JE	L183
L216:
	MOV	EDX,DWORD [-1044+EBP]
	MOV	AL,BYTE [189+EDX]
	TEST	AL,AL
	JNE	L212
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,125
	JA	L213
	MOV	EAX,DWORD [-1044+EBP]
	MOV	BYTE [189+EAX],DL
L215:
	MOVSX	EAX,BYTE [-1038+EBP]
	MOV	EDX,DWORD [16+EBP]
	INC	DWORD [32+EBP]
	LEA	EDX,DWORD [EDX+EAX*8]
	MOV	EAX,DWORD [32+EBP]
	MOV	DWORD [16+EBP],EDX
	CMP	BYTE [EAX],0
	JNE	L216
	JMP	L183
L213:
	MOVZX	EAX,DL
	SAL	EAX,4
	ADD	EAX,DWORD [-1048+EBP]
	PUSH	EAX
	MOVSX	EAX,BYTE [-1038+EBP]
	PUSH	EAX
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,28
	JMP	L215
L212:
	MOVZX	EBX,AL
	IMUL	EBX,EBX,94
	MOV	EDX,DWORD [32+EBP]
	MOVZX	EAX,BYTE [EDX]
	MOV	EDX,DWORD [-1044+EBP]
	LEA	EBX,DWORD [-15295+EAX+EBX*1]
	MOV	BYTE [189+EDX],0
	SAL	EBX,5
	ADD	EBX,DWORD [-1048+EBP]
	MOVSX	EDI,BYTE [-1038+EBP]
	LEA	EAX,DWORD [4096+EBX]
	ADD	EBX,4112
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EDI
	SUB	EAX,8
	MOVZX	ESI,BYTE [-1037+EBP]
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,56
	JMP	L215
L220:
	PUSH	LC6
	LEA	EBX,DWORD [-1036+EBP]
	PUSH	EBX
	PUSH	LC7
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	CALL	_out_log
	MOV	EDX,DWORD [32+EBP]
	ADD	ESP,20
	CMP	BYTE [EDX],0
	JE	L190
L206:
	MOV	EAX,DWORD [-1044+EBP]
	MOV	DL,BYTE [189+EAX]
	TEST	DL,DL
	JNE	L195
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,30
	JBE	L197
	LEA	EAX,DWORD [32+EDX]
	CMP	AL,28
	JA	L196
L197:
	MOV	EAX,DWORD [-1044+EBP]
	MOV	BYTE [189+EAX],DL
L199:
	MOVSX	EAX,BYTE [-1038+EBP]
	MOV	EDX,DWORD [16+EBP]
	INC	DWORD [32+EBP]
	LEA	EDX,DWORD [EDX+EAX*8]
	MOV	EAX,DWORD [32+EBP]
	MOV	DWORD [16+EBP],EDX
	CMP	BYTE [EAX],0
	JNE	L206
	JMP	L190
L196:
	MOVZX	EAX,DL
	SAL	EAX,4
	ADD	EAX,DWORD [-1048+EBP]
	PUSH	EAX
	MOVSX	EAX,BYTE [-1038+EBP]
	PUSH	EAX
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,28
	JMP	L199
L195:
	LEA	EAX,DWORD [127+EDX]
	CMP	AL,30
	JA	L200
	MOVZX	EAX,DL
	LEA	ECX,DWORD [-258+EAX+EAX*1]
L201:
	MOV	EAX,DWORD [32+EBP]
	MOV	DL,BYTE [EAX]
	LEA	EAX,DWORD [-64+EDX]
	CMP	AL,62
	JA	L202
	MOVZX	EAX,DL
	SUB	EAX,64
L203:
	IMUL	EBX,ECX,94
	MOV	EDX,DWORD [-1044+EBP]
	ADD	EBX,EAX
	SAL	EBX,5
	MOV	BYTE [189+EDX],0
	ADD	EBX,DWORD [-1048+EBP]
	MOVSX	EDI,BYTE [-1038+EBP]
	LEA	EAX,DWORD [4096+EBX]
	ADD	EBX,4112
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	PUSH	EDI
	SUB	EAX,8
	MOVZX	ESI,BYTE [-1037+EBP]
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	EAX
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	PUSH	EBX
	PUSH	EDI
	PUSH	ESI
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	ADD	ESP,56
	JMP	L199
L202:
	LEA	EAX,DWORD [-128+EDX]
	CMP	AL,30
	JA	L204
	MOVZX	EAX,DL
	SUB	EAX,65
	JMP	L203
L204:
	MOVZX	EAX,DL
	SUB	EAX,159
	INC	ECX
	JMP	L203
L200:
	MOVZX	EAX,DL
	LEA	ECX,DWORD [-386+EAX+EAX*1]
	JMP	L201
L189:
	MOV	EDX,DWORD [32+EBP]
	MOVZX	EAX,BYTE [EDX]
	SAL	EAX,4
	ADD	EAX,_hankaku
	PUSH	EAX
	PUSH	ESI
	MOVZX	EAX,BYTE [-1037+EBP]
	PUSH	EAX
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [8+EBP]
	CALL	_putfont8
	INC	DWORD [32+EBP]
	MOV	EAX,DWORD [16+EBP]
	MOV	EDX,DWORD [32+EBP]
	ADD	ESP,28
	LEA	EAX,DWORD [EAX+ESI*8]
	MOV	DWORD [16+EBP],EAX
	CMP	BYTE [EDX],0
	JNE	L189
	JMP	L184
[SECTION .data]
_cursor.2:
	DB	"*..............."
	DB	"**.............."
	DB	"*O*............."
	DB	"*OO*............"
	DB	"*OOO*..........."
	DB	"*OOOO*.........."
	DB	"*OOOOO*........."
	DB	"*OOOOOO*........"
	DB	"*OOOOOOO*......."
	DB	"*OOOOO****......"
	DB	"*OO*OO*........."
	DB	"*O**OO*........."
	DB	"**..*OO*........"
	DB	"*...*OO*........"
	DB	".....*OO*......."
	DB	".....***........"
[SECTION .text]
	GLOBAL	_init_mouse_cursor81
_init_mouse_cursor81:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L235:
	XOR	ECX,ECX
L234:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.2+EDX],42
	JE	L240
L231:
	CMP	BYTE [_cursor.2+EDX],79
	JE	L241
L232:
	CMP	BYTE [_cursor.2+EDX],46
	JE	L242
L229:
	INC	ECX
	CMP	ECX,15
	JLE	L234
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L235
	POP	EDI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L242:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L229
L241:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L232
L240:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L231
[SECTION .data]
_cursor.3:
	DB	".**............."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"*OO***.**.**.**."
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OO*OO*OO*OO*OO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	"*OOOOOOOOOOOOOO*"
	DB	".**************."
[SECTION .text]
	GLOBAL	_init_mouse_cursor8
_init_mouse_cursor8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L256:
	XOR	ECX,ECX
L255:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.3+EDX],42
	JE	L261
L252:
	CMP	BYTE [_cursor.3+EDX],79
	JE	L262
L253:
	CMP	BYTE [_cursor.3+EDX],46
	JE	L263
L250:
	INC	ECX
	CMP	ECX,15
	JLE	L255
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L256
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L263:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L250
L262:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L253
L261:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L252
[SECTION .data]
_cursor.4:
	DB	"...*........*..."
	DB	"..**........**.."
	DB	".*O**********O*."
	DB	"*OOOOOOOOOOOOOO*"
	DB	".*O**********O*."
	DB	"..**........**.."
	DB	"...*........*..."
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
	DB	"................"
[SECTION .text]
	GLOBAL	_set_mouse_cursorl8
_set_mouse_cursorl8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EAX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L277:
	XOR	ECX,ECX
L276:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.4+EDX],42
	JE	L282
L273:
	CMP	BYTE [_cursor.4+EDX],79
	JE	L283
L274:
	CMP	BYTE [_cursor.4+EDX],46
	JE	L284
L271:
	INC	ECX
	CMP	ECX,15
	JLE	L276
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L277
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L284:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L271
L283:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L274
L282:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L273
[SECTION .data]
_cursor.5:
	DB	"...*............"
	DB	"..*O*..........."
	DB	".*OOO*.........."
	DB	"***O***........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"..*O*..........."
	DB	"***O***........."
	DB	".*OOO*.........."
	DB	"..*O*..........."
	DB	"...*............"
[SECTION .text]
	GLOBAL	_set_mouse_cursorh8
_set_mouse_cursorh8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	XOR	EBX,EBX
	PUSH	EDX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L298:
	XOR	ECX,ECX
L297:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.5+EDX],42
	JE	L303
L294:
	CMP	BYTE [_cursor.5+EDX],79
	JE	L304
L295:
	CMP	BYTE [_cursor.5+EDX],46
	JE	L305
L292:
	INC	ECX
	CMP	ECX,15
	JLE	L297
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L298
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L305:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L292
L304:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L295
L303:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L294
[SECTION .data]
_cursor.6:
	DB	"*****..........."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"***O*..........."
	DB	"*..*O*.........."
	DB	"....*O*........."
	DB	".....*O*........"
	DB	"......*O*......."
	DB	".......*O*......"
	DB	"........*O*....."
	DB	".........*O*...."
	DB	"..........*O*..*"
	DB	"...........*O***"
	DB	"............*OO*"
	DB	"............*OO*"
	DB	"...........*****"
[SECTION .text]
	GLOBAL	_set_mouse_cursorlt8
_set_mouse_cursorlt8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	PUSH	EBX
	XOR	EBX,EBX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L319:
	XOR	ECX,ECX
L318:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.6+EDX],42
	JE	L324
L315:
	CMP	BYTE [_cursor.6+EDX],79
	JE	L325
L316:
	CMP	BYTE [_cursor.6+EDX],46
	JE	L326
L313:
	INC	ECX
	CMP	ECX,15
	JLE	L318
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L319
	POP	ECX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L326:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L313
L325:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L316
L324:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L315
[SECTION .data]
_cursor.7:
	DB	"...........*****"
	DB	"............*OO*"
	DB	"............*OO*"
	DB	"...........*O***"
	DB	"..........*O*..*"
	DB	".........*O*...."
	DB	"........*O*....."
	DB	".......*O*......"
	DB	"......*O*......."
	DB	".....*O*........"
	DB	"....*O*........."
	DB	"*..*O*.........."
	DB	"***O*..........."
	DB	"*OO*............"
	DB	"*OO*............"
	DB	"*****..........."
[SECTION .text]
	GLOBAL	_set_mouse_cursorrb8
_set_mouse_cursorrb8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	ESI,ESI
	PUSH	EDI
	XOR	EBX,EBX
	MOV	AL,BYTE [12+EBP]
	MOV	EDI,DWORD [8+EBP]
	MOV	BYTE [-13+EBP],AL
L340:
	XOR	ECX,ECX
L339:
	LEA	EDX,DWORD [ECX+EBX*1]
	CMP	BYTE [_cursor.7+EDX],42
	JE	L345
L336:
	CMP	BYTE [_cursor.7+EDX],79
	JE	L346
L337:
	CMP	BYTE [_cursor.7+EDX],46
	JE	L347
L334:
	INC	ECX
	CMP	ECX,15
	JLE	L339
	INC	ESI
	ADD	EBX,16
	CMP	ESI,15
	JLE	L340
	POP	ESI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L347:
	MOVZX	EAX,BYTE [-13+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L334
L346:
	MOV	AX,WORD [_table_16_65536+14]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L337
L345:
	MOV	AX,WORD [_table_16_65536]
	MOV	WORD [EDI+EDX*2],AX
	JMP	L336
	GLOBAL	_putblock8_8
_putblock8_8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	SUB	ESP,12
	CMP	ESI,DWORD [20+EBP]
	JGE	L360
	XOR	EDI,EDI
L358:
	XOR	EBX,EBX
	CMP	EBX,DWORD [16+EBP]
	JGE	L362
	MOV	EAX,DWORD [32+EBP]
	LEA	EAX,DWORD [EAX+EDI*2]
	MOV	DWORD [-24+EBP],EAX
L357:
	MOV	EDX,DWORD [28+EBP]
	MOV	EAX,DWORD [24+EBP]
	ADD	EDX,ESI
	ADD	EAX,EBX
	IMUL	EDX,DWORD [12+EBP]
	ADD	EDX,EAX
	INC	EBX
	MOV	DWORD [-20+EBP],EDX
	MOV	EDX,DWORD [-24+EBP]
	MOV	ECX,DWORD [-20+EBP]
	MOVSX	EAX,WORD [EDX]
	MOV	EDX,DWORD [8+EBP]
	MOV	AX,WORD [_table_16_65536+EAX+EAX*1]
	ADD	DWORD [-24+EBP],2
	MOV	WORD [EDX+ECX*2],AX
	CMP	EBX,DWORD [16+EBP]
	JL	L357
L362:
	INC	ESI
	ADD	EDI,DWORD [36+EBP]
	CMP	ESI,DWORD [20+EBP]
	JL	L358
L360:
	ADD	ESP,12
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC8:
	DB	"/rapuwp.jpg",0x00
[SECTION .text]
	GLOBAL	_read_picture
_read_picture:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,56
	MOV	ESI,DWORD [8+EBP]
	PUSH	ESI
	PUSH	224
	PUSH	1058304
	PUSH	LC8
	CALL	_file_search2
	ADD	ESP,16
	MOV	EBX,EAX
	TEST	EAX,EAX
	JE	L365
	TEST	BYTE [11+EAX],24
	JE	L364
L365:
	OR	EAX,-1
L363:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L364:
	MOV	EAX,DWORD [28+EAX]
	XOR	EDI,EDI
	PUSH	EAX
	MOV	DWORD [-32+EBP],EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	LEA	EAX,DWORD [-32+EBP]
	PUSH	ESI
	PUSH	EAX
	MOVZX	EAX,WORD [26+EBX]
	PUSH	EAX
	CALL	_file_loadfile2
	PUSH	65536
	PUSH	3932160
	MOV	DWORD [-36+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	DWORD [-36+EBP]
	PUSH	DWORD [-32+EBP]
	MOV	DWORD [-44+EBP],EAX
	LEA	EAX,DWORD [-28+EBP]
	PUSH	EAX
	PUSH	DWORD [-44+EBP]
	CALL	_info_JPEG
	MOV	EAX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [-20+EBP]
	SAL	EAX,2
	ADD	ESP,44
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	0
	PUSH	EAX
	MOV	DWORD [-40+EBP],EAX
	PUSH	4
	PUSH	DWORD [-36+EBP]
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-44+EBP]
	CALL	_decode0_JPEG
	ADD	ESP,32
	MOV	EAX,DWORD [16+EBP]
	MOV	ECX,2
	SUB	EAX,DWORD [-20+EBP]
	CDQ
	MOV	DWORD [-48+EBP],EAX
	IDIV	ECX
	MOV	DWORD [-52+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	SUB	DWORD [20+EBP],EAX
	MOV	EAX,DWORD [20+EBP]
	CDQ
	IDIV	ECX
	CMP	EDI,DWORD [-16+EBP]
	MOV	DWORD [-60+EBP],EAX
	JGE	L377
L375:
	XOR	ESI,ESI
	MOV	EAX,DWORD [-20+EBP]
	CMP	ESI,EAX
	JL	L374
L379:
	INC	EDI
	CMP	EDI,DWORD [-16+EBP]
	JL	L375
L377:
	PUSH	DWORD [-32+EBP]
	PUSH	DWORD [-36+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	MOV	EAX,DWORD [-16+EBP]
	IMUL	EAX,DWORD [-20+EBP]
	SAL	EAX,2
	PUSH	EAX
	PUSH	DWORD [-40+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	65536
	PUSH	DWORD [-44+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	XOR	EAX,EAX
	JMP	L363
L374:
	IMUL	EAX,EDI
	MOV	EBX,DWORD [-60+EBP]
	ADD	EAX,ESI
	ADD	EBX,EDI
	MOV	DWORD [-68+EBP],EAX
	IMUL	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [-52+EBP]
	MOV	EDX,DWORD [-68+EBP]
	ADD	EAX,ESI
	MOV	ECX,DWORD [-40+EBP]
	ADD	EBX,EAX
	MOVSX	EAX,BYTE [1522]
	PUSH	EAX
	PUSH	EDI
	PUSH	ESI
	INC	ESI
	MOVZX	EAX,BYTE [ECX+EDX*4]
	PUSH	EAX
	MOVZX	EAX,BYTE [1+ECX+EDX*4]
	PUSH	EAX
	MOVZX	EAX,BYTE [2+ECX+EDX*4]
	PUSH	EAX
	CALL	_rgb2pal
	ADD	ESP,24
	MOV	EDX,DWORD [12+EBP]
	MOV	WORD [EDX+EBX*2],AX
	MOV	EAX,DWORD [-20+EBP]
	CMP	ESI,EAX
	JL	L374
	JMP	L379
[SECTION .data]
	ALIGNB	4
_table.8:
	DD	3
	DD	1
	DD	0
	DD	2
[SECTION .text]
	GLOBAL	_rgb2pal
_rgb2pal:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	ECX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EDX,DWORD [20+EBP]
	MOV	EAX,DWORD [24+EBP]
	CMP	DWORD [28+EBP],8
	JE	L383
	SAL	ECX,8
	LEA	EAX,DWORD [0+EDI*8]
	AND	AX,2016
	MOV	EDX,ECX
	AND	DX,-2048
	SAR	EBX,3
	OR	EDX,EAX
	OR	EDX,EBX
	MOVZX	EAX,DX
L380:
	ADD	ESP,20
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L383:
	IMUL	ECX,ECX,21
	AND	EDX,1
	AND	EAX,1
	MOV	ESI,256
	LEA	EAX,DWORD [EDX+EAX*2]
	IMUL	EDI,EDI,21
	MOV	EAX,DWORD [_table.8+EAX*4]
	MOV	DWORD [-32+EBP],EAX
	MOV	EAX,ECX
	CDQ
	IDIV	ESI
	MOV	ECX,EAX
	MOV	EAX,EDI
	CDQ
	IDIV	ESI
	IMUL	EBX,EBX,21
	MOV	EDI,EAX
	ADD	ECX,DWORD [-32+EBP]
	MOV	EAX,EBX
	CDQ
	IDIV	ESI
	MOV	EBX,EAX
	MOV	ESI,4
	MOV	EAX,ECX
	ADD	EDI,DWORD [-32+EBP]
	ADD	EBX,DWORD [-32+EBP]
	CDQ
	IDIV	ESI
	MOV	ECX,EAX
	MOV	EAX,EDI
	CDQ
	IDIV	ESI
	MOV	EDI,EAX
	MOV	EAX,EBX
	CDQ
	IDIV	ESI
	MOV	EBX,EAX
	IMUL	EAX,EDI,6
	IMUL	EDX,EBX,36
	LEA	EAX,DWORD [EAX+ECX*1]
	LEA	EAX,DWORD [16+EDX+EAX*1]
	MOVZX	EAX,AX
	JMP	L380
	GLOBAL	_table_16_65536
[SECTION .data]
	ALIGNB	16
_table_16_65536:
	RESB	131072
