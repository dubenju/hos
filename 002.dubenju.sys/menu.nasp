[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_boxfill8
	EXTERN	_putfonts8_asc
	EXTERN	_table_8_565
	EXTERN	_sheet_refresh
[FILE "menu.c"]
[SECTION .text]
	GLOBAL	_make_menu8
_make_menu8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,32
	MOV	EAX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [-20+EBP],EAX
	LEA	ESI,DWORD [-2+EDI]
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [-24+EBP],EAX
	MOV	EAX,DWORD [24+EBP]
	MOV	DWORD [-28+EBP],EAX
	MOV	EAX,DWORD [28+EBP]
	MOV	DWORD [-32+EBP],EAX
	LEA	EAX,DWORD [-1+EDI]
	PUSH	0
	MOV	DWORD [-40+EBP],EAX
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	PUSH	1
	PUSH	ESI
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-20+EBP]
	ADD	ESP,56
	DEC	EAX
	MOV	DWORD [-44+EBP],EAX
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	0
	PUSH	8
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EBX,DWORD [-20+EBP]
	SUB	EBX,2
	PUSH	EBX
	PUSH	1
	PUSH	1
	PUSH	1
	PUSH	7
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	EBX
	PUSH	ESI
	PUSH	1
	PUSH	ESI
	PUSH	15
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	PUSH	DWORD [-44+EBP]
	PUSH	DWORD [-40+EBP]
	PUSH	0
	PUSH	DWORD [-40+EBP]
	PUSH	0
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-20+EBP]
	ADD	ESP,56
	SUB	EAX,3
	PUSH	EAX
	LEA	EAX,DWORD [-3+EDI]
	PUSH	EAX
	PUSH	2
	PUSH	2
	PUSH	8
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	PUSH	EBX
	PUSH	ESI
	PUSH	EBX
	PUSH	1
	PUSH	15
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	ADD	ESP,56
	PUSH	DWORD [-44+EBP]
	PUSH	DWORD [-40+EBP]
	PUSH	DWORD [-44+EBP]
	PUSH	0
	PUSH	0
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	ADD	ESP,28
	MOV	EAX,DWORD [-28+EBP]
	MOV	DWORD [-36+EBP],EAX
	CMP	DWORD [-32+EBP],0
	JLE	L14
	MOV	EBX,DWORD [-20+EBP]
	MOV	ESI,DWORD [-32+EBP]
	SUB	EBX,22
L6:
	MOV	EAX,DWORD [-36+EBP]
	ADD	EAX,4
	PUSH	EAX
	PUSH	1
	PUSH	0
	PUSH	EBX
	SUB	EBX,26
	PUSH	8
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_putfonts8_asc
	ADD	ESP,28
	MOV	EAX,DWORD [-36+EBP]
	DEC	ESI
	MOV	EAX,DWORD [52+EAX]
	MOV	DWORD [-36+EBP],EAX
	JNE	L6
L14:
	MOV	EAX,DWORD [-32+EBP]
	XOR	ESI,ESI
	DEC	EAX
	CMP	ESI,EAX
	JGE	L16
	MOV	EBX,DWORD [-20+EBP]
L11:
	LEA	EDX,DWORD [-28+EBX]
	LEA	EAX,DWORD [-6+EDI]
	PUSH	EDX
	INC	ESI
	PUSH	EAX
	PUSH	EDX
	PUSH	4
	PUSH	102
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	LEA	EAX,DWORD [-5+EDI]
	LEA	EDX,DWORD [-27+EBX]
	SUB	EBX,26
	PUSH	EDX
	PUSH	EAX
	PUSH	EDX
	PUSH	5
	PUSH	7
	PUSH	EDI
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-32+EBP]
	DEC	EAX
	ADD	ESP,56
	CMP	ESI,EAX
	JL	L11
L16:
	MOV	EAX,DWORD [-28+EBP]
	CMP	DWORD [EAX],0
	JE	L17
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L17:
	MOV	EAX,DWORD [-24+EBP]
	MOV	DWORD [12+EBP],EDI
	MOV	DWORD [16+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [20+EBP],1
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_make_mtitle8
	GLOBAL	_make_mtitle8
_make_mtitle8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	CMP	BYTE [20+EBP],0
	JE	L19
	MOV	DL,-47
L20:
	PUSH	19
	LEA	EAX,DWORD [-6+EBX]
	PUSH	EAX
	PUSH	4
	PUSH	5
	MOVZX	EAX,DL
	PUSH	EAX
	PUSH	EBX
	PUSH	ESI
	CALL	_boxfill8
	PUSH	DWORD [16+EBP]
	PUSH	1
	PUSH	7
	PUSH	4
	PUSH	24
	PUSH	EBX
	PUSH	ESI
	CALL	_putfonts8_asc
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L19:
	MOV	DL,15
	JMP	L20
	GLOBAL	_change_mtitle8
_change_mtitle8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	EAX,DWORD [8+EBP]
	CMP	BYTE [20+EBP],0
	MOV	EDX,DWORD [EAX]
	MOV	ESI,DWORD [4+EAX]
	MOV	DWORD [-20+EBP],EDX
	JE	L22
	MOV	BYTE [-13+EBP],7
	MOV	BYTE [-14+EBP],4
	MOV	BYTE [-15+EBP],0
	MOV	BYTE [-16+EBP],8
L23:
	IMUL	EAX,DWORD [16+EBP],26
	CMP	DWORD [12+EBP],0
	LEA	ECX,DWORD [-23+EAX]
	MOV	DWORD [-32+EBP],ECX
	JNE	L24
	SUB	EAX,5
	MOV	DWORD [-32+EBP],EAX
L24:
	XOR	EDI,EDI
L37:
	MOV	EBX,5
	LEA	EAX,DWORD [-6+ESI]
	CMP	EBX,EAX
	JG	L41
L36:
	MOV	EAX,DWORD [-32+EBP]
	ADD	EAX,EDI
	IMUL	EAX,ESI
	LEA	EDX,DWORD [EBX+EAX*1]
	MOV	EAX,DWORD [-20+EBP]
	MOV	DX,WORD [EAX+EDX*2]
	MOVZX	EAX,BYTE [-15+EBP]
	MOV	WORD [-26+EBP],DX
	CMP	DX,WORD [_table_8_565+EAX+EAX*1]
	JE	L43
	MOVZX	EAX,BYTE [-16+EBP]
	MOV	DX,WORD [-26+EBP]
	CMP	DX,WORD [_table_8_565+EAX+EAX*1]
	JE	L44
L34:
	MOV	DX,WORD [-26+EBP]
	MOV	EAX,DWORD [-32+EBP]
	ADD	EAX,EDI
	MOV	ECX,DWORD [-20+EBP]
	IMUL	EAX,ESI
	ADD	EAX,EBX
	INC	EBX
	MOV	WORD [ECX+EAX*2],DX
	LEA	EAX,DWORD [-6+ESI]
	CMP	EBX,EAX
	JLE	L36
L41:
	INC	EDI
	CMP	EDI,21
	JLE	L37
	MOV	EAX,DWORD [-32+EBP]
	ADD	EAX,22
	PUSH	EAX
	LEA	EAX,DWORD [-5+ESI]
	PUSH	EAX
	PUSH	DWORD [-32+EBP]
	PUSH	5
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L44:
	MOVZX	EAX,BYTE [-14+EBP]
L42:
	MOV	AX,WORD [_table_8_565+EAX+EAX*1]
	MOV	WORD [-26+EBP],AX
	JMP	L34
L43:
	MOVZX	EAX,BYTE [-13+EBP]
	JMP	L42
L22:
	MOV	BYTE [-13+EBP],0
	MOV	BYTE [-14+EBP],8
	MOV	BYTE [-15+EBP],7
	MOV	BYTE [-16+EBP],4
	JMP	L23
	GLOBAL	_push_menu
_push_menu:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
	GLOBAL	_pull_menu
_pull_menu:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
