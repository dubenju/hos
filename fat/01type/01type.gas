	.file	"01type.c"
	.text
	.def	_printf;	.scl	3;	.type	32;	.endef
_printf:
LFB1:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	leal	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	___mingw_vprintf
	movl	%eax, %ebx
	movl	%ebx, %eax
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1:
	.def	___main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
LC0:
	.ascii "sizeof(char)  =%d\15\12\0"
LC1:
	.ascii "sizeof(short) =%d\15\12\0"
LC2:
	.ascii "sizeof(int)   =%d\15\12\0"
LC3:
	.ascii "sizeof(long)  =%d\15\12\0"
LC4:
	.ascii "sizeof(long long)  =%d\15\12\0"
LC5:
	.ascii "sizeof(uint8_t)  =%d\15\12\0"
LC6:
	.ascii "sizeof(uint16_t)  =%d\15\12\0"
LC7:
	.ascii "sizeof(uint32_t)  =%d\15\12\0"
LC8:
	.ascii "sizeof(uint64_t)  =%d\15\12\0"
LC9:
	.ascii "sizeof(float) =%d\15\12\0"
LC10:
	.ascii "sizeof(double)=%d\15\12\0"
LC11:
	.ascii "sizeof(long double)=%d\15\12\0"
LC12:
	.ascii "sizeof(char*)  =%d\15\12\0"
LC13:
	.ascii "sizeof(short*) =%d\15\12\0"
LC14:
	.ascii "sizeof(int*)   =%d\15\12\0"
LC15:
	.ascii "sizeof(long*)  =%d\15\12\0"
LC16:
	.ascii "sizeof(float*) =%d\15\12\0"
LC17:
	.ascii "sizeof(double*)=%d\15\12\0"
LC18:
	.ascii "sizeof(long double*)=%d\15\12\0"
LC19:
	.ascii "%d %d %u %u\12\0"
	.text
	.globl	_main
	.def	_main;	.scl	2;	.type	32;	.endef
_main:
LFB10:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	andl	$-16, %esp
	subl	$48, %esp
	.cfi_offset 3, -12
	call	___main
	movl	$1, 4(%esp)
	movl	$LC0, (%esp)
	call	_printf
	movl	$2, 4(%esp)
	movl	$LC1, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC2, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC3, (%esp)
	call	_printf
	movl	$8, 4(%esp)
	movl	$LC4, (%esp)
	call	_printf
	movl	$1, 4(%esp)
	movl	$LC5, (%esp)
	call	_printf
	movl	$2, 4(%esp)
	movl	$LC6, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC7, (%esp)
	call	_printf
	movl	$8, 4(%esp)
	movl	$LC8, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC9, (%esp)
	call	_printf
	movl	$8, 4(%esp)
	movl	$LC10, (%esp)
	call	_printf
	movl	$12, 4(%esp)
	movl	$LC11, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC12, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC13, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC14, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC15, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC16, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC17, (%esp)
	call	_printf
	movl	$4, 4(%esp)
	movl	$LC18, (%esp)
	call	_printf
	movb	$-128, 47(%esp)
	movb	$-128, 46(%esp)
	movzbl	46(%esp), %ebx
	movzbl	46(%esp), %ecx
	movsbl	47(%esp), %edx
	movsbl	47(%esp), %eax
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$LC19, (%esp)
	call	_printf
	movb	$-1, 47(%esp)
	movb	$-1, 46(%esp)
	movzbl	46(%esp), %ebx
	movzbl	46(%esp), %ecx
	movsbl	47(%esp), %edx
	movsbl	47(%esp), %eax
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$LC19, (%esp)
	call	_printf
	movb	$0, 47(%esp)
	movb	$1, 46(%esp)
	movzbl	46(%esp), %ebx
	movzbl	46(%esp), %ecx
	movsbl	47(%esp), %edx
	movsbl	47(%esp), %eax
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$LC19, (%esp)
	call	_printf
	movl	$0, %eax
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE10:
	.ident	"GCC: (GNU) 5.3.0"
	.def	___mingw_vprintf;	.scl	2;	.type	32;	.endef
