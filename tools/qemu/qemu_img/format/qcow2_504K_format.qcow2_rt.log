参数[0]=C:\Users\DBJ\git\hos\fat\edqcow2\edqcow2.
参数[1]=C:\Users\DBJ\git\hos\tools\qemu\qemu_img\format\qcow2_504K_format.qcow2.
参数[2]=format.
参数[3]=drv1.
参数[4]=-m.
参数[5]=C:\Users\DBJ\git\hos\fat\edqcow2\vbr12.bin.
format.
param=drv1.
partition no=1.
>>----- format_partition begin -----
file:C:\Users\DBJ\git\hos\tools\qemu\qemu_img\format\qcow2_504K_format.qcow2.
parttion_no:1.
filesystem:auto_.
>>----- read_qcow2 begin -----
sizeof(header)=72
readed count=72

>>----- Level 1 Table -----
表1在镜像文件中的位置[(4096, 0X1000)-(8192, 0X2000))
l1_table_offset=4096,0X1000.
l1_table_size=1,0X1.
l1[0]=16384. 0X4000.
table[00000]=0000016384, 0X0000004000 
----- Level 1 Table -----<<

>>----- Refcount Table -----
refcount_table_cnt=1.
refcount table offset=8192, 0X2000.
refcount[0]=0X0.
引用计数表在镜像文件中的位置[(8192, 0X2000)-(12288, 0X3000))
table[00000]=0000012288, 0X0000003000 
----- Refcount Table -----<<

>>----- Refcount Block -----
!!!引用计数块在镜像文件中似乎不是连续存储的，那么1个引用计数块的大小应该是1个簇。
引用计数块在镜像文件中的位置[(12288, 0X3000)-(16384, 0X4000))
refcount_cnt=2048.
refcount block offset=12288, 0X3000, count=0.
table[00000]=1. table[00001]=1. table[00002]=1. table[00003]=1. table[00004]=1. table[00005]=1. table[00006]=1. table[00007]=1. 
table[00008]=1. table[00009]=1. table[00010]=1. table[00011]=1. table[00012]=1. table[00013]=1. table[00014]=1. 
----- Refcount Block -----<<

>>----- Level 2 Table -----
L2 Table offset=16384, 0X4000.

表2在镜像文件中的最初位置[(16384, 0X4000)-(20480, 0X5000)).
offset[00000]=16384, 0X4000 
l2[000]=0000000057344. 0X000000E000.l2[007]=0000000020480. 0X0000005000.l2[015]=0000000024576. 0X0000006000.l2[023]=0000000028672. 0X0000007000.l2[031]=0000000032768. 0X0000008000.l2[039]=0000000036864. 0X0000009000.l2[047]=0000000040960. 0X000000A000.l2[055]=0000000045056. 0X000000B000.
l2[063]=0000000049152. 0X000000C000.l2[070]=0000000053248. 0X000000D000.

l2 table's size:512.
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 
table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
----- Level 2 Table -----<<

----- read_qcow2 begin -----<<
>>----- print_qcow2_file -----.
HEADER:00B27D28.
L1    :00B21698.
RFT   :00B218E8.
RFB   :00B27D78.
L2    :00B28D88.

簇大小4096
----- print_qcow2_file -----<<.
>>----- QCOW2 HEADER -----.
头信息在镜像文件中的位置[(0, 0X0000)-(4096, 0X1000))
QCOW2_MAGIC                  (4) = 0X514649FB,QCOW magic string.
QCOW2_version                (4) = 0X2,Version number (valid values are 2 and 3).
QCOW2_backing_file_offset    (8) = 0X0,Offset into the image file at which the backing file name is stored (NB: The string is not null terminated). 0 if the image doesn't have a backing file.
QCOW2_backing_file_size      (4) = 0X0,Length of the backing file name in bytes. Must not be longer than 1023 bytes. Undefined if the image doesn't have a backing file.
QCOW2_cluster_bits           (4) = 0XC,Number of bits that are used for addressing an offset within a cluster (1 << cluster_bits is the cluster size). Must not be less than 9 (i.e. 512 byte clusters).
QCOW2_size                   (8) = 516096,0X000007E000,Virtual disk size in bytes.
                                        十六进制的值有不正确的可能。
QCOW2_crypt_method           (4) = 0X0,0 for no encryption;1 for AES encryption.
QCOW2_l1_size                (4) = 0X1 1,Number of entries in the active L1 table(MAX).
*QCOW2_l1_table_offset       (8) = 0X1000,Offset into the image file at which the active L1 table starts. Must be aligned to a cluster boundary.
*QCOW2_refcount_table_offset (8) = 0X2000,Offset into the image file at which the refcount table starts. Must be aligned to a cluster boundary.
QCOW2_refcount_table_clusters(4) = 0X1,Number of clusters that the refcount table occupies.
QCOW2_nb_snapshots           (4) = 0X0,Number of snapshots contained in the image.
QCOW2_snapshots_offset       (8) = 0X0,Offset into the image file at which the snapshot table starts. Must be aligned to a cluster boundary.
12.
cluster_size = 4096
----- QCOW2 HEADER -----<<.
>>----- Level 1 Table -----
表1在镜像文件中的位置[(4096, 0X1000)-(8192, 0X2000))
table[00000]=0000016384, 0X0000004000 
----- Level 1 Table -----<<

>>----- Refcount Table -----
引用计数表在镜像文件中的位置[(8192, 0X2000)-(12288, 0X3000))
table[00000]=0000012288, 0X0000003000 
----- Refcount Table -----<<

>>----- Refcount Block -----
!!!引用计数块在镜像文件中似乎不是连续存储的，那么1个引用计数块的大小应该是1个簇。
引用计数块在镜像文件中的位置[(12288, 0X3000)-(16384, 0X4000))
table[00000]=1. table[00001]=1. table[00002]=1. table[00003]=1. table[00004]=1. table[00005]=1. table[00006]=1. table[00007]=1. 
table[00008]=1. table[00009]=1. table[00010]=1. table[00011]=1. table[00012]=1. table[00013]=1. table[00014]=1. 
----- Refcount Block -----<<

>>----- Level 2 Table -----
表2在镜像文件中的最初位置[(57344, 0XE000)-(61440, 0XF000)).
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 
table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
----- Level 2 Table -----<<

>>----- Partition Table -----
L2 Table offset=0, 0X0.
----- drv1 mbr info -----
>>----- get_l1_index 0 4096 512-----.
----- get_l1_index 0 4096 512-----<<.
>>----- get_l1_index 0 4096 512-----.
----- get_l1_index 0 4096 512-----<<.
起始扇区号：0 (l1=0， l2=0, cluster=0), 在镜像文件中的位置[(157344. 0XE000)-.(57856, 0XE200)).
0X55, 0XAA.
WIN95 FAT16 LBA.
80 01 00 01 0e 0f 00 3f 63 945 0.49MB 
   01 00 01 0f 00 3f 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 


========= this is a test for list.
flag=1 扇区LBA_NO=0 WIN95 FAT16 LBA.
80 01 00 01 0e 0f 00 3f 63 945 0.49MB 
   01 00 01 0f 00 3f 
========= this is a test for list.
----- Partition Table -----<<

WIN95 FAT16 LBA.
80 01 00 01 0e 0f 00 3f 63 945 0.49MB 
   01 00 01 0f 00 3f 
分区的起始扇区LBA号0.



***从这开始输出***.


>>----- get_partition_size begin -----
----- get_partition_size end -----<<
>>----- get_sector_per_cluster begin -----
----- get_sector_per_cluster end -----<<
计算出的簇大小：sector_per_cluster=8.
分区大小：945.
  簇大小：8扇区/簇.
FAT 大小119.
每个FAT的扇区数量1.
bs_OEMName=MSWIN4.1.
bpb_BytesPerSector=512.
bpb_SectorsPerCluster=8.
bpb_ReservedSectorst=1.
bpb_FatCopies=2.
bpb_RootDirEntries=512.
bpb_NumSectors=945.
bpb_MediaType=2.
bpb_SectorsPerFAT=1.
bpb_SectorsPerTrack=63.
bpb_NumberOfHeads=16.
bpb_HiddenSectors=63.
bpb_SectorsBig=0.
bs_DrvNum=128.
bs_Reaserved1=0.
bs_Bootsig=41.
bs_VolID=2C53-10F2.
bs_VolLab=NO NAME    .
bs_FileSysType=FAT12   .
bs_EndFlag=AA55.
>>----- ■■■write_qcow2 begin -----
扇区索引63.缓冲区大小512.
-----------------------------------.
0◆扇区索引63.
>>----- get_l1_index 63 4096 512-----.
----- get_l1_index 63 4096 512-----<<.
L1:0, L2:7, 簇:3584.E00.
0◆簇的剩余大小512.
0◆待写区域大小512.
L1_size:1.
表1偏移:16384 4000.
表2偏移:20480 5000.
更新原有的簇.:20480 5000.
簇内偏移:24064 5E00.
镜像文件中的簇信息:5, 5.
引用计数块的个数:2048.
引用计数块的使用情况:1.
0◆成功写入区域大小512.
0◆累计成功写入区域大小512.
0◆成功写入区域大小512.
----- ■■■write_qcow2 end -----<<

>>----- make_fat begin -----
----- make_fat end -----<<
>>----- ■■■write_qcow2 begin -----
扇区索引64.缓冲区大小512.
-----------------------------------.
0◆扇区索引64.
>>----- get_l1_index 64 4096 512-----.
----- get_l1_index 64 4096 512-----<<.
L1:0, L2:8, 簇:0.0.
0◆簇的剩余大小4096.
0◆待写区域大小512.
L1_size:1.
表1偏移:16384 4000.
表2偏移:0 0.
新规表2偏移:61440 F000.
簇内偏移:61440 F000.
镜像文件中的簇信息:15, F.
引用计数块的个数:2048.
引用计数块的使用情况:1.
0◆成功写入区域大小512.
0◆累计成功写入区域大小512.
0◆成功写入区域大小512.
>>----- write_l2 begin -----
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 
table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 
table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 table[00000]=63050394783187072, 0X0000000080 table[00007]=22517998136852608, 0X0000000080 table[00008]=67553994410557568, 0X0000000080 table[00015]=27021597764223104, 0X0000000080 table[00023]=31525197391593600, 0X0000000080 table[00031]=36028797018964096, 0X0000000080 table[00039]=40532396646334592, 0X0000000080 table[00047]=45035996273705088, 0X0000000080 
table[00055]=49539595901075584, 0X0000000080 table[00063]=54043195528446080, 0X0000000080 table[00070]=58546795155816576, 0X0000000080 
----- write_l2 end -----<<
----- ■■■write_qcow2 end -----<<

>>----- ■■■write_qcow2 begin -----
扇区索引65.缓冲区大小512.
-----------------------------------.
0◆扇区索引65.
>>----- get_l1_index 65 4096 512-----.
----- get_l1_index 65 4096 512-----<<.
L1:0, L2:8, 簇:512.200.
0◆簇的剩余大小3584.
0◆待写区域大小512.
L1_size:1.
表1偏移:16384 4000.
表2偏移:61440 F000.
更新原有的簇.:61440 F000.
簇内偏移:61952 F200.
镜像文件中的簇信息:15, F.
引用计数块的个数:2048.
引用计数块的使用情况:1.
0◆成功写入区域大小512.
0◆累计成功写入区域大小512.
0◆成功写入区域大小512.
----- ■■■write_qcow2 end -----<<

>>----- ■■■write_qcow2 begin -----
扇区索引66.缓冲区大小16384.
-----------------------------------.
0◆扇区索引66.
>>----- get_l1_index 66 4096 512-----.
----- get_l1_index 66 4096 512-----<<.
L1:0, L2:8, 簇:1024.400.
0◆簇的剩余大小3072.
0◆待写区域大小16384.
L1_size:1.
表1偏移:16384 4000.
表2偏移:61440 F000.
更新原有的簇.:61440 F000.
簇内偏移:62464 F400.
镜像文件中的簇信息:15, F.
引用计数块的个数:2048.
引用计数块的使用情况:1.
0◆成功写入区域大小3072.
0◆累计成功写入区域大小3072.
0◆成功写入区域大小3072.
-----------------------------------.
1◆扇区索引72.
>>----- get_l1_index 72 4096 512-----.
----- get_l1_index 72 4096 512-----<<.
L1:0, L2:9, 簇:0.0.
1◆簇的剩余大小4096.
1◆待写区域大小13312.
L1_size:1.
表1偏移:16384 4000.
表2偏移:0 0.
新规表2偏移:65536 10000.
簇内偏移:65536 10000.
镜像文件中的簇信息:16, 10.
引用计数块的个数:2048.
引用计数块的使用情况:1.
1◆成功写入区域大小4096.
1◆累计成功写入区域大小7168.
1◆成功写入区域大小4096.
>>----- write_l2 begin -----
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 
table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 
table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 table[00000]=63050394783187072, 0X0000000080 table[00007]=22517998136852608, 0X0000000080 table[00008]=67553994410557568, 0X0000000080 table[00009]=1099511627904, 0X0000000080 table[00015]=27021597764223104, 0X0000000080 table[00023]=31525197391593600, 0X0000000080 table[00031]=36028797018964096, 0X0000000080 table[00039]=40532396646334592, 0X0000000080 
table[00047]=45035996273705088, 0X0000000080 table[00055]=49539595901075584, 0X0000000080 table[00063]=54043195528446080, 0X0000000080 table[00070]=58546795155816576, 0X0000000080 
----- write_l2 end -----<<
-----------------------------------.
2◆扇区索引80.
>>----- get_l1_index 80 4096 512-----.
----- get_l1_index 80 4096 512-----<<.
L1:0, L2:10, 簇:0.0.
2◆簇的剩余大小4096.
2◆待写区域大小9216.
L1_size:1.
表1偏移:16384 4000.
表2偏移:0 0.
新规表2偏移:69632 11000.
簇内偏移:69632 11000.
镜像文件中的簇信息:17, 11.
引用计数块的个数:2048.
引用计数块的使用情况:1.
2◆成功写入区域大小4096.
2◆累计成功写入区域大小11264.
2◆成功写入区域大小4096.
>>----- write_l2 begin -----
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 
table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 
table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 table[00000]=63050394783187072, 0X0000000080 table[00007]=22517998136852608, 0X0000000080 table[00008]=67553994410557568, 0X0000000080 table[00009]=1099511627904, 0X0000000080 table[00010]=4504699138998400, 0X0000000080 table[00015]=27021597764223104, 0X0000000080 table[00023]=31525197391593600, 0X0000000080 table[00031]=36028797018964096, 0X0000000080 
table[00039]=40532396646334592, 0X0000000080 table[00047]=45035996273705088, 0X0000000080 table[00055]=49539595901075584, 0X0000000080 table[00063]=54043195528446080, 0X0000000080 table[00070]=58546795155816576, 0X0000000080 
----- write_l2 end -----<<
-----------------------------------.
3◆扇区索引88.
>>----- get_l1_index 88 4096 512-----.
----- get_l1_index 88 4096 512-----<<.
L1:0, L2:11, 簇:0.0.
3◆簇的剩余大小4096.
3◆待写区域大小5120.
L1_size:1.
表1偏移:16384 4000.
表2偏移:0 0.
新规表2偏移:73728 12000.
簇内偏移:73728 12000.
镜像文件中的簇信息:18, 12.
引用计数块的个数:2048.
引用计数块的使用情况:1.
3◆成功写入区域大小4096.
3◆累计成功写入区域大小15360.
3◆成功写入区域大小4096.
>>----- write_l2 begin -----
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00011]=0000073728, 0X0000012000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 
table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00011]=0000073728, 0X0000012000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 
table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 table[00000]=63050394783187072, 0X0000000080 table[00007]=22517998136852608, 0X0000000080 table[00008]=67553994410557568, 0X0000000080 table[00009]=1099511627904, 0X0000000080 table[00010]=4504699138998400, 0X0000000080 table[00011]=9008298766368896, 0X0000000080 table[00015]=27021597764223104, 0X0000000080 table[00023]=31525197391593600, 0X0000000080 
table[00031]=36028797018964096, 0X0000000080 table[00039]=40532396646334592, 0X0000000080 table[00047]=45035996273705088, 0X0000000080 table[00055]=49539595901075584, 0X0000000080 table[00063]=54043195528446080, 0X0000000080 table[00070]=58546795155816576, 0X0000000080 
----- write_l2 end -----<<
-----------------------------------.
4◆扇区索引96.
>>----- get_l1_index 96 4096 512-----.
----- get_l1_index 96 4096 512-----<<.
L1:0, L2:12, 簇:0.0.
4◆簇的剩余大小4096.
4◆待写区域大小1024.
L1_size:1.
表1偏移:16384 4000.
表2偏移:0 0.
新规表2偏移:77824 13000.
簇内偏移:77824 13000.
镜像文件中的簇信息:19, 13.
引用计数块的个数:2048.
引用计数块的使用情况:1.
4◆成功写入区域大小4096.
4◆累计成功写入区域大小19456.
4◆成功写入区域大小4096.
>>----- write_l2 begin -----
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00011]=0000073728, 0X0000012000 table[00012]=0000077824, 0X0000013000 table[00015]=0000024576, 0X0000006000 
table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00008]=0000061440, 0X000000F000 table[00009]=0000065536, 0X0000010000 table[00010]=0000069632, 0X0000011000 table[00011]=0000073728, 0X0000012000 table[00012]=0000077824, 0X0000013000 table[00015]=0000024576, 0X0000006000 
table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 table[00000]=63050394783187072, 0X0000000080 table[00007]=22517998136852608, 0X0000000080 table[00008]=67553994410557568, 0X0000000080 table[00009]=1099511627904, 0X0000000080 table[00010]=4504699138998400, 0X0000000080 table[00011]=9008298766368896, 0X0000000080 table[00012]=13511898393739392, 0X0000000080 table[00015]=27021597764223104, 0X0000000080 
table[00023]=31525197391593600, 0X0000000080 table[00031]=36028797018964096, 0X0000000080 table[00039]=40532396646334592, 0X0000000080 table[00047]=45035996273705088, 0X0000000080 table[00055]=49539595901075584, 0X0000000080 table[00063]=54043195528446080, 0X0000000080 table[00070]=58546795155816576, 0X0000000080 
----- write_l2 end -----<<
----- ■■■write_qcow2 end -----<<

输出头 begin.
>>----- write_header begin -----
QCOW2_MAGIC                  (4) = 0X514649FB,QCOW magic string.
QCOW2_version                (4) = 0X2,Version number (valid values are 2 and 3).
QCOW2_backing_file_offset    (8) = 0X0,Offset into the image file at which the backing file name is stored (NB: The string is not null terminated). 0 if the image doesn't have a backing file.
QCOW2_backing_file_size      (4) = 0X0,Length of the backing file name in bytes. Must not be longer than 1023 bytes. Undefined if the image doesn't have a backing file.
QCOW2_cluster_bits           (4) = 0XC,Number of bits that are used for addressing an offset within a cluster (1 << cluster_bits is the cluster size). Must not be less than 9 (i.e. 512 byte clusters).
QCOW2_size                   (8) = 516096,0X000007E000,Virtual disk size in bytes.
                                        十六进制的值有不正确的可能。
QCOW2_crypt_method           (4) = 0X0,0 for no encryption;1 for AES encryption.
QCOW2_l1_size                (4) = 0X1 1,Number of entries in the active L1 table(MAX).
*QCOW2_l1_table_offset       (8) = 0X1000,Offset into the image file at which the active L1 table starts. Must be aligned to a cluster boundary.
*QCOW2_refcount_table_offset (8) = 0X2000,Offset into the image file at which the refcount table starts. Must be aligned to a cluster boundary.
QCOW2_refcount_table_clusters(4) = 0X1,Number of clusters that the refcount table occupies.
QCOW2_nb_snapshots           (4) = 0X0,Number of snapshots contained in the image.
QCOW2_snapshots_offset       (8) = 0X0,Offset into the image file at which the snapshot table starts. Must be aligned to a cluster boundary.
----- write_header end -----<<
输出头 end.
输出表1 begin.
>>----- write_l1 begin -----
table[00000]=0000016384, 0X0000004000 
table[00000]=0000016384, 0X0000004000 table[00000]=18014398509482112, 0X0000000080 
----- write_l1 end -----<<
输出表1 end.
输出计数表 begin.
输出计数表 end.
输出计数块 begin.
12288.3000.
输出计数块 end.
format_partition is normal end.
----- format_partition end -----<<
