参数[0]=C:\Users\DBJ\git\hos\fat\edqcow2\edqcow2.
参数[1]=C:\Users\DBJ\git\hos\tools\qemu\qemu_img\fdisk\qcow2_16128K.qcow2.
参数[2]=info.
info.
this option will display the information of the partition on qcow2(C:\Users\DBJ\git\hos\tools\qemu\qemu_img\fdisk\qcow2_16128K.qcow2).

!!!WARNING!!! 现在的代码是不支持超过2GB的文件的!!!

__STRICT_ANSI__ undefined.
sizeof(size_t) 4, sizeof(off_t) 4, sizeof(off64_t) 8
file's size=61440.
sizeof(header)=72
readed count=72

>>----- Header -----
头信息在镜像文件中的位置[(0, 0X0000)-(4096, 0X1000))
QCOW2_MAGIC                  (4) = 0XFB494651,QCOW magic string.
QCOW2_version                (4) = 0X2000000,Version number (valid values are 2 and 3).
QCOW2_backing_file_offset    (8) = 0X0,Offset into the image file at which the backing file name is stored (NB: The string is not null terminated). 0 if the image doesn't have a backing file.
QCOW2_backing_file_size      (4) = 0X0,Length of the backing file name in bytes. Must not be longer than 1023 bytes. Undefined if the image doesn't have a backing file.
QCOW2_cluster_bits           (4) = 0XC000000,Number of bits that are used for addressing an offset within a cluster (1 << cluster_bits is the cluster size). Must not be less than 9 (i.e. 512 byte clusters).
QCOW2_size                   (8) = 277076930199552,0X0000000000,Virtual disk size in bytes.
                                        十六进制的值有不正确的可能。
QCOW2_crypt_method           (4) = 0X0,0 for no encryption;1 for AES encryption.
QCOW2_l1_size                (4) = 0X8000000 134217728,Number of entries in the active L1 table(MAX).
*QCOW2_l1_table_offset       (8) = 0X0,Offset into the image file at which the active L1 table starts. Must be aligned to a cluster boundary.
*QCOW2_refcount_table_offset (8) = 0X0,Offset into the image file at which the refcount table starts. Must be aligned to a cluster boundary.
QCOW2_refcount_table_clusters(4) = 0X1000000,Number of clusters that the refcount table occupies.
QCOW2_nb_snapshots           (4) = 0X0,Number of snapshots contained in the image.
QCOW2_snapshots_offset       (8) = 0X0,Offset into the image file at which the snapshot table starts. Must be aligned to a cluster boundary.
cluster_size = 4096
----- Header -----<<

>>----- Level 1 Table -----
表1在镜像文件中的位置[(4096, 0X1000)-(8192, 0X2000))
l1_table_offset=4096,0X1000.
l1_table_size=8,0X8.
l1[0]=16384. 0X4000.
table[00000]=0000016384, 0X0000004000 
----- Level 1 Table -----<<

>>----- Refcount Table -----
refcount_table_cnt=1.
refcount table offset=8192, 0X2000.
refcount[0]=0X3000.
引用计数表在镜像文件中的位置[(8192, 0X2000)-(12288, 0X3000))
table[00000]=0000012288, 0X0000003000 
----- Refcount Table -----<<

>>----- Refcount Block -----
!!!引用计数块在镜像文件中似乎不是连续存储的，那么1个引用计数块的大小应该是1个簇。
引用计数块在镜像文件中的位置[(12288, 0X3000)-(16384, 0X4000))
refcount_cnt=2048.
refcount block offset=12288, 0X3000, count=0.
table[00000]=1. table[00001]=1. table[00002]=1. table[00003]=1. table[00004]=1. table[00005]=1. table[00006]=1. table[00007]=1. 
table[00008]=1. table[00009]=1. table[00010]=1. table[00011]=1. table[00012]=1. table[00013]=1. table[00014]=1. 
----- Refcount Block -----<<

>>----- Level 2 Table -----
L2 Table offset=16384, 0X4000.

表2在镜像文件中的最初位置[(16384, 0X4000)-(20480, 0X5000)).
offset[00000]=16384, 0X4000 
l2[000]=0000000057344. 0X000000E000.l2[007]=0000000020480. 0X0000005000.l2[015]=0000000024576. 0X0000006000.l2[023]=0000000028672. 0X0000007000.l2[031]=0000000032768. 0X0000008000.l2[039]=0000000036864. 0X0000009000.l2[047]=0000000040960. 0X000000A000.l2[055]=0000000045056. 0X000000B000.
l2[063]=0000000049152. 0X000000C000.l2[070]=0000000053248. 0X000000D000.

L2 size:4096.
table[00000]=0000057344, 0X000000E000 table[00007]=0000020480, 0X0000005000 table[00015]=0000024576, 0X0000006000 table[00023]=0000028672, 0X0000007000 table[00031]=0000032768, 0X0000008000 table[00039]=0000036864, 0X0000009000 table[00047]=0000040960, 0X000000A000 table[00055]=0000045056, 0X000000B000 
table[00063]=0000049152, 0X000000C000 table[00070]=0000053248, 0X000000D000 
----- Level 2 Table -----<<

>>----- Partition Table -----
----- drv1 mbr info -----
起始扇区号：0 (l1=0， l2=0, cluster=0), 在镜像文件中的位置[(157344. 0XE000)-.(57856, 0XE200)).
0X55, 0XAA.
WIN95 FAT16 LBA.
80 01 00 01 0e 0f 1f 3f 63 32193 15.75MB 
   01 00 01 0f 1f 3f 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 
Empty.
00 00 00 00 00 00 00 00 0 0 0.00MB 
   00 00 00 00 00 00 


========= this is a test for list.
flag=1 sector_index=0 WIN95 FAT16 LBA.
80 01 00 01 0e 0f 1f 3f 63 32193 15.75MB 
   01 00 01 0f 1f 3f 
========= this is a test for list.
----- Partition Table -----<<

>>----- VBR Table -----
drv1 flag=1 sector_index=0 start_sector_no=63 起始扇区号：63 (l1 =0, l2=7, cluster=3584), 
在镜像文件中的位置[(24064 0X5E00)-(24576 0X6000)).
启动扇区:F6, F6 type:E.
bpb_BytesPerSector=512.
bpb_SectorsPerCluster=8.
bpb_ReservedSectorst=1.
bpb_FatCopies=2.
bpb_NumSectors=32193.
bpb_SectorsPerFAT=16.

WIN95 FAT16 LBA.
80 01 00 01 0e 0f 1f 3f 63 32193 15.75MB 
   01 00 01 0f 1f 3f 
----- VBR Table -----<<

>>----- F6 Sector -----
L2 Size:4096.
00000.offset:00057344.=0000E000 sector_no=000000.(CHS)=(0000 000 01) sector offset:0000 AA
00007.offset:00020480.=00005000 sector_no=000063.(CHS)=(0000 001 01) sector offset:0E00 F6
00015.offset:00024576.=00006000 sector_no=000126.(CHS)=(0000 002 01) sector offset:0C00 F6
00023.offset:00028672.=00007000 sector_no=000189.(CHS)=(0000 003 01) sector offset:0A00 F6
00031.offset:00032768.=00008000 sector_no=000252.(CHS)=(0000 004 01) sector offset:0800 F6
00039.offset:00036864.=00009000 sector_no=000315.(CHS)=(0000 005 01) sector offset:0600 F6
00047.offset:00040960.=0000A000 sector_no=000378.(CHS)=(0000 006 01) sector offset:0400 F6
00055.offset:00045056.=0000B000 sector_no=000441.(CHS)=(0000 007 01) sector offset:0200 F6
00063.offset:00049152.=0000C000 sector_no=000504.(CHS)=(0000 008 01) sector offset:0000 F6
00070.offset:00053248.=0000D000 sector_no=000567.(CHS)=(0000 009 01) sector offset:0E00 F6
idx=4096.
----- F6 Sector -----<<

clearList函数执行，链表已经清除
